[{"path":[]},{"path":"https://adriancorrendo.github.io/metrica/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://adriancorrendo.github.io/metrica/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://adriancorrendo.github.io/metrica/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://adriancorrendo.github.io/metrica/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://adriancorrendo.github.io/metrica/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement correndo@ksu.edu. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://adriancorrendo.github.io/metrica/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://adriancorrendo.github.io/metrica/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://adriancorrendo.github.io/metrica/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://adriancorrendo.github.io/metrica/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://adriancorrendo.github.io/metrica/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://adriancorrendo.github.io/metrica/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://adriancorrendo.github.io/metrica/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Adrian Correndo Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/articles/apsim_open.html","id":"introduction","dir":"Articles","previous_headings":"","what":"1. Introduction","title":"APSIM: Importing APSIM Classic and NewGeneration files","text":"metrica package developed assess prediction performance , among , crop simulation models APSIM. vignette introduces functionality metrica package applied facilitate opening APSIM output files R.","code":""},{"path":[]},{"path":"https://adriancorrendo.github.io/metrica/articles/apsim_open.html","id":"apsim-classic--out","dir":"Articles","previous_headings":"Import data from APSIM","what":"1. APSIM Classic (.out)","title":"APSIM: Importing APSIM Classic and NewGeneration files","text":"","code":"# Obtaining filepath from package folder apsim_out_filepath <- system.file(\"extdata/soybean.out\", package = \"metrica\")  # Use import_apsim_out for APSIM Classic output soybean.out <- metrica::import_apsim_out(filepath = apsim_out_filepath)  head(soybean.out) #>   Date (dd/mm/yyyy) yield (kg/ha) biomass (kg/ha) grain_protein (%) #> 1        16/05/2001        1449.8          2915.9            37.115 #> 2        10/05/2002        1092.5          2965.1            37.115 #> 3        23/04/2003        1368.9          3529.6            37.115 #> 4        26/04/2004        2121.6          4710.3            37.115 #> 5        09/05/2005        1950.3          4303.9            37.115 #> 6        20/04/2006        1670.6          3806.6            37.115 #>   GrainN (g/m^2) lai (m^2/m^2) oilGrainN (g/m^2) grain_oil_conc (%) #> 1           0.00             0                 0                0.4 #> 2           7.10             0                 0                0.4 #> 3           8.90             0                 0                0.4 #> 4          13.79             0                 0                0.4 #> 5          12.68             0                 0                0.4 #> 6          10.86             0                 0                0.4"},{"path":"https://adriancorrendo.github.io/metrica/articles/apsim_open.html","id":"apsim-nextgeneration--db","dir":"Articles","previous_headings":"Import data from APSIM","what":"1. APSIM NextGeneration (.db)","title":"APSIM: Importing APSIM Classic and NewGeneration files","text":"","code":"# Obtaining path from package folder apsim_db_folderpath <- system.file(\"extdata\", package = \"metrica\")  # Use import_apsim_db for APSIM NextGeneration output soybean.db <- metrica::import_apsim_db(filename = \"soybean.example.db\", folder = apsim_db_folderpath)  head(soybean.db) #>   CheckpointID SimulationID    Zone         Clock.Today Soybean.Phenology.Stage #> 1            1            1 paddock 2018-01-01 12:00:00                       1 #> 2            1            1 paddock 2018-01-02 12:00:00                       1 #> 3            1            1 paddock 2018-01-03 12:00:00                       1 #> 4            1            1 paddock 2018-01-04 12:00:00                       1 #> 5            1            1 paddock 2018-01-05 12:00:00                       1 #> 6            1            1 paddock 2018-01-06 12:00:00                       1 #>   Soybean.Phenology.CurrentStageName Soybean.AboveGround.Wt Yield #> 1                                                         0     0 #> 2                                                         0     0 #> 3                                                         0     0 #> 4                                                         0     0 #> 5                                                         0     0 #> 6                                                         0     0 #>   Soybean.Grain.Size Soybean.Grain.Number Soybean.Total.Wt Soybean.Leaf.FRGR #> 1                  0                    0                0                 0 #> 2                  0                    0                0                 0 #> 3                  0                    0                0                 0 #> 4                  0                    0                0                 0 #> 5                  0                    0                0                 0 #> 6                  0                    0                0                 0 #>   Soybean.Leaf.Fw Soybean.Leaf.Photosynthesis.FT Soybean.Leaf.Photosynthesis.FW #> 1               1                              0                              1 #> 2               1                              0                              1 #> 3               1                              0                              1 #> 4               1                              0                              1 #> 5               1                              0                              1 #> 6               1                              0                              1 #>   Soybean.WaterUptake(1) Soybean.WaterUptake(2) Soybean.WaterUptake(3) #> 1                     NA                     NA                     NA #> 2                     NA                     NA                     NA #> 3                     NA                     NA                     NA #> 4                     NA                     NA                     NA #> 5                     NA                     NA                     NA #> 6                     NA                     NA                     NA #>   Soybean.WaterUptake(4) Soybean.WaterUptake(5) Soybean.WaterUptake(6) #> 1                     NA                     NA                     NA #> 2                     NA                     NA                     NA #> 3                     NA                     NA                     NA #> 4                     NA                     NA                     NA #> 5                     NA                     NA                     NA #> 6                     NA                     NA                     NA #>   Soybean.WaterUptake(7) Soybean.WaterUptake(8) Soybean.WaterUptake(9) #> 1                     NA                     NA                     NA #> 2                     NA                     NA                     NA #> 3                     NA                     NA                     NA #> 4                     NA                     NA                     NA #> 5                     NA                     NA                     NA #> 6                     NA                     NA                     NA #>   Soybean.WaterUptake(10)       Date #> 1                      NA 2018-01-01 #> 2                      NA 2018-01-02 #> 3                      NA 2018-01-03 #> 4                      NA 2018-01-04 #> 5                      NA 2018-01-05 #> 6                      NA 2018-01-06  # If observed.data is already as a dataframe, the user may do the match using a simple code like this: # PO.dataframe <- simulated.data %>% left_join(., observed.data) *by = \"col\" arg. could be required*"},{"path":"https://adriancorrendo.github.io/metrica/articles/available_metrics_classification.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"Classification performance metrics and indices","text":"metrica package compiles +80 functions assess regression (continuous) classification (categorical) prediction performance multiple perspectives. classification (binomial multinomial) tasks, includes function visualize confusion matrix using ggplot2, 27 functions prediction scores including: accuracy, error rate, precision, recall, specificity, balanced accuracy (balacc), F-score (fscore), adjusted F-score (agf), G-mean (gmean), Bookmaker Informedness (bmi, .k.. Youden’s J-index), Markedness (deltaP), Matthews Correlation Coefficient (mcc), Cohen’s Kappa (khat), negative predictive value (npv), positive negative likelihood ratios (posLr, negLr), diagnostic odds ratio (dor), prevalence (preval), prevalence threshold (preval_t), critical success index (csi, .k.. threat score), false positive rate (FPR), false negative rate (FNR), false detection rate (FDR), false omission rate (), area ROC curve (AUC_roc). supervised models, always keep mind concept “cross-validation” since predicted values ideally come --bag samples (unseen training sets) avoid overestimation prediction performance.","code":""},{"path":"https://adriancorrendo.github.io/metrica/articles/available_metrics_classification.html","id":"using-the-functions","dir":"Articles","previous_headings":"","what":"Using the functions","title":"Classification performance metrics and indices","text":"two basic arguments common metrica functions: () obs(Oi; observed, .k.. actual, measured, truth, target, label), (ii) pred (Pi; predicted, .k.. simulated, fitted, modeled, estimate) values. Optional arguments include data allows call existing data frame containing observed predicted vectors, tidy, controls type output list (tidy = FALSE) data.frame (tidy = TRUE). binary classification (two classes), functions also require check pos_level arg., indicates alphanumeric order “positive level”. Normally, common binary denominations c(0,1), c(“Negative”, “Positive”), c(“FALSE”, “TRUE”), default pos_level = 2 (1, “Positive”, “TRUE”). However, cases also possible, c(“Crop”, “NoCrop”) user needs specify pos_level = 1. multiclass classification tasks, functions present atom arg. (logical TRUE / FALSE), controls output overall average estimate across classes, class-wise estimate. example, user might interested obtaining estimates precision recall possible class prediction.","code":""},{"path":"https://adriancorrendo.github.io/metrica/articles/available_metrics_classification.html","id":"list-of-classification-metrics-categorical-variables","dir":"Articles","previous_headings":"","what":"List of classification metrics* (categorical variables)","title":"Classification performance metrics and indices","text":"Note: classification functions automatically recognize number classes adjust estimations binary multiclass cases. However, binary classification tasks, user need check alphanumeric order level considered positive. default “pos_level = 2” based common denominations c(0,1), c(“Negative”,“Positive”), c(“TRUE”, “FALSE”).  List abbreviations: P = positive (true + false) N = negative (true + false) TP = true positive TN = true negative FP = false positive FN = false negative TPR = true positive rate TNR = true negative rate FPR = false positive rate FNR = false negative rate PPV = positive predictive value B = coefficient B (.k.. beta) indicating weight applied estimation fscore (\\(B^2\\)).","code":""},{"path":"https://adriancorrendo.github.io/metrica/articles/available_metrics_classification.html","id":"references","dir":"Articles","previous_headings":"","what":"References:","title":"Classification performance metrics and indices","text":"Ting K.M. (2017). Confusion Matrix. : Sammut C., Webb G.. (eds) Encyclopedia Machine Learning Data Mining. Springer, Boston, MA. Accuracy. (2017). : Sammut C., Webb G.. (eds) Encyclopedia Machine Learning Data Mining . Springer, Boston, MA. García, V., Mollineda, R.., Sánchez, J.S. (2009). Index Balanced Accuracy: Performance Measure Skewed Class Distributions. : Araujo, H., Mendonça, .M., Pinho, .J., Torres, M.. (eds) Pattern Recognition Image Analysis. IbPRIA 2009. Lecture Notes Computer Science, vol 5524. Springer-Verlag Berlin Heidelberg. Ting K.M. (2017). Precision Recall. : Sammut C., Webb G.. (eds) Encyclopedia Machine Learning Data Mining. Springer, Boston, MA. Sensitivity. (2017). : Sammut C., Webb G.. (eds) Encyclopedia Machine Learning Data Mining. Springer, Boston, MA. Ting K.M. (2017). Sensitivity Specificity. : Sammut C., Webb G.. (eds) Encyclopedia Machine Learning Data Mining. Springer, Boston, MA. Trevethan, R. (2017). Sensitivity, Specificity, Predictive Values: Foundations, Pliabilities, Pitfalls Research Practice. Front. Public Health 5:307 Goutte, C., Gaussier, E. (2005). Probabilistic Interpretation Precision, Recall F-Score, Implication Evaluation. : D.E. Losada J.M. Fernandez-Luna (Eds.): ECIR 2005. Advances Information Retrieval LNCS 3408, pp. 345–359, 2. Springer-Verlag Berlin Heidelberg. Maratea, ., Petrosino, ., Manzo, M. (2014). Adjusted-F measure kernel scaling imbalanced data learning. Inf. Sci. 257: 331-341. De Diego, .M., Redondo, .R., Fernández, R.R., Navarro, J., Moguerza, J.M. (2022). General Performance Score classification problems. Appl. Intell. (2022). Fowlkes, Edward B; Mallows, Colin L (1983). method comparing two hierarchical clusterings. Journal American Statistical Association. 78 (383): 553–569. Chicco, D., Jurman, G. (2020). advantages Matthews correlation coefficient (MCC) F1 score accuracy binary classification evaluation. BMC Genomics 21, 6 (2020). Youden, W.J. (1950). Index rating diagnostic tests. Cancer 3: 32-35. Powers, D.M.W. (2011). Evaluation: Precision, Recall F-Measure ROC, Informedness, Markedness & Correlation. Journal Machine Learning Technologies 2(1): 37–63. Chicco, D., Tötsch, N., Jurman, G. (2021). Matthews correlation coefficient (MCC) reliable balanced accuracy, bookmaker informedness, markedness two-class confusion matrix evaluation. BioData Min 14(1): 13. GlasaJeroen, .S., Lijmer, G., Prins, M.H., Bonsel, G.J., Bossuyta, P.M.M. (2009). diagnostic odds ratio: single indicator test performance. Journal Clinical Epidemiology 56(11): 1129-1135. Wang H., Zheng H. (2013). Negative Predictive Value. : Dubitzky W., Wolkenhauer O., Cho KH., Yokota H. (eds) Encyclopedia Systems Biology. Springer, New York, NY. Freeman, E.., Moisen, G.G. (2008). comparison performance threshold criteria binary classification terms predicted prevalence kappa. Ecol. Modell. 217(1-2): 45-58. Balayla, J. (2020). Prevalence threshold (φe) geometry screening curves. Plos one, 15(10):e0240215. Schaefer, J.T. (1990). critical success index indicator warning skill. Weather Forecasting 5(4): 570-575. Hanley, J.., McNeil, J.. (2017). meaning use area receiver operating characteristic (ROC) curve. Radiology 143(1): 29-36 Hand, D.J., Till, R.J. (2001). simple generalisation area ROC curve multiple class classification problems. Machine Learning 45: 171-186 Mandrekar, J.N. (2010). Receiver operating characteristic curve diagnostic test assessment. J. Thoracic Oncology 5(9): 1315-1316","code":""},{"path":"https://adriancorrendo.github.io/metrica/articles/available_metrics_regression.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"Regression performance metrics and indices","text":"metrica package compiles +80 functions assess regression (continuous) classification (categorical) prediction performance multiple perspectives. regression models, includes 4 plotting functions (scatter, tiles, density, & Bland-Altman plots), 48 prediction performance scores including error metrics (MBE, MAE, RAE, RMAE, MAPE, SMAPE, MSE, RMSE, RRMSE, RSR, PBE, iqRMSE), error decomposition (MLA, MLP, PLA, PLP, PAB, PPB, SB, SDSD, LCS, Ub, Uc, Ue), model efficiency (NSE, E1, Erel, KGE), indices agreement (d, d1, d1r, RAC, AC, lambda), goodness fit (r, R2, RSS, TSS, RSE), adjusted correlation coefficients (CCC, Xa, distance correlation-dcorr-, maximal information coefficient -MIC-), variability (uSD, var_u), symmetric regression coefficients (B0_sma, B1_sma). Specifically time-series predictions, metrica also includes Mean Absolute Scaled Error (MASE). supervised models, always keep mind concept “cross-validation” since predicted values ideally come --bag samples (unseen training sets) avoid overestimation prediction performance.","code":""},{"path":"https://adriancorrendo.github.io/metrica/articles/available_metrics_regression.html","id":"using-the-functions-","dir":"Articles","previous_headings":"","what":"Using the functions.","title":"Regression performance metrics and indices","text":"two basic arguments common metrica functions: () obs(Oi; observed, .k.. actual, measured, truth, target, label), (ii) pred (Pi; predicted, .k.. simulated, fitted, modeled, estimate) values. Optional arguments include data allows call existing data frame containing observed predicted vectors, tidy, controls type output list (tidy = FALSE) data.frame (tidy = TRUE). regression, specific functions regression also require define axis orientation. example, slope symmetric linear regression describing bivariate scatter (SMA).","code":""},{"path":[]},{"path":"https://adriancorrendo.github.io/metrica/articles/available_metrics_regression.html","id":"references","dir":"Articles","previous_headings":"","what":"References:","title":"Regression performance metrics and indices","text":"Correndo et al. (2021). Revisiting linear regression test agreement continuous predicted-observed datasets. Agric. Syst. 192, 103194. Duveiller et al. (2016). Revisiting concept symmetric index agreement continuous datasets. Sci. Rep. 6, 1-14. Gupta et al. (1999). Status automatic calibration hydrologic models: Comparison multilevel expert calibration. J. Hydrologic Eng. 4(2): 135-143. Janssen & Heuberger (1995). Calibration process-oriented models. Ecol. Modell. 83, 55-66. Ji & Gallo (2006). agreement coefficient image comparison. Photogramm. Eng. Remote Sensing 7, 823–833. Kling et al. (2012). Runoff conditions upper Danube basin ensemble climate change scenarios. J. Hydrol., 424-425, 264-277. Kirch (2008). Pearson’s Correlation Coefficient. : Kirch W. (eds) Encyclopedia Public Health. Springer, Dordrecht. Krause et al. (2005). Comparison different efficiency criteria hydrological model assessment. Adv. Geosci. 5, 89–97. Kobayashi & Salam (2000). Comparing simulated measured values using mean squared deviation components. Agron. J. 92, 345–352. Legates & McCabe (1999). Evaluating use “goodness--fit” measures hydrologic hydroclimatic model validation. Water Resour. Res. Lin (1989). concordance correlation coefficient evaluate reproducibility. Biometrics 45 (1), 255–268. Makridakis (1993). Accuracy measures: theoretical practical concerns. Int. J. Forecast. 9, 527-529. Moriasi et al. (2007). Model Evaluation Guidelines Systematic Quantification Accuracy Watershed Simulations. Trans. ASABE 50, 885–900. Nash & Sutcliffe (1970). River flow forecasting conceptual models part - discussion principles. J. Hydrol. 10(3), 292-290. Robinson (1957). statistical measurement agreement. . Sociol. Rev. 22(1), 17-25. Robinson (1959). geometric interpretation agreement. . Sociol. Rev. 24(3), 338-345. Smith & Rose (1995). Model goodness--fit analysis using regression related techniques. Ecol. Model. 77, 49–64. Warton et al. (2006). Bivariate line-fitting methods allometry. Biol. Rev. Camb. Philos. Soc. 81, 259–291. Willmott (1981). validation models. Phys. Geogr. 2, 184–194. Willmott et al. (1985). Statistics evaluation comparison models. J. Geophys. Res. 90, 8995. Willmott & Matsuura (2005). Advantages mean absolute error (MAE) root mean square error (RMSE) assessing average model performance. Clim. Res. 30, 79–82. Willmott et al. (2012). refined index model performance. Int. J. Climatol. 32, 2088–2094. Yang et al. (2014). evaluation statistical methods testing performance crop models observed data. Agric. Syst. 127, 81-89. Szekely, G.J., Rizzo, M.L., Bakirov, N.K. (2007). Measuring testing dependence correlation distances. Annals Statistics, Vol. 35(6): 2769-2794. Reshef, D., Reshef, Y., Finucane, H., Grossman, S., McVean, G., Turnbaugh, P., Lander, R., Mitzenmacher, M., Sabeti, P. (2011). Detecting novel associations large datasets. Science 334, 6062. Hyndman, R.J., Koehler, .B. (2006). Another look measures forecast accuracy. Int. J. Forecast","code":""},{"path":"https://adriancorrendo.github.io/metrica/articles/classification_case.html","id":"introduction","dir":"Articles","previous_headings":"","what":"1. Introduction","title":"Classification case: Assessing the performance of remote sensing models","text":"metrica package developed visualize compute level agreement observed ground-truth values model-derived (e.g., mechanistic empirical) predicted. package intended fit following workflow: data set containing observed values used train model trained model used generate predicted data frame containing least observed model-predicted values created metrica package used compute evaluate classification model based observed predicted values metrica package used visualize model fit selected fit metrics vignette introduces functionality metrica package applied observed model-predicted values binary land cover classification scenario, two classes vegetation (1) non-vegetation (0)). Let’s begin loading packages needed.  ## Libraries","code":"library(metrica) library(dplyr) library(purrr) library(tidyr)"},{"path":[]},{"path":"https://adriancorrendo.github.io/metrica/articles/classification_case.html","id":"kansas-land-cover-data","dir":"Articles","previous_headings":"2. Example datasets","what":"2.1. Kansas Land Cover data","title":"Classification case: Assessing the performance of remote sensing models","text":"Now load binary land_cover data set already included metrica package. data set contains two columns: predicted: model-predicted (random forest) land cover, vegetation = 1 = 0, actual: ground-truth observed land cover, 0 = vegetation 1 = ","code":"# Load binary_landCover <- metrica::land_cover  # Printing first observations head(binary_landCover) #>   actual predicted #> 1      0         0 #> 2      1         1 #> 3      1         1 #> 4      0         0 #> 5      0         0 #> 6      1         1"},{"path":"https://adriancorrendo.github.io/metrica/articles/classification_case.html","id":"maize-phenology","dir":"Articles","previous_headings":"2. Example datasets","what":"2.2. Maize Phenology","title":"Classification case: Assessing the performance of remote sensing models","text":"Now load multinomial maize_phenology data set, also already included metrica package. multiclass data set presents 16 different classes corresponding phenological stages maize (Zea Mays (L.)) crop.","code":"# Load multi_maize_phen <- metrica::maize_phenology  # Printing first observations head(multi_maize_phen) #>   actual predicted #> 1     R1       V18 #> 2     R2        R1 #> 3     R2        R1 #> 4     R2        R2 #> 5     R2        R2 #> 6     R2        R2"},{"path":[]},{"path":"https://adriancorrendo.github.io/metrica/articles/classification_case.html","id":"confusion-matrix","dir":"Articles","previous_headings":"3 Visual assessment of agreement","what":"3.1 Confusion matrix","title":"Classification case: Assessing the performance of remote sensing models","text":"simplest way visually assess agreement observed predicted classes confusion matrix. can use function confusion_matrix() metrica package. function requires specifying: data frame object name (data argument) name column containing observed values (obs argument) name column containing predicted values (pred argument) output confusion_matrix() function either table (plot = FALSE) ggplot2 object (plot = TRUE) can customized:","code":""},{"path":"https://adriancorrendo.github.io/metrica/articles/classification_case.html","id":"binary","dir":"Articles","previous_headings":"3 Visual assessment of agreement","what":"3.1. Binary","title":"Classification case: Assessing the performance of remote sensing models","text":"","code":"# a. Print binary_landCover %>% confusion_matrix(obs = actual, pred = predicted,                                        plot = FALSE,                                       unit = \"count\") #>          OBSERVED #> PREDICTED   0   1 #>         0 181   6 #>         1   6  92  # b. Plot binary_landCover %>% confusion_matrix(obs = actual, pred = predicted,                                        plot = TRUE,                                       colors = c(low=\"#ffe8d6\" , high=\"#892b64\"),                                        unit = \"count\") # c. Unit = proportion binary_landCover %>% confusion_matrix(obs = actual, pred = predicted,                                        plot = TRUE,                                       colors = c(low=\"#f9dbbd\" , high=\"#892b64\"),                                        unit = \"proportion\")"},{"path":"https://adriancorrendo.github.io/metrica/articles/classification_case.html","id":"multiclass","dir":"Articles","previous_headings":"3 Visual assessment of agreement","what":"3.2. Multiclass","title":"Classification case: Assessing the performance of remote sensing models","text":"","code":"# a. Print multi_maize_phen %>% confusion_matrix(obs = actual, pred = predicted,                                        plot = FALSE,                                        unit = \"count\") #>          OBSERVED #> PREDICTED R1 R2 R3 R4 R5 R6 V10 V12 V13 V14 V15 V16 V18 V19 V9 VT #>       R1   0  2  0  0  0  0   0   0   0   0   0   0   0   0  0  0 #>       R2   0  4  0  0  0  0   0   0   0   1   0   0   0   0  0  0 #>       R3   0  1  2  0  0  0   0   0   0   0   0   0   0   0  0  0 #>       R4   0  0  0  6  0  0   0   0   0   0   0   0   0   0  0  0 #>       R5   0  0  0  0 12  1   0   0   0   0   0   0   0   0  0  0 #>       R6   0  0  0  0  3 32   0   0   0   0   0   0   0   0  0  0 #>       V10  0  0  0  0  0  0   6   0   0   1   0   0   0   0  0  0 #>       V12  0  0  0  0  0  0   0   7   1   0   0   0   0   0  0  0 #>       V13  0  0  0  0  0  0   0   0   6   0   0   0   0   0  0  0 #>       V14  0  0  0  0  0  0   0   0   0   2   0   0   0   0  0  0 #>       V15  0  0  0  0  0  0   0   0   0   0   1   0   0   0  0  1 #>       V16  0  0  0  0  0  0   0   0   0   0   0   2   0   0  0  0 #>       V18  1  0  0  0  0  0   0   0   0   0   0   0   4   0  0  0 #>       V19  0  0  0  0  0  0   0   0   0   0   0   0   0   2  0  0 #>       V9   0  0  0  0  0  0   0   0   0   0   0   0   0   0  2  0 #>       VT   0  0  0  0  0  0   0   0   0   0   0   0   0   0  0  3  # b. Plot multi_maize_phen %>% confusion_matrix(obs = actual, pred = predicted,                                        plot = TRUE,                                        colors = c(low=\"grey85\" , high=\"steelblue\"),                                        unit = \"count\")"},{"path":"https://adriancorrendo.github.io/metrica/articles/classification_case.html","id":"numerical-assessment-of-agreement","dir":"Articles","previous_headings":"","what":"4. Numerical assessment of agreement","title":"Classification case: Assessing the performance of remote sensing models","text":"metrica package contains functions 26 scoring rules assess agreement observed predicted values classification data. list classification metrics including name, definition, details, formula, function name, please check . metric functions take least three arguments: data frame object name (data argument, optional) name column containing observed values (obs argument) name column containing predicted values (pred argument) integer (1 2) indicating alphanumerical order positive event (pos_level argument, Default = 2) TRUE/FALSE indicating estimate metrics single class (atom argument, Default = FALSE). argument functional multiclass datasets. TRUE/FALSE indicating store numeric result list (tidy argument, Default = FALSE), data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/articles/classification_case.html","id":"single-metrics","dir":"Articles","previous_headings":"4. Numerical assessment of agreement","what":"4.1. Single metrics","title":"Classification case: Assessing the performance of remote sensing models","text":"user can choose calculate single metric, calculate metrics . calculate single metric, metric function can called. example, calculate \\(accuracy\\), can use accuracy() function: considering imbalanced observations across classes can call balacc() function balanced accuracy: Similarly, calculate precision, can use precision() function:","code":"# Binary binary_landCover %>% accuracy(data = ., obs = actual, pred = predicted, tidy = TRUE) #>    accuracy #> 1 0.9578947  # Multiclass maize_phenology %>% accuracy(data = ., obs = actual, pred = predicted, tidy = TRUE) #>    accuracy #> 1 0.8834951 # Binary binary_landCover %>% balacc(data = ., obs = actual, pred = predicted, tidy = TRUE) #>     balacc #> 1 0.953345  # Multiclass maize_phenology %>% balacc(data = ., obs = actual, pred = predicted, tidy = TRUE) #>      balacc #> 1 0.9160466 # Binary binary_landCover %>% precision(data = ., obs = actual, pred = predicted, tidy = TRUE) #>   precision #> 1 0.9387755  # Multiclass maize_phenology %>% precision(data = ., obs = actual, pred = predicted, tidy = TRUE) #>   precision #> 1 0.8335108"},{"path":"https://adriancorrendo.github.io/metrica/articles/classification_case.html","id":"metrics-summary","dir":"Articles","previous_headings":"4. Numerical assessment of agreement","what":"4.2. Metrics summary","title":"Classification case: Assessing the performance of remote sensing models","text":"user can also calculate metrics using function metrics_summary(): Alternatively, user looking specific metrics, within function metrics_summary(), user can pass list desired metrics using argument “metrics_list” follows:","code":"# Get all at once with metrics_summary() # Binary binary_landCover %>% metrics_summary(data = ., obs = actual, pred = predicted, type = \"classification\") #>         Metric        Score #> 1     accuracy   0.95789474 #> 2   error_rate   0.04210526 #> 3    precision   0.93877551 #> 4       recall   0.93877551 #> 5  specificity   0.96791444 #> 6       balacc   0.95334497 #> 7       fscore   0.93877551 #> 8          agf   0.93877551 #> 9        gmean   0.95323364 #> 10        khat   0.90668995 #> 11         mcc   0.90668995 #> 12         fmi   0.93877551 #> 13         bmi   0.90668995 #> 14         csi   0.32974910 #> 15      deltap   0.90668995 #> 16       posLr  29.25850340 #> 17       negLr   0.06325403 #> 18         dor 462.55555556 #> 19         npv   0.96791444 #> 20         FPR   0.03208556 #> 21         FNR   0.06122449 #> 22         FDR   0.06122449 #> 23         FOR   0.03208556 #> 24      preval   0.34385965 #> 25    preval_t   0.50382084 #> 26     AUC_roc   0.41849817  # Multiclass multi_maize_phen %>% metrics_summary(data = ., obs = actual, pred = predicted, type = \"classification\") #> Warning in metrica::fscore(data = ~., obs = ~actual, pred = ~predicted, : For #> multiclass cases, the fscore should be estimated at a class level. Please, #> consider using `atom = TRUE` #> Warning in metrica::agf(data = ~., obs = ~actual, pred = ~predicted, pos_level #> = pos_level): For multiclass cases, the agf should be estimated at a class #> level. Please, consider using `atom = TRUE` #> Warning in metrica::fmi(data = ~., obs = ~actual, pred = ~predicted, pos_level #> = pos_level): The Fowlkes-Mallows Index is not available for multiclass cases. #> The result has been recorded as NaN. #> Warning in metrica::preval(data = ~., obs = ~actual, pred = ~predicted, : For #> multiclass cases, prevalence should be estimated at a class level. A NaN has #> been recorded as the result. Please, use `atom = TRUE` #> Warning in metrica::preval_t(data = ~., obs = ~actual, pred = ~predicted, : For multiclass cases, prevalence threshold should be estimated at a class level.  #>       A NaN has been recorded as the result. Please, use `atom = TRUE`. #>         Metric        Score #> 1     accuracy 8.834951e-01 #> 2   error_rate 1.165049e-01 #> 3    precision 8.335108e-01 #> 4       recall 8.405168e-01 #> 5  specificity 9.915764e-01 #> 6       balacc 9.160466e-01 #> 7       fscore 8.369991e-01 #> 8          agf 8.370017e-01 #> 9        gmean 9.129275e-01 #> 10        khat 8.624527e-01 #> 11         mcc 8.636129e-01 #> 12         fmi          NaN #> 13         bmi 8.320932e-01 #> 14         csi 5.577765e-02 #> 15      deltap 8.254693e-01 #> 16       posLr 9.978151e+01 #> 17       negLr 1.608381e-01 #> 18         dor 6.203850e+02 #> 19         npv 9.919585e-01 #> 20         FPR 8.423572e-03 #> 21         FNR 1.594832e-01 #> 22         FDR 1.664892e-01 #> 23         FOR 8.041482e-03 #> 24      preval          NaN #> 25    preval_t          NaN #> 26     AUC_roc 9.160466e-01 # Get a selected list at once with metrics_summary() selected_class_metrics <- c(\"accuracy\", \"precision\", \"recall\", \"fscore\")  # Binary bin_sum <- binary_landCover %>%    metrics_summary(data = .,                    obs = actual, pred = predicted,                    type = \"classification\",                   metrics_list = selected_class_metrics, pos_level = 1)   # Multiclass multi_maize_phen %>%    metrics_summary(data = .,                    obs = actual, pred = predicted,                    type = \"classification\",                   metrics_list = selected_class_metrics) #> Warning in metrica::fscore(data = ~., obs = ~actual, pred = ~predicted, : For #> multiclass cases, the fscore should be estimated at a class level. Please, #> consider using `atom = TRUE` #> Warning in metrica::agf(data = ~., obs = ~actual, pred = ~predicted, pos_level #> = pos_level): For multiclass cases, the agf should be estimated at a class #> level. Please, consider using `atom = TRUE` #> Warning in metrica::fmi(data = ~., obs = ~actual, pred = ~predicted, pos_level #> = pos_level): The Fowlkes-Mallows Index is not available for multiclass cases. #> The result has been recorded as NaN. #> Warning in metrica::preval(data = ~., obs = ~actual, pred = ~predicted, : For #> multiclass cases, prevalence should be estimated at a class level. A NaN has #> been recorded as the result. Please, use `atom = TRUE` #> Warning in metrica::preval_t(data = ~., obs = ~actual, pred = ~predicted, : For multiclass cases, prevalence threshold should be estimated at a class level.  #>       A NaN has been recorded as the result. Please, use `atom = TRUE`. #>      Metric     Score #> 1  accuracy 0.8834951 #> 2 precision 0.8335108 #> 3    recall 0.8405168 #> 4    fscore 0.8369991"},{"path":"https://adriancorrendo.github.io/metrica/articles/classification_case.html","id":"class-wise-metrics-atom-true","dir":"Articles","previous_headings":"4. Numerical assessment of agreement","what":"4.3. Class wise metrics (atom = TRUE)","title":"Classification case: Assessing the performance of remote sensing models","text":"multiclass cases, classification metrics can () estimated class level simply overall average across classes. exceptions kappa (khat), mcc, fmi, AUC_roc, classification metrics can estimated class level using argument atom = TRUE, follows:","code":"# Precision maize_phenology %>% metrica::precision(obs = actual, pred = predicted, atom = TRUE, tidy = TRUE) #>     precision #> R1  0.0000000 #> R2  0.8000000 #> R3  0.6666667 #> R4  1.0000000 #> R5  0.9230769 #> R6  0.9142857 #> V10 0.8571429 #> V12 0.8750000 #> V13 1.0000000 #> V14 1.0000000 #> V15 0.5000000 #> V16 1.0000000 #> V18 0.8000000 #> V19 1.0000000 #> V9  1.0000000 #> VT  1.0000000 # Recall maize_phenology %>% metrica::recall(obs = actual, pred = predicted, atom = TRUE, tidy = TRUE) #>        recall #> R1  0.0000000 #> R2  0.5714286 #> R3  1.0000000 #> R4  1.0000000 #> R5  0.8000000 #> R6  0.9696970 #> V10 1.0000000 #> V12 1.0000000 #> V13 0.8571429 #> V14 0.5000000 #> V15 1.0000000 #> V16 1.0000000 #> V18 1.0000000 #> V19 1.0000000 #> V9  1.0000000 #> VT  0.7500000 # Specificity maize_phenology %>% metrica::specificity(obs = actual, pred = predicted, atom = TRUE, tidy = TRUE) #>          spec #> R1  0.9803922 #> R2  0.9895833 #> R3  0.9900990 #> R4  1.0000000 #> R5  0.9886364 #> R6  0.9571429 #> V10 0.9896907 #> V12 0.9895833 #> V13 1.0000000 #> V14 1.0000000 #> V15 0.9901961 #> V16 1.0000000 #> V18 0.9898990 #> V19 1.0000000 #> V9  1.0000000 #> VT  1.0000000  # atom = TRUE available for more functions available (remove #) # F-score # maize_phenology %>% metrica::fscore(obs = actual, pred = predicted, atom = TRUE, tidy = TRUE) # # Adjusted F-score # maize_phenology %>% metrica::agf(obs = actual, pred = predicted, atom = TRUE, tidy = TRUE) # # G-mean # maize_phenology %>% metrica::gmean(obs = actual, pred = predicted, atom = TRUE, tidy = TRUE) # # Negative predictive value # maize_phenology %>% metrica::npv(obs = actual, pred = predicted, atom = TRUE, tidy = TRUE) # # Prevalence # maize_phenology %>% metrica::preval(obs = actual, pred = predicted, atom = TRUE, tidy = TRUE) # # Prevalence threshold # maize_phenology %>% metrica::preval_t(obs = actual, pred = predicted, atom = TRUE, tidy = TRUE) # # False omission rate # maize_phenology %>% metrica::FOR(obs = actual, pred = predicted, atom = TRUE, tidy = TRUE) # # False detection rate # maize_phenology %>% metrica::FDR(obs = actual, pred = predicted, atom = TRUE, tidy = TRUE) # # False positive rate # maize_phenology %>% metrica::FPR(obs = actual, pred = predicted, atom = TRUE, tidy = TRUE) # # Falase negative rate # maize_phenology %>% metrica::FNR(obs = actual, pred = predicted, atom = TRUE, tidy = TRUE) # # Delta-p # maize_phenology %>% metrica::deltap(obs = actual, pred = predicted, atom = TRUE, tidy = TRUE) # # Critical Success Index # maize_phenology %>% metrica::csi(obs = actual, pred = predicted, atom = TRUE, tidy = TRUE) # # Bookmaker Informedness # maize_phenology %>% metrica::bmi(obs = actual, pred = predicted, atom = TRUE, tidy = TRUE) # # Positive likelihood ratio # maize_phenology %>% metrica::posLr(obs = actual, pred = predicted, atom = TRUE, tidy = TRUE) # # Negative likelihood ratio # maize_phenology %>% metrica::negLr(obs = actual, pred = predicted, atom = TRUE, tidy = TRUE) # # Diagnostic odds ratio # maize_phenology %>% metrica::dor(obs = actual, pred = predicted, atom = TRUE, tidy = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/articles/classification_case.html","id":"multiple-models","dir":"Articles","previous_headings":"4. Numerical assessment of agreement","what":"4.4. Multiple models","title":"Classification case: Assessing the performance of remote sensing models","text":"cases, multiple runs model available compare vs. observed values (e.g. cross-validation folds). Thus, can also fit agreement analysis several datasets follows:","code":"set.seed(15) # Let's simulated two extra runs of the same model for Land Cover fold_2 <- data.frame(actual = sample(c(0,1), 285, replace = TRUE),                      predicted = sample(c(0,1), 285, replace = TRUE)) fold_3 <- data.frame(actual = sample(c(0,1), 285, replace = TRUE),                      predicted = sample(c(0,1), 285, replace = TRUE))  # a. Create nested df with the folds binary_nested_folds <- bind_rows(list(fold_1 = binary_landCover,                                        fold_2 = fold_2,                                       fold_3 = fold_3),                              .id = \"id\") %>%   dplyr::group_by(id) %>% tidyr::nest()  head(binary_nested_folds %>% group_by(id) %>% dplyr::slice_head(n=2)) #> # A tibble: 3 × 2 #> # Groups:   id [3] #>   id     data               #>   <chr>  <list>             #> 1 fold_1 <tibble [285 × 2]> #> 2 fold_2 <tibble [285 × 2]> #> 3 fold_3 <tibble [285 × 2]>  # b. Run  binary_folds_summary <- binary_nested_folds %>%    # Store metrics in new.column \"performance\"   dplyr::mutate(performance =                    purrr::map(data,                              ~metrica::metrics_summary(data = .,                                                         obs = actual, pred = predicted,                                                         type = \"classification\"))) %>%    dplyr::select(-data) %>%    tidyr::unnest(cols = performance) %>%    dplyr::arrange(Metric)  head(binary_folds_summary) #> # A tibble: 6 × 3 #> # Groups:   id [3] #>   id     Metric   Score #>   <chr>  <chr>    <dbl> #> 1 fold_1 AUC_roc 0.418  #> 2 fold_2 AUC_roc 0.446  #> 3 fold_3 AUC_roc 0.513  #> 4 fold_1 FDR     0.0612 #> 5 fold_2 FDR     0.620  #> 6 fold_3 FDR     0.471"},{"path":[]},{"path":"https://adriancorrendo.github.io/metrica/articles/classification_case.html","id":"using-group_map","dir":"Articles","previous_headings":"4. Numerical assessment of agreement > 4.4. Multiple models","what":"4.4.1.1. Using group_map()","title":"Classification case: Assessing the performance of remote sensing models","text":"","code":"non_nested_folds <- binary_nested_folds %>% unnest(cols = \"data\")   # Using group_map() binary_folds_summary_2 <- non_nested_folds %>%    dplyr::group_by(id) %>%    dplyr::group_map(~metrics_summary(data = ., obs = actual, pred = predicted, type = \"classification\"))  binary_folds_summary_2 #> [[1]] #>         Metric        Score #> 1     accuracy   0.95789474 #> 2   error_rate   0.04210526 #> 3    precision   0.93877551 #> 4       recall   0.93877551 #> 5  specificity   0.96791444 #> 6       balacc   0.95334497 #> 7       fscore   0.93877551 #> 8          agf   0.93877551 #> 9        gmean   0.95323364 #> 10        khat   0.90668995 #> 11         mcc   0.90668995 #> 12         fmi   0.93877551 #> 13         bmi   0.90668995 #> 14         csi   0.32974910 #> 15      deltap   0.90668995 #> 16       posLr  29.25850340 #> 17       negLr   0.06325403 #> 18         dor 462.55555556 #> 19         npv   0.96791444 #> 20         FPR   0.03208556 #> 21         FNR   0.06122449 #> 22         FDR   0.06122449 #> 23         FOR   0.03208556 #> 24      preval   0.34385965 #> 25    preval_t   0.50382084 #> 26     AUC_roc   0.41849817 #>  #> [[2]] #>         Metric      Score #> 1     accuracy  0.4350877 #> 2   error_rate  0.5649123 #> 3    precision  0.3795620 #> 4       recall  0.4062500 #> 5  specificity  0.4585987 #> 6       balacc  0.4324244 #> 7       fscore  0.3924528 #> 8          agf  0.3925343 #> 9        gmean  0.4316315 #> 10        khat -0.1342793 #> 11         mcc -0.1345500 #> 12         fmi  0.3926794 #> 13         bmi -0.1351513 #> 14         csi  0.2488038 #> 15      deltap -0.1339515 #> 16       posLr  0.7503676 #> 17       negLr  1.2947049 #> 18         dor  0.5795666 #> 19         npv  0.4864865 #> 20         FPR  0.5414013 #> 21         FNR  0.5937500 #> 22         FDR  0.6204380 #> 23         FOR  0.5135135 #> 24      preval  0.4491228 #> 25    preval_t  0.5151462 #> 26     AUC_roc  0.4457023 #>  #> [[3]] #>         Metric      Score #> 1     accuracy 0.51578947 #> 2   error_rate 0.48421053 #> 3    precision 0.52857143 #> 4       recall 0.50684932 #> 5  specificity 0.52517986 #> 6       balacc 0.51601459 #> 7       fscore 0.51748252 #> 8          agf 0.51752352 #> 9        gmean 0.51593318 #> 10        khat 0.03199606 #> 11         mcc 0.03202444 #> 12         fmi 0.51759643 #> 13         bmi 0.03202917 #> 14         csi 0.34741784 #> 15      deltap 0.03201970 #> 16       posLr 1.06745538 #> 17       negLr 0.93901295 #> 18         dor 1.13678451 #> 19         npv 0.50344828 #> 20         FPR 0.47482014 #> 21         FNR 0.49315068 #> 22         FDR 0.47142857 #> 23         FOR 0.49655172 #> 24      preval 0.51228070 #> 25    preval_t 0.50444076 #> 26     AUC_roc 0.51257025"},{"path":"https://adriancorrendo.github.io/metrica/articles/classification_case.html","id":"using-summarise","dir":"Articles","previous_headings":"4. Numerical assessment of agreement > 4.4. Multiple models","what":"4.4.1.2. Using summarise()","title":"Classification case: Assessing the performance of remote sensing models","text":"","code":"# Using summarise() binary_folds_summary_3 <- non_nested_folds %>%    dplyr::group_by(id) %>%    dplyr::summarise(metrics_summary(obs = actual, pred = predicted, type = \"classification\")) %>%   dplyr::arrange(Metric) #> Warning: Returning more (or less) than 1 row per `summarise()` group was deprecated in #> dplyr 1.1.0. #> ℹ Please use `reframe()` instead. #> ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` #>   always returns an ungrouped data frame and adjust accordingly. #> `summarise()` has grouped output by 'id'. You can override using the `.groups` #> argument.   binary_folds_summary_3 #> # A tibble: 78 × 3 #> # Groups:   id [3] #>    id     Metric   Score #>    <chr>  <chr>    <dbl> #>  1 fold_1 AUC_roc 0.418  #>  2 fold_2 AUC_roc 0.446  #>  3 fold_3 AUC_roc 0.513  #>  4 fold_1 FDR     0.0612 #>  5 fold_2 FDR     0.620  #>  6 fold_3 FDR     0.471  #>  7 fold_1 FNR     0.0612 #>  8 fold_2 FNR     0.594  #>  9 fold_3 FNR     0.493  #> 10 fold_1 FOR     0.0321 #> # … with 68 more rows"},{"path":[]},{"path":"https://adriancorrendo.github.io/metrica/articles/classification_case.html","id":"customizing-the-confusion-matrix","dir":"Articles","previous_headings":"5. Visual Assessment","what":"5.1. Customizing the confusion matrix","title":"Classification case: Assessing the performance of remote sensing models","text":"print metrics confusion_matrix(), just use print.metrics = TRUE. Warning: forget specify ‘metrics.list’ choice wisely:  Also, ggplot element, outputs flexible edition:","code":"selected_metrics <- c(\"accuracy\", \"precision\", \"recall\", \"khat\",                    \"mcc\", \"fscore\", \"agf\", \"npv\", \"FPR\", \"FNR\")  binary_matrix_metrics <-    binary_landCover %>%    confusion_matrix(obs = actual, pred = predicted,                     plot = TRUE,                    colors = c(low=\"#ffe8d6\" , high=\"#892b64\"),                     unit = \"count\",                      # Print metrics_summary                    print_metrics = TRUE,                    # List of performance metrics                    metrics_list = selected_metrics,                    # Position (bottom or top)                    position_metrics = \"bottom\")  binary_matrix_metrics multinomial_matrix_metrics <-   maize_phenology %>%    confusion_matrix(obs = actual, pred = predicted,                     plot = TRUE,                     colors = c(low=\"grey85\" , high=\"steelblue\"),                     unit = \"count\",                    # Print metrics_summary                    print_metrics = TRUE,                    # List of performance metrics                    metrics_list = selected_metrics,                    # Position (bottom or top)                    position_metrics = \"bottom\") #> Warning in metrica::fscore(data = ~data, obs = ~actual, pred = ~predicted, : #> For multiclass cases, the fscore should be estimated at a class level. Please, #> consider using `atom = TRUE` #> Warning in metrica::agf(data = ~data, obs = ~actual, pred = ~predicted, : For #> multiclass cases, the agf should be estimated at a class level. Please, #> consider using `atom = TRUE` #> Warning in metrica::fmi(data = ~data, obs = ~actual, pred = ~predicted, : The #> Fowlkes-Mallows Index is not available for multiclass cases. The result has #> been recorded as NaN. #> Warning in metrica::preval(data = ~data, obs = ~actual, pred = ~predicted, : #> For multiclass cases, prevalence should be estimated at a class level. A NaN #> has been recorded as the result. Please, use `atom = TRUE` #> Warning in metrica::preval_t(data = ~data, obs = ~actual, pred = ~predicted, : For multiclass cases, prevalence threshold should be estimated at a class level.  #>       A NaN has been recorded as the result. Please, use `atom = TRUE`.    multinomial_matrix_metrics binary_matrix_metrics +   # Modify labels   ggplot2::labs(x = \"Observed Vegetation\",         y = \"Predicted Vegetation\",        title = \"Binary Confusion Matrix\") multinomial_matrix_metrics +   # Modify labels   ggplot2::labs(x = \"Observed Corn Phenology\",         y = \"Predicted Corn Phenology\",        title = \"Multinomial Confusion Matrix\")+   # Modify theme   ggplot2::theme_light()"},{"path":"https://adriancorrendo.github.io/metrica/articles/classification_case.html","id":"exporting","dir":"Articles","previous_headings":"","what":"6. Exporting","title":"Classification case: Assessing the performance of remote sensing models","text":"export metrics summary table, user can simply write file function write.csv(): Similarly, export plot, user can simply write file function ggsave():","code":"metrics_summary(data = binary_landCover,                 obs = obs,                  pred = pred,                 type = \"classification\") %>%   write.csv(\"binary_landcover_metrics_summary.csv\") ggsave(plot = multinomial_matrix_metrics,        \"multinomial_matrix_metrics.png\",        width = 8,        height = 7)"},{"path":"https://adriancorrendo.github.io/metrica/articles/regression_case.html","id":"introduction","dir":"Articles","previous_headings":"","what":"1. Introduction","title":"Regression case: Assessing model agreement in wheat grain nitrogen content prediction","text":"metrica package developed visualize compute level agreement observed ground-truth values model-derived (e.g., mechanistic empirical) predictions. package intended fit following workflow: data set containing observed values used train model trained model used generate predictions data frame containing least observed model-predicted values created metrica package used compute goodness fit error metrics based observed predicted values metrica package used visualize model fit selected fit metrics vignette introduces functionality metrica package applied observed model-predicted values wheat grain nitrogen (N) content (grams N \\(m^{-2}\\)).","code":""},{"path":"https://adriancorrendo.github.io/metrica/articles/regression_case.html","id":"wheat-grain-n-content","dir":"Articles","previous_headings":"","what":"2. Wheat grain N content","title":"Regression case: Assessing model agreement in wheat grain nitrogen content prediction","text":"Let’s begin loading packages needed. Now load wheat data set included metrica package. data set contains two columns: pred: model-predicted wheat grain N content, g N \\(m^{-2}\\), obs: ground-truth observed wheat grain N content, g N \\(m^{-2}\\)","code":"library(ggplot2) library(dplyr) library(metrica) # Load data(wheat)  # Printing first observations head(wheat) #>        pred    obs #> 1  2.577314  2.544 #> 2  3.989590  4.831 #> 3  5.645253  6.121 #> 4 13.125101 10.960 #> 5  4.955917  5.767 #> 6  6.687800  8.222"},{"path":[]},{"path":"https://adriancorrendo.github.io/metrica/articles/regression_case.html","id":"scatterplot-of-pred-vs--obs","dir":"Articles","previous_headings":"3. Visual assessment of agreement","what":"3.1 Scatterplot of pred vs. obs","title":"Regression case: Assessing model agreement in wheat grain nitrogen content prediction","text":"simplest way visually assess agreement observed predicted values scatterplot. can use function scatter_plot() metrica package create scatterplot. function requires specifying least: data frame object name (data argument) name column containing observed values (obs argument) name column containing predicted values (pred argument) Besides scatterplot, function also adds plot 1:1 line (solid line) linear regression line (dashed line).  default behavior scatter_plot() places obs column x axis pred column y axis (orientation = \"PO\"). can inverted changing argument orientation “OP”:  output scatter_plot() function ggplot2 object can customized:","code":"scatter_plot(data = wheat,               obs = obs,               pred = pred) scatter_plot(data = wheat,               obs = obs,               pred = pred,              orientation = \"OP\") scatter_plot(data = wheat,               obs = obs,               pred = pred,              orientation = \"OP\",              regline_color = \"#d0f4de\",              shape_color = \"#80ed99\",              eq_color = \"white\",              )+   labs(x =\"Predicted wheat N content (g N/m2)\",        y = \"Observed wheat N content (g N/m2)\")+   theme_dark()"},{"path":"https://adriancorrendo.github.io/metrica/articles/regression_case.html","id":"bland-altman-plot","dir":"Articles","previous_headings":"","what":"3.2 Bland-Altman plot","title":"Regression case: Assessing model agreement in wheat grain nitrogen content prediction","text":"Bland-Altman plot another way visually assessing observed vs. predicted agreement. plots difference observed predicted values y axis, observed values x axis:","code":"bland_altman_plot(data = wheat,                   obs = obs,                    pred = pred)"},{"path":"https://adriancorrendo.github.io/metrica/articles/regression_case.html","id":"numerical-assessment-of-agreement","dir":"Articles","previous_headings":"","what":"4. Numerical assessment of agreement","title":"Regression case: Assessing model agreement in wheat grain nitrogen content prediction","text":"metrica package contains functions 41 metrics assess agreement observed predicted values continuous data (.e., regression error). list metrics including name, definition, details, formula, function name, please check []. metric functions take three arguments plotting functions: data frame object name (data argument) name column containing observed values (obs argument) name column containing predicted values (pred argument) user can choose calculate single metric, calculate metrics . calculate single metric, metric function can called. example, calculate \\(R^{2}\\), can use R2() function: Similarly, calculate root mean squared error, can use RMSE() function: user can also calculate 41 metrics using function metrics_summary(): user wants just specific metrics, within function metrics_summary(), user can pass list desired metrics using argument “metrics_list” follows:","code":"R2(data = wheat,    obs = obs,     pred = pred, tidy = TRUE) #>          R2 #> 1 0.8455538 RMSE(data = wheat,       obs = obs,       pred = pred) #> $RMSE #> [1] 1.666441 metrics_summary(data = wheat,                 obs = obs,                  pred = pred,                  type = \"regression\") #>    Metric       Score #> 1      B0  0.11315564 #> 2      B1  0.95057797 #> 3       r  0.91953997 #> 4      R2  0.84555376 #> 5      Xa  0.99564191 #> 6     CCC  0.91553253 #> 7     MAE  1.32781184 #> 8    RMAE  0.15214665 #> 9    MAPE 17.51424366 #> 10  SMAPE 17.43518492 #> 11    RAE  0.37156585 #> 12    RSE  0.16128874 #> 13    MBE  0.31815953 #> 14    PBE  3.64561486 #> 15    PAB  3.64510277 #> 16    PPB  1.51438787 #> 17    MSE  2.77702701 #> 18   RMSE  1.66644142 #> 19  RRMSE  0.19094834 #> 20    RSR  0.09678632 #> 21 iqRMSE  0.25237725 #> 22    MLA  0.14328045 #> 23    MLP  2.63374656 #> 24   RMLA  0.14328045 #> 25   RMLP  2.63374656 #> 26     SB  0.10122549 #> 27   SDSD  0.04205496 #> 28    LCS  2.63374656 #> 29    PLA  5.15949064 #> 30    PLP 94.84050936 #> 31     Ue 94.84050936 #> 32     Uc  1.51438787 #> 33     Ub  3.64510277 #> 34    NSE  0.83871126 #> 35     E1  0.62843415 #> 36   Erel  0.77057561 #> 37    KGE  0.91064709 #> 38      d  0.95632264 #> 39     d1  0.80649196 #> 40    d1r  0.81421707 #> 41    RAC  0.95770115 #> 42     AC  0.84174217 #> 43 lambda  0.91553253 #> 44  dcorr  0.89747940 #> 45    MIC  0.78940412 my.metrics <- c(\"R2\",\"MBE\", \"RMSE\", \"RSR\", \"NSE\", \"KGE\", \"CCC\")  metrics_summary(data = wheat,                    obs = obs,                     pred = pred,                 type = \"regression\",                 metrics_list = my.metrics)  #>   Metric      Score #> 1     R2 0.84555376 #> 2    CCC 0.91553253 #> 3    MBE 0.31815953 #> 4   RMSE 1.66644142 #> 5    RSR 0.09678632 #> 6    NSE 0.83871126 #> 7    KGE 0.91064709"},{"path":[]},{"path":"https://adriancorrendo.github.io/metrica/articles/regression_case.html","id":"example-of-timeseries-prediction","dir":"Articles","previous_headings":"5. Time series","what":"5.1. Example of timeseries prediction","title":"Regression case: Assessing model agreement in wheat grain nitrogen content prediction","text":"cases, may count time-series predictions (e.g. cumulative values daily simulations). example, let’s say evaluate production drymass season. specific case, Mean Absolute Scaled Error solid metric compared conventional RMSE similar metrics. Let’s suppose predictions wheat grain N years location series 20 years 2001 2020. Thus, may get random sample wheat data set assume represent time series interest. Therefore, create new time variable called Year serve sort observations.","code":"set.seed(165)  wheat_time <- metrica::wheat %>% sample_n(., size = 20) %>%    mutate(Year = seq(2001,2020, by =1))   # Plot wheat_time %>% ggplot2::ggplot(aes(x = Year))+   geom_point(aes(y = pred, fill = \"Predicted\", shape = \"Predicted\"))+   geom_point(aes(y = obs, fill = \"Observed\", shape = \"Observed\"))+   geom_line(aes(y = pred, col = \"Predicted\", linetype = \"Predicted\"), size = .75)+   geom_line(aes(y = obs, col = \"Observed\", linetype = \"Observed\"), size = .75)+   scale_fill_manual(name = \"\", values = c(\"dark red\",\"steelblue\"))+   scale_shape_manual(name = \"\", values = c(21,24))+   scale_color_manual(name = \"\", values = c(\"dark red\",\"steelblue\"))+   scale_linetype_manual(name = \"\", values = c(1,2))+   labs(x = \"Year\", y = \"Wheat Grain N (g/m2)\")+   theme_bw()+   theme(legend.position = \"top\") #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead."},{"path":"https://adriancorrendo.github.io/metrica/articles/regression_case.html","id":"use-mase-for-timeseries","dir":"Articles","previous_headings":"5. Time series","what":"5.2. Use MASE for timeseries","title":"Regression case: Assessing model agreement in wheat grain nitrogen content prediction","text":"case timeseries analysis, Mean Absolute Scaled Error (MASE, Hyndman & Koehler, 2006), scaled error metric, preferable classic metrics RMSE. metrica, can use function MASE. Please, aware MASE requires obs pred data along third column corresponding temporal variable sorts data (use time argument specify ). default method scale MASE naive forecast (random-walk), requires user define size naive_step. Otherwise, --bag MAE can specified oob_mae argument.","code":"# MASE estimate, with naive approach (random-walk, i.e. using observation of t-1 as prediction) metrica::MASE(data = wheat_time, obs = obs, pred = pred,                naive_step = 1, tidy = FALSE, time = \"Year\") #> $MASE #> [1] 0.2444194  metrica::MASE(data = wheat_time, obs = obs, pred = pred,                naive_step = 1, tidy = FALSE) #> $MASE #> [1] 0.2444194  # MASE estimate, with mae coming from an independent training set. metrica::MASE(data = wheat_time, obs = obs, pred = pred,                naive_step = 1, tidy = FALSE, time = \"Year\", oob_mae = 6) #> $MASE #> [1] 0.2143599"},{"path":"https://adriancorrendo.github.io/metrica/articles/regression_case.html","id":"visual-and-numerical-assessment-combined","dir":"Articles","previous_headings":"","what":"6. Visual and numerical assessment combined","title":"Regression case: Assessing model agreement in wheat grain nitrogen content prediction","text":"user can also create scatter plot includes predicted vs. observed points, 1:1 line, regression line, also selected metrics values plus SMA regression equation. accomplished function scatter_plot():  print metrics scatter_plot(), just use print.metrics. Warning: forget specify ‘metrics.list’: Also, ggplot element, outputs flexible edition:","code":"scatter_plot(data = wheat,              obs = obs,               pred = pred) my.metrica.plot <- scatter_plot(data = wheat,                                 obs = obs,                                  pred = pred,                                 print_metrics = TRUE, metrics_list = my.metrics)  my.metrica.plot my.metrica.plot +   # Modify labels   labs(x = \"Observed (days to emergence)\", y = \"Predicted (days to emergence)\")+   # Modify theme   theme_light() my.metrica.plot +   # Modify labels   labs(x = \"Observed (Mg/ha)\", y = \"Predicted (Mg/ha)\")+   # Modify theme   theme_dark()"},{"path":"https://adriancorrendo.github.io/metrica/articles/regression_case.html","id":"exporting","dir":"Articles","previous_headings":"","what":"7. Exporting","title":"Regression case: Assessing model agreement in wheat grain nitrogen content prediction","text":"export metrics summary table, user can simply write file function write.csv(): Similarly, export plot, user can simply write file function ggsave():","code":"metrics_summary(data = wheat,                 obs = obs,                  pred = pred,                 type = \"regression\") %>%   write.csv(\"metrics_summary.csv\") ggsave(plot = my.metrica.plot,        \"scatter_metrics.png\",        width = 5,        height = 5)"},{"path":"https://adriancorrendo.github.io/metrica/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Adrian . Correndo. Maintainer, copyright holder. Adrian . Correndo. Author. Luiz H. Moro Rosso. Author. Rai Schwalbert. Author. Carlos Hernandez. Author. Leonardo M. Bastos. Author. Luciana Nieto. Author. Dean Holzworth. Author. Ignacio . Ciampitti. Author.","code":""},{"path":"https://adriancorrendo.github.io/metrica/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Correndo , Moro Rosso L, Schwalbert R, Hernandez C, Bastos L, Nieto L, Holzworth D, Ciampitti (2023). metrica: Prediction Performance Metrics. R package version 2.0.1.999, https://adriancorrendo.github.io/metrica/.","code":"@Manual{,   title = {metrica: Prediction Performance Metrics},   author = {Adrian A. Correndo and Luiz H. {Moro Rosso} and Rai Schwalbert and Carlos Hernandez and Leonardo M. Bastos and Luciana Nieto and Dean Holzworth and Ignacio A. Ciampitti},   year = {2023},   note = {R package version 2.0.1.999},   url = {https://adriancorrendo.github.io/metrica/}, }"},{"path":[]},{"path":"https://adriancorrendo.github.io/metrica/index.html","id":"introduction--","dir":"","previous_headings":"","what":"Introduction","title":"Prediction Performance Metrics","text":"metrica compilation 80 functions designed quantitatively visually evaluate prediction performance regression (continuous variables) classification (categorical variables) point-forecast models (e.g. APSIM, DSSAT, DNDC, Supervised Machine Learning). metrica offers toolbox wide spectrum goodness fit, error metrics, indices, coefficients accounting different aspects agreement predicted observed values, plus basic visualization functions assess models performance (e.g. confusion matrix, scatter regression line; Bland-Altman plot) provided customizable format (ggplot). supervised models, always keep mind concept “cross-validation” since predicted values ideally come --bag samples (unseen training sets) avoid overestimation prediction performance. Check Documentation https://adriancorrendo.github.io/metrica/ Vignettes 1. List metrics Regression 2. List metrics Classification 3. regression case (numerical variables) 4. classification case (categorical variables) 5. Import files APSIM","code":""},{"path":"https://adriancorrendo.github.io/metrica/index.html","id":"functions--","dir":"","previous_headings":"","what":"Functions","title":"Prediction Performance Metrics","text":"regression models, includes 4 plotting functions (scatter, tiles, density, & Bland-Altman plots), 48 prediction performance scores including error metrics (MBE, MAE, RAE, RMAE, MAPE, SMAPE, MSE, RMSE, RRMSE, RSR, PBE, iqRMSE), error decomposition (MLA, MLP, PLA, PLP, PAB, PPB, SB, SDSD, LCS, Ub, Uc, Ue), model efficiency (NSE, E1, Erel, KGE), indices agreement (d, d1, d1r, RAC, AC, lambda), goodness fit (r, R2, RSS, TSS, RSE), adjusted correlation coefficients (CCC, Xa, distance correlation-dcorr-, maximal information coefficient -MIC-), variability (uSD, var_u), symmetric regression coefficients (B0_sma, B1_sma). Specifically time-series predictions, metrica also includes Mean Absolute Scaled Error (MASE). classification (binomial multinomial) tasks, includes function visualize confusion matrix using ggplot2, 27 functions prediction scores including: accuracy, error rate, precision, recall, specificity, balanced accuracy (balacc), F-score (fscore), adjusted F-score (agf), G-mean (gmean), Bookmaker Informedness (bmi, .k.. Youden’s J-index), Markedness (deltaP), Matthews Correlation Coefficient (mcc), Cohen’s Kappa (khat), negative predictive value (npv), positive negative likelihood ratios (posLr, negLr), diagnostic odds ratio (dor), prevalence (preval), prevalence threshold (preval_t), critical success index (csi, .k.. threat score), false positive rate (FPR), false negative rate (FNR), false detection rate (FDR), false omission rate (), area ROC curve (AUC_roc). metrica also offers function allows users run prediction performance scores . user just needs specify type model (“regression” “classification”). details visit vignettes https://adriancorrendo.github.io/metrica/.","code":""},{"path":"https://adriancorrendo.github.io/metrica/index.html","id":"using-the-functions--","dir":"","previous_headings":"","what":"Using the functions","title":"Prediction Performance Metrics","text":"two basic arguments common metrica functions: () obs(Oi; observed, .k.. actual, measured, truth, target, label), (ii) pred (Pi; predicted, .k.. simulated, fitted, modeled, estimate) values. Optional arguments include data allows call existing data frame containing observed predicted vectors, tidy, controls type output list (tidy = FALSE) data.frame (tidy = TRUE). regression, specific functions regression also require define axis orientation. example, slope symmetric linear regression describing bivariate scatter (SMA). binary classification (two classes), functions also require check pos_level arg., indicates alphanumeric order “positive level”. Normally, common binary denominations c(0,1), c(“Negative”, “Positive”), c(“FALSE”, “TRUE”), default pos_level = 2 (1, “Positive”, “TRUE”). However, cases also possible, c(“Crop”, “NoCrop”) user needs specify pos_level = 1. multiclass classification tasks, functions present atom arg. (logical TRUE / FALSE), controls output overall average estimate across classes, class-wise estimate. example, user might interested obtaining estimates precision recall possible class prediction.","code":""},{"path":"https://adriancorrendo.github.io/metrica/index.html","id":"id_1-installation","dir":"","previous_headings":"","what":"1. Installation","title":"Prediction Performance Metrics","text":"can install CRAN version metrica : can install development version GitHub :","code":"install.packages(\"metrica\") # install.packages(\"devtools\") devtools::install_github(\"adriancorrendo/metrica\")"},{"path":"https://adriancorrendo.github.io/metrica/index.html","id":"id_2-native-datasets","dir":"","previous_headings":"","what":"2. Native datasets","title":"Prediction Performance Metrics","text":"metrica package comes four example datasets continuous variables (regression) APSIM software: wheat. 137 data-points wheat grain N (grams per squared meter) barley. 69 data-points barley grain number (x1000 grains per squared meter) sorghum. 36 data-points sorghum grain number (x1000 grains per squared meter) chickpea. 39 data-points chickpea aboveground dry mass (kg per hectare) data correspond latest, --date, documentation validation version number 2020.03.27.4956. Data available : https://doi.org/10.7910/DVN/EJS4M0. details can found official APSIM Next Generation website: https://APSIMnextgeneration.netlify.app/modeldocumentation addition, metrica also provides two native examples categorical variables (classification): land_cover binary dataset land cover using satellite images obtained 2022 small region Kansas (USA). Values equal 1 associated vegetation, values equal 0 represent type land cover. Observed values come human visualization, predicted values obtained Random Forest classifier. maize_phenology data set maize/corn (Zea mays L.) phenology (crop development stage) collected Kansas (USA) 2018. data includes 16 different phenology stages. Observed values obtained via human visualization, predicted values obtained Random Forest classifier. -mentioned data sets can called metrica::name_of_dataset, example:","code":"metrica::wheat metrica::land_cover"},{"path":[]},{"path":"https://adriancorrendo.github.io/metrica/index.html","id":"libraries","dir":"","previous_headings":"3. Example Code","what":"Libraries","title":"Prediction Performance Metrics","text":"basic example shows core regression classification functions metrica:","code":"library(metrica) library(dplyr) library(purrr) library(ggplot2) library(tidyr)"},{"path":"https://adriancorrendo.github.io/metrica/index.html","id":"id_31-regression","dir":"","previous_headings":"","what":"3.1. REGRESSION","title":"Prediction Performance Metrics","text":"","code":"# 1. A. Create a random dataset # Set seed for reproducibility set.seed(1) # Create a random vector (X) with 100 values X <- rnorm(n = 100, mean = 0, sd = 10) # Create a second vector (Y) with 100 values by adding error with respect # to the first vector (X). Y <- X + rnorm(n=100, mean = 0, sd = 3) # Merge vectors in a data frame, rename them as synonyms of observed (measured) and predicted (simulated) example.data <- data.frame(measured = X, simulated = Y)  # 1. B. Or call native example datasets  example.data <- barley %>%  # or 'wheat', 'sorghum', or 'chickpea' # 1.b. create columns as synonyms of observed (measured) and predicted (simulated)                 mutate(measured = obs, simulated = pred)"},{"path":[]},{"path":"https://adriancorrendo.github.io/metrica/index.html","id":"id_3111-create-a-customizable-scatter-plot-with-po-orientation","dir":"","previous_headings":"3.1. REGRESSION","what":"3.1.1.1. Create a customizable scatter plot with PO orientation","title":"Prediction Performance Metrics","text":"","code":"barley.scat.plot <-    metrica::scatter_plot(data = example.data,                          obs = measured,                          pred = simulated,                         orientation = \"PO\",                          print_eq = TRUE,                         position_eq = c(x=24, y =8),                          # Optional arguments to customize the plot                         shape_type = 21,                         shape_color = \"steelblue\",                         shape_size = 3,                         regline_type = \"F1\",                         regline_color = \"#9e0059\",                         regline_size = 2)+   # Customize axis breaks   scale_y_continuous(breaks = seq(0,30, by = 5))+   scale_x_continuous(breaks = seq(0,30, by = 5))  barley.scat.plot # Alternative using vectors instead of dataframe #metrica::scatter_plot(obs = example.data$obs, pred = example.data$pred)"},{"path":"https://adriancorrendo.github.io/metrica/index.html","id":"id_3112-create-tiles-plot-with-op-orientation","dir":"","previous_headings":"3.1. REGRESSION","what":"3.1.1.2. Create tiles plot with OP orientation","title":"Prediction Performance Metrics","text":"","code":"barley.tiles.plot <-    tiles_plot(data = example.data,                        obs = measured,                        pred = simulated,                       bins = 10,                        orientation = \"PO\",                       colors = c(low = \"pink\", high = \"steelblue\"))  barley.tiles.plot"},{"path":"https://adriancorrendo.github.io/metrica/index.html","id":"id_3113-create-a-density-plot-with-op-orientation","dir":"","previous_headings":"3.1. REGRESSION","what":"3.1.1.3. Create a density plot with OP orientation","title":"Prediction Performance Metrics","text":"","code":"barley.density.plot <- metrica::density_plot(data = example.data,                        obs = measured, pred = simulated,                       n = 5,                        orientation = \"PO\",             colors = c(low = \"white\", high = \"steelblue\") )+   theme(legend.position = \"none\")  barley.density.plot"},{"path":"https://adriancorrendo.github.io/metrica/index.html","id":"id_3114-create-a-bland-altman-plot","dir":"","previous_headings":"3.1. REGRESSION","what":"3.1.1.4. Create a Bland-Altman plot","title":"Prediction Performance Metrics","text":"","code":"barley.ba.plot <- metrica::bland_altman_plot(data = example.data,                                              obs = measured, pred = simulated)  barley.ba.plot"},{"path":[]},{"path":"https://adriancorrendo.github.io/metrica/index.html","id":"id_3122-single-estimates","dir":"","previous_headings":"3.1. REGRESSION","what":"3.1.2.2. Single estimates","title":"Prediction Performance Metrics","text":"","code":"# a. Estimate coefficient of determination (R2)  metrica::R2(data = example.data, obs = measured, pred = simulated) #> $R2 #> [1] 0.4512998  # b. Estimate root mean squared error (RMSE) metrica::RMSE(data = example.data, obs = measured, pred = simulated) #> $RMSE #> [1] 3.986028  # c. Estimate mean bias error (MBE) metrica::MBE(data = example.data, obs = measured, pred = simulated) #> $MBE #> [1] 0.207378  # c. Estimate index of agreement (d) metrica::d(data = example.data, obs = measured, pred = simulated) #> $d #> [1] 0.8191397  # e. Estimate SMA regression intercept (B0) metrica::B0_sma(data = example.data, obs = measured, pred = simulated, tidy = TRUE) #>         B0 #> 1 1.128274  # f. Estimate SMA regression slope (B1) metrica::B1_sma(data = example.data, obs = measured, pred = simulated) #> $B1 #> [1] 0.9288715"},{"path":"https://adriancorrendo.github.io/metrica/index.html","id":"id_3122-metrics-summary","dir":"","previous_headings":"3.1. REGRESSION","what":"3.1.2.2. Metrics Summary","title":"Prediction Performance Metrics","text":"","code":"metrics.sum <- metrics_summary(data = example.data,                                 obs = measured, pred = simulated,                                type = \"regression\")   # Print first 15 head(metrics.sum, n = 15) #>    Metric      Score #> 1      B0  1.1282743 #> 2      B1  0.9288715 #> 3       r  0.6717885 #> 4      R2  0.4512998 #> 5      Xa  0.9963915 #> 6     CCC  0.6693644 #> 7     MAE  3.0595501 #> 8    RMAE  0.1629325 #> 9    MAPE 16.8112673 #> 10  SMAPE 16.7848032 #> 11    RAE  0.7639151 #> 12    RSE  0.6164605 #> 13    MBE  0.2073780 #> 14    PBE  1.1043657 #> 15    PAB  0.2706729  # Optional wrangling (WIDE) metrics.sum.wide <- metrics.sum %>%   tidyr::pivot_wider(tidyr::everything(),                       names_from = \"Metric\",                       values_from = \"Score\")  metrics.sum.wide #> # A tibble: 1 × 45 #>      B0    B1     r    R2    Xa   CCC   MAE  RMAE  MAPE SMAPE   RAE   RSE   MBE #>   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1  1.13 0.929 0.672 0.451 0.996 0.669  3.06 0.163  16.8  16.8 0.764 0.616 0.207 #> # … with 32 more variables: PBE <dbl>, PAB <dbl>, PPB <dbl>, MSE <dbl>, #> #   RMSE <dbl>, RRMSE <dbl>, RSR <dbl>, iqRMSE <dbl>, MLA <dbl>, MLP <dbl>, #> #   RMLA <dbl>, RMLP <dbl>, SB <dbl>, SDSD <dbl>, LCS <dbl>, PLA <dbl>, #> #   PLP <dbl>, Ue <dbl>, Uc <dbl>, Ub <dbl>, NSE <dbl>, E1 <dbl>, Erel <dbl>, #> #   KGE <dbl>, d <dbl>, d1 <dbl>, d1r <dbl>, RAC <dbl>, AC <dbl>, lambda <dbl>, #> #   dcorr <dbl>, MIC <dbl>"},{"path":[]},{"path":"https://adriancorrendo.github.io/metrica/index.html","id":"id_3131-nested-data","dir":"","previous_headings":"3.1. REGRESSION","what":"3.1.3.1. Nested data","title":"Prediction Performance Metrics","text":"","code":"# a. Create nested df with the native examples nested.examples <- bind_rows(list(wheat = metrica::wheat,                                    barley = metrica::barley,                                   sorghum = metrica::sorghum,                                    chickpea = metrica::chickpea),                               .id = \"id\") %>%   dplyr::group_by(id) %>% tidyr::nest() %>% dplyr::ungroup()  head(nested.examples %>% group_by(id) %>% dplyr::slice_head(n=2)) #> # A tibble: 4 × 2 #> # Groups:   id [4] #>   id       data               #>   <chr>    <list>             #> 1 barley   <tibble [69 × 2]>  #> 2 chickpea <tibble [39 × 2]>  #> 3 sorghum  <tibble [36 × 2]>  #> 4 wheat    <tibble [137 × 2]>  # b. Run  multiple.sum <- nested.examples %>%    # Store metrics in new.column \"performance\"   mutate(performance = map(data, ~metrica::metrics_summary(data=., obs = obs, pred = pred,                                                             type = \"regression\")))  head(multiple.sum) #> # A tibble: 4 × 3 #>   id       data               performance   #>   <chr>    <list>             <list>        #> 1 wheat    <tibble [137 × 2]> <df [45 × 2]> #> 2 barley   <tibble [69 × 2]>  <df [45 × 2]> #> 3 sorghum  <tibble [36 × 2]>  <df [45 × 2]> #> 4 chickpea <tibble [39 × 2]>  <df [45 × 2]>"},{"path":"https://adriancorrendo.github.io/metrica/index.html","id":"id_3132-non-nested-data--","dir":"","previous_headings":"3.1. REGRESSION","what":"3.1.3.2. Non-nested data","title":"Prediction Performance Metrics","text":"","code":"non_nested_summary <- nested.examples %>% unnest(cols = \"data\") %>%    group_by(id) %>%    summarise(metrics_summary(obs = obs, pred = pred, type = \"regression\")) %>%    dplyr::arrange(Metric)  head(non_nested_summary) #> # A tibble: 6 × 3 #> # Groups:   id [4] #>   id       Metric    Score #>   <chr>    <chr>     <dbl> #> 1 barley   AC       0.253  #> 2 chickpea AC       0.434  #> 3 sorghum  AC       0.0889 #> 4 wheat    AC       0.842  #> 5 barley   B0       1.13   #> 6 chickpea B0     -99.0"},{"path":"https://adriancorrendo.github.io/metrica/index.html","id":"id_314-print-metrics-in-a-plot","dir":"","previous_headings":"3.1. REGRESSION","what":"3.1.4. Print metrics in a plot","title":"Prediction Performance Metrics","text":"","code":"df <- metrica::wheat  # Create list of selected metrics selected.metrics <- c(\"MAE\",\"RMSE\", \"RRMSE\", \"R2\", \"NSE\", \"KGE\", \"PLA\", \"PLP\")   df <- metrica::wheat # Create the plot plot <- metrica::scatter_plot(data = df,                                obs = obs, pred = pred,                               # Activate print_metrics arg.                               print_metrics = TRUE,                                # Indicate metrics list                               metrics_list = selected.metrics,                               # Customize metrics position                               position_metrics = c(x = 16 , y = 9),                               # Customize equation position                               position_eq = c(x = 16.2, y = 9.5))  plot"},{"path":[]},{"path":"https://adriancorrendo.github.io/metrica/index.html","id":"example-datasets","dir":"","previous_headings":"3.1. CLASSIFICATION","what":"Example datasets","title":"Prediction Performance Metrics","text":"","code":"binomial_case <- data.frame(labels = sample(c(\"Pos\",\"Neg\"), 100, replace = TRUE),                             predictions = sample(c(\"Pos\",\"Neg\"), 100, replace = TRUE)) %>%    mutate(predictions = as.factor(predictions), labels = as.factor(labels))  multinomial_case <- data.frame(labels = sample(c(\"Red\",\"Green\", \"Blue\"), 100, replace = TRUE),                                predictions = sample(c(\"Red\",\"Green\", \"Blue\"), 100, replace = TRUE) ) %>%    mutate(predictions = as.factor(predictions), labels = as.factor(labels))"},{"path":[]},{"path":"https://adriancorrendo.github.io/metrica/index.html","id":"id_3111-binary","dir":"","previous_headings":"3.1. CLASSIFICATION","what":"3.1.1.1. Binary","title":"Prediction Performance Metrics","text":"","code":"# a. Print binomial_case %>% confusion_matrix(obs = labels, pred = predictions,                                              plot = FALSE, colors = c(low=\"#f9dbbd\" , high=\"#735d78\"),                                              unit = \"count\") #>          OBSERVED #> PREDICTED Neg Pos #>       Neg  24  24 #>       Pos  21  31  # b. Plot binomial_case %>% confusion_matrix(obs = labels, pred = predictions,                                              plot = TRUE, colors = c(low=\"#f9dbbd\" , high=\"#735d78\"),                                              unit = \"count\", print_metrics = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/index.html","id":"id_3112-multiclass","dir":"","previous_headings":"3.1. CLASSIFICATION","what":"3.1.1.2. Multiclass","title":"Prediction Performance Metrics","text":"","code":"# a. Print multinomial_case %>% confusion_matrix(obs = labels,                                        pred = predictions,                                        plot = FALSE, colors = c(low=\"#f9dbbd\" , high=\"#735d78\"),                                       unit = \"count\") #>          OBSERVED #> PREDICTED Blue Green Red #>     Blue     9    11   9 #>     Green   11    12  11 #>     Red     13    13  11  # b. Plot multinomial_case %>% confusion_matrix(obs = labels,                                        pred = predictions,                                        plot = TRUE, colors = c(low=\"#d3dbbd\" , high=\"#885f78\"),                                        unit = \"count\", print_metrics = TRUE)"},{"path":[]},{"path":"https://adriancorrendo.github.io/metrica/index.html","id":"id_3111-single-dataset--","dir":"","previous_headings":"3.1. CLASSIFICATION","what":"3.1.1.1. Single dataset","title":"Prediction Performance Metrics","text":"","code":"# Get classification metrics one by one binomial_case %>% accuracy(data = ., obs = labels, pred = predictions, tidy=TRUE) #>   accuracy #> 1     0.55 binomial_case %>% error_rate(data = ., obs = labels, pred = predictions, tidy=TRUE) #>   error_rate #> 1       0.45 binomial_case %>% precision(data = ., obs = labels, pred = predictions, tidy=TRUE) #>   precision #> 1 0.5961538 binomial_case %>% recall(data = ., obs = labels, pred = predictions, atom = F, tidy=TRUE) #>      recall #> 1 0.5636364 binomial_case %>% specificity(data = ., obs = labels, pred = predictions, tidy=TRUE) #>        spec #> 1 0.5333333 binomial_case %>% balacc(data = ., obs = labels, pred = predictions, tidy=TRUE) #>      balacc #> 1 0.5484848 binomial_case %>% fscore(data = ., obs = labels, pred = predictions, tidy=TRUE) #>      fscore #> 1 0.5794393 binomial_case %>% agf(data = ., obs = labels, pred = predictions, tidy=TRUE) #>         agf #> 1 0.5795213 binomial_case %>% gmean(data = ., obs = labels, pred = predictions, tidy=TRUE) #>       gmean #> 1 0.5482755 binomial_case %>% khat(data = ., obs = labels, pred = predictions, tidy=TRUE) #>         khat #> 1 0.09638554 binomial_case %>% mcc(data = ., obs = labels, pred = predictions, tidy=TRUE) #>          mcc #> 1 0.09656091 binomial_case %>% fmi(data = ., obs = labels, pred = predictions, tidy=TRUE) #>         fmi #> 1 0.5796671 binomial_case %>% posLr(data = ., obs = labels, pred = predictions, tidy=TRUE) #>      posLr #> 1 1.207792 binomial_case %>% negLr(data = ., obs = labels, pred = predictions, tidy=TRUE) #>       negLr #> 1 0.8181818 binomial_case %>% dor(data = ., obs = labels, pred = predictions, tidy=TRUE) #>       dor #> 1 1.47619  # Get all at once with metrics_summary() binomial_case %>% metrics_summary(data = ., obs = labels, pred = predictions, type = \"classification\") #>         Metric      Score #> 1     accuracy 0.55000000 #> 2   error_rate 0.45000000 #> 3    precision 0.59615385 #> 4       recall 0.56363636 #> 5  specificity 0.53333333 #> 6       balacc 0.54848485 #> 7       fscore 0.57943925 #> 8          agf 0.57952126 #> 9        gmean 0.54827553 #> 10        khat 0.09638554 #> 11         mcc 0.09656091 #> 12         fmi 0.57966713 #> 13         bmi 0.09696970 #> 14         csi 0.40789474 #> 15      deltap 0.09615385 #> 16       posLr 1.20779221 #> 17       negLr 0.81818182 #> 18         dor 1.47619048 #> 19         npv 0.50000000 #> 20         FPR 0.46666667 #> 21         FNR 0.43636364 #> 22         FDR 0.40384615 #> 23         FOR 0.50000000 #> 24      preval 0.55000000 #> 25    preval_t 0.49309260 #> 26     AUC_roc 0.54848485  # Multinomial multinomial_case %>% metrics_summary(data = ., obs = labels, pred = predictions, type = \"classification\") #> Warning in metrica::fscore(data = ~., obs = ~labels, pred = ~predictions, : #> For multiclass cases, the fscore should be estimated at a class level. Please, #> consider using `atom = TRUE` #> Warning in metrica::agf(data = ~., obs = ~labels, pred = ~predictions, pos_level #> = pos_level): For multiclass cases, the agf should be estimated at a class #> level. Please, consider using `atom = TRUE` #> Warning in metrica::fmi(data = ~., obs = ~labels, pred = ~predictions, pos_level #> = pos_level): The Fowlkes-Mallows Index is not available for multiclass cases. #> The result has been recorded as NaN. #> Warning in metrica::preval(data = ~., obs = ~labels, pred = ~predictions, : For #> multiclass cases, prevalence should be estimated at a class level. A NaN has #> been recorded as the result. Please, use `atom = TRUE` #> Warning in metrica::preval_t(data = ~., obs = ~labels, pred = ~predictions, : For multiclass cases, prevalence threshold should be estimated at a class level.  #>       A NaN has been recorded as the result. Please, use `atom = TRUE`. #>         Metric       Score #> 1     accuracy  0.32000000 #> 2   error_rate  0.68000000 #> 3    precision  0.32019443 #> 4       recall  0.32029977 #> 5  specificity  0.66031031 #> 6       balacc  0.49030504 #> 7       fscore  0.32024709 #> 8          agf  0.32024710 #> 9        gmean  0.45988829 #> 10        khat -0.01918465 #> 11         mcc -0.01926552 #> 12         fmi         NaN #> 13         bmi -0.01938991 #> 14         csi  0.13793860 #> 15      deltap -0.01951385 #> 16       posLr  0.94291874 #> 17       negLr  1.02936485 #> 18         dor  0.91601996 #> 19         npv  0.66029172 #> 20         FPR  0.33968969 #> 21         FNR  0.67970023 #> 22         FDR  0.67980557 #> 23         FOR  0.33970828 #> 24      preval         NaN #> 25    preval_t         NaN #> 26     AUC_roc  0.49030504  # Get a selected list at once with metrics_summary() selected_class_metrics <- c(\"accuracy\", \"recall\", \"fscore\")  # Binary binomial_case %>% metrics_summary(data = ., obs = labels, pred = predictions, type = \"classification\",                                   metrics_list = selected_class_metrics) #>     Metric     Score #> 1 accuracy 0.5500000 #> 2   recall 0.5636364 #> 3   fscore 0.5794393  # Multiclass multinomial_case %>% metrics_summary(data = ., obs = labels, pred = predictions, type = \"classification\",                                   metrics_list = selected_class_metrics) #> Warning in metrica::fscore(data = ~., obs = ~labels, pred = ~predictions, : #> For multiclass cases, the fscore should be estimated at a class level. Please, #> consider using `atom = TRUE` #> Warning in metrica::agf(data = ~., obs = ~labels, pred = ~predictions, pos_level #> = pos_level): For multiclass cases, the agf should be estimated at a class #> level. Please, consider using `atom = TRUE` #> Warning in metrica::fmi(data = ~., obs = ~labels, pred = ~predictions, pos_level #> = pos_level): The Fowlkes-Mallows Index is not available for multiclass cases. #> The result has been recorded as NaN. #> Warning in metrica::preval(data = ~., obs = ~labels, pred = ~predictions, : For #> multiclass cases, prevalence should be estimated at a class level. A NaN has #> been recorded as the result. Please, use `atom = TRUE` #> Warning in metrica::preval_t(data = ~., obs = ~labels, pred = ~predictions, : For multiclass cases, prevalence threshold should be estimated at a class level.  #>       A NaN has been recorded as the result. Please, use `atom = TRUE`. #>     Metric     Score #> 1 accuracy 0.3200000 #> 2   recall 0.3202998 #> 3   fscore 0.3202471 multinomial_case %>% accuracy(data = ., obs = labels, pred = predictions, tidy=TRUE) #>   accuracy #> 1     0.32 multinomial_case %>% error_rate(data = ., obs = labels, pred = predictions, tidy=TRUE) #>   error_rate #> 1       0.68 multinomial_case %>% precision(data = ., obs = labels, pred = predictions, tidy=TRUE) #>   precision #> 1 0.3201944 multinomial_case %>% recall(data = ., obs = labels, pred = predictions, atom = F, tidy=TRUE) #>      recall #> 1 0.3202998 multinomial_case %>% specificity(data = ., obs = labels, pred = predictions, tidy=TRUE) #>        spec #> 1 0.6603103 multinomial_case %>% balacc(data = ., obs = labels, pred = predictions, tidy=TRUE) #>     balacc #> 1 0.490305 multinomial_case %>% fscore(data = ., obs = labels, pred = predictions, tidy=TRUE) #> Warning in fscore(data = ., obs = labels, pred = predictions, tidy = TRUE): #> For multiclass cases, the fscore should be estimated at a class level. Please, #> consider using `atom = TRUE` #>      fscore #> 1 0.3202471 multinomial_case %>% agf(data = ., obs = labels, pred = predictions, tidy=TRUE) #> Warning in agf(data = ., obs = labels, pred = predictions, tidy = TRUE): For #> multiclass cases, the agf should be estimated at a class level. Please, consider #> using `atom = TRUE` #>         agf #> 1 0.3202471 multinomial_case %>% gmean(data = ., obs = labels, pred = predictions, tidy=TRUE) #>       gmean #> 1 0.4598883 multinomial_case %>% khat(data = ., obs = labels, pred = predictions, tidy=TRUE) #>          khat #> 1 -0.01918465 multinomial_case %>% mcc(data = ., obs = labels, pred = predictions, tidy=TRUE) #>           mcc #> 1 -0.01926552 multinomial_case %>% fmi(data = ., obs = labels, pred = predictions, tidy=TRUE) #> Warning in fmi(data = ., obs = labels, pred = predictions, tidy = TRUE): The #> Fowlkes-Mallows Index is not available for multiclass cases. The result has been #> recorded as NaN. #>   fmi #> 1 NaN multinomial_case %>% posLr(data = ., obs = labels, pred = predictions, tidy=TRUE) #>       posLr #> 1 0.9429187 multinomial_case %>% negLr(data = ., obs = labels, pred = predictions, tidy=TRUE) #>      negLr #> 1 1.029365 multinomial_case %>% dor(data = ., obs = labels, pred = predictions, tidy=TRUE) #>       dor #> 1 0.91602 multinomial_case %>% deltap(data = ., obs = labels, pred = predictions, tidy=TRUE) #>        deltap #> 1 -0.01951385 multinomial_case %>% csi(data = ., obs = labels, pred = predictions, tidy=TRUE) #>         csi #> 1 0.1379386 multinomial_case %>% FPR(data = ., obs = labels, pred = predictions, tidy=TRUE) #>         FPR #> 1 0.3396897 multinomial_case %>% FNR(data = ., obs = labels, pred = predictions, tidy=TRUE) #>         FNR #> 1 0.6797002 multinomial_case %>% FDR(data = ., obs = labels, pred = predictions, tidy=TRUE) #>         FDR #> 1 0.6798056 multinomial_case %>% FOR(data = ., obs = labels, pred = predictions, tidy=TRUE) #>         FOR #> 1 0.3397083 multinomial_case %>% preval(data = ., obs = labels, pred = predictions, tidy=TRUE) #> Warning in preval(data = ., obs = labels, pred = predictions, tidy = TRUE): For #> multiclass cases, prevalence should be estimated at a class level. A NaN has #> been recorded as the result. Please, use `atom = TRUE` #>   prev #> 1  NaN multinomial_case %>% preval_t(data = ., obs = labels, pred = predictions, tidy=TRUE) #> Warning in preval_t(data = ., obs = labels, pred = predictions, tidy = TRUE): For multiclass cases, prevalence threshold should be estimated at a class level.  #>       A NaN has been recorded as the result. Please, use `atom = TRUE`. #>   preval_t #> 1      NaN multinomial_case %>% AUC_roc(data = ., obs = labels, pred = predictions, tidy=TRUE) #>    AUC_roc #> 1 0.490305"},{"path":"https://adriancorrendo.github.io/metrica/index.html","id":"id_4-import-data-from-apsim","dir":"","previous_headings":"","what":"4. Import data from APSIM","title":"Prediction Performance Metrics","text":"Please, visit vignette","code":""},{"path":"https://adriancorrendo.github.io/metrica/index.html","id":"id_5-contributing-to-our-package","dir":"","previous_headings":"","what":"5. Contributing to our package","title":"Prediction Performance Metrics","text":"Thank considering contributing open-source project. Although directly funded maintain metrica, care reproducible science, like . Thus, contributions welcome! multiple ways can contribute metrica asking questions, propose ideas, report bugs, improve vignettes & documentation functions, well contributing code, course. comments, suggestions, bug reports, highly encourage use GitHub issues section. improve documentation contribute code, encourage fork repo use pull requests contribute code.","code":""},{"path":"https://adriancorrendo.github.io/metrica/index.html","id":"id_6-code-of-conduct","dir":"","previous_headings":"","what":"6. Code of Conduct","title":"Prediction Performance Metrics","text":"Please note metrica project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/AC.html","id":null,"dir":"Reference","previous_headings":"","what":"Ji and Gallo's Agreement Coefficient (AC) — AC","title":"Ji and Gallo's Agreement Coefficient (AC) — AC","text":"estimates agreement coefficient suggested Ji & Gallo (2006) continuous predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/AC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ji and Gallo's Agreement Coefficient (AC) — AC","text":"","code":"AC(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/AC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ji and Gallo's Agreement Coefficient (AC) — AC","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/AC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ji and Gallo's Agreement Coefficient (AC) — AC","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/AC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ji and Gallo's Agreement Coefficient (AC) — AC","text":"Ji Gallo's AC measures general agreement, including accuracy precision. normalized, dimensionless, positively bounded (-infinity;1), symmetric. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/AC.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Ji and Gallo's Agreement Coefficient (AC) — AC","text":"Ji & Gallo (2006). agreement coefficient image comparison. Photogramm. Eng. Remote Sensing 7, 823–833 doi:10.14358/PERS.72.7.823","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/AC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ji and Gallo's Agreement Coefficient (AC) — AC","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- rnorm(n = 100, mean = 0, sd = 9) df <- data.frame(obs = X, pred = Y) AC(df, obs = X, pred = Y) #> $AC #> [1] -1.337312 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/AUC_roc.html","id":null,"dir":"Reference","previous_headings":"","what":"Area Under the ROC Curve — AUC_roc","title":"Area Under the ROC Curve — AUC_roc","text":"AUC estimates area receiver operator curve (ROC) nominal/categorical predicted-observed dataset using Mann-Whitney U-statistic.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/AUC_roc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Area Under the ROC Curve — AUC_roc","text":"","code":"AUC_roc(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/AUC_roc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Area Under the ROC Curve — AUC_roc","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (character | factor). pred Vector predicted values (character | factor). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list (default). na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/AUC_roc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Area Under the ROC Curve — AUC_roc","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/AUC_roc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Area Under the ROC Curve — AUC_roc","text":"AUC tests whether positives ranked higher negatives. simply area ROC curve. AUC estimation function follows procedure described Hand & Till (2001). AUC_roc estimated following trapezoid approach equivalent average recall specificity (Powers, 2011), equivalent balanced accuracy (balacc): \\(AUC_roc = \\frac{(recall - FPR + 1)}{2} = \\frac{recall+specificity}{2} = 1-\\frac{FPR+FNR}{2}\\) Interpretation: AUC equivalent probability randomly case given class (positive binary) smaller estimated probability belonging another class (negative binary) compared randomly chosen member another class. Values: AUC bounded 0 1. closer 1 better. Values close 0 indicate inaccurate predictions. AUC = 0.5 suggests discrimination ability classes; 0.7 < AUC < 0.8 considered acceptable, 0.8 < AUC < 0.5 considered excellent, AUC > 0.9 outstanding (Mandrekar, 2010). multiclass cases, AUC equivalent average AUC class (Hand & Till, 2001). Finally, AUC directly related Gini-index (.k.. G1) since Gini + 1 = 2*AUC. (Hand & Till, 2001). formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/AUC_roc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Area Under the ROC Curve — AUC_roc","text":"Hanley, J.., McNeil, J.. (2017). meaning use area receiver operating characteristic (ROC) curve. _ Radiology 143(1): 29-36_ doi:10.1148/radiology.143.1.7063747 Hand, D.J., Till, R.J. (2001). simple generalisation area ROC curve multiple class classification problems. _ Machine Learning 45: 171-186_ doi:10.1023/:1010920819831 Mandrekar, J.N. (2010). Receiver operating characteristic curve diagnostic test assessment. _ J. Thoracic Oncology 5(9): 1315-1316_ doi:10.1097/JTO.0b013e3181ec173d Powers, D.M.W. (2011). Evaluation: Precision, Recall F-Measure ROC, Informedness, Markedness & Correlation. Journal Machine Learning Technologies 2(1): 37–63. doi:10.48550/arXiv.2010.16061","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/AUC_roc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Area Under the ROC Curve — AUC_roc","text":"","code":"# \\donttest{ set.seed(123) # Two-class binomial_case <- data.frame(labels = sample(c(\"True\",\"False\"), 100,  replace = TRUE), predictions = sample(c(\"True\",\"False\"), 100, replace = TRUE)) # Multi-class multinomial_case <- data.frame(labels = sample(c(\"Red\",\"Blue\", \"Green\"), 100,  replace = TRUE), predictions = sample(c(\"Red\",\"Blue\", \"Green\"), 100, replace = TRUE) )  # Get AUC estimate for two-class case AUC_roc(data = binomial_case, obs = labels, pred = predictions, tidy = TRUE) #>     AUC_roc #> 1 0.5692277  # Get AUC estimate for multi-class case AUC_roc(data = multinomial_case, obs = labels, pred = predictions, tidy = TRUE) #>     AUC_roc #> 1 0.4582371 # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/B0_sma.html","id":null,"dir":"Reference","previous_headings":"","what":"Intercept of standardized major axis regression (SMA). — B0_sma","title":"Intercept of standardized major axis regression (SMA). — B0_sma","text":"calculates intercept (B0) bivariate linear relationship predicted observed values following SMA regression.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/B0_sma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Intercept of standardized major axis regression (SMA). — B0_sma","text":"","code":"B0_sma(data = NULL, obs, pred, orientation = \"PO\", tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/B0_sma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Intercept of standardized major axis regression (SMA). — B0_sma","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). orientation Argument class string specifying axis orientation, PO predicted vs observed, OP observed vs predicted. Default orientation = \"PO\". tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na_rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/B0_sma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Intercept of standardized major axis regression (SMA). — B0_sma","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/B0_sma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Intercept of standardized major axis regression (SMA). — B0_sma","text":"SMA symmetric linear regression (invariant results/interpretation axis orientation) recommended describe bivariate scatter instead OLS regression (classic linear model, results vary axis orientation). formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/B0_sma.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Intercept of standardized major axis regression (SMA). — B0_sma","text":"Warton et al. (2006). Bivariate line-fitting methods allometry. Biol. Rev. Camb. Philos. Soc. 81, 259–291. doi:10.1002/1521-4036(200203)44:2<161::AID-BIMJ161>3.0.CO;2-N","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/B0_sma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Intercept of standardized major axis regression (SMA). — B0_sma","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- rnorm(n = 100, mean = 0, sd = 9) B0_sma(obs = X, pred = Y) #> $B0 #> [1] -1.385373 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/B1_sma.html","id":null,"dir":"Reference","previous_headings":"","what":"Slope of standardized major axis regression (SMA). — B1_sma","title":"Slope of standardized major axis regression (SMA). — B1_sma","text":"calculates slope (B1) bivariate linear relationship predicted observed values following SMA regression.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/B1_sma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slope of standardized major axis regression (SMA). — B1_sma","text":"","code":"B1_sma(data = NULL, obs, pred, tidy = FALSE, orientation = \"PO\", na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/B1_sma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Slope of standardized major axis regression (SMA). — B1_sma","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. orientation Argument class string specifying axis orientation, PO predicted vs observed, OP observed vs predicted. Default orientation = \"PO\". na.rm Logic argument remove rows missing values (NA). Default na_rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/B1_sma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Slope of standardized major axis regression (SMA). — B1_sma","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/B1_sma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Slope of standardized major axis regression (SMA). — B1_sma","text":"SMA symmetric linear regression (invariant results/interpretation axis orientation) recommended describe bivariate scatter instead OLS regression (classic linear model, results vary axis orientation). formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/B1_sma.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Slope of standardized major axis regression (SMA). — B1_sma","text":"Warton et al. (2006). Bivariate line-fitting methods allometry. Biol. Rev. Camb. Philos. Soc. 81, 259–291. doi:10.1002/1521-4036(200203)44:2<161::AID-BIMJ161>3.0.CO;2-N","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/B1_sma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Slope of standardized major axis regression (SMA). — B1_sma","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- rnorm(n = 100, mean = 0, sd = 9) B1_sma(obs = X, pred = Y) #> $B1 #> [1] 0.9597994 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/CCC.html","id":null,"dir":"Reference","previous_headings":"","what":"Concordance correlation coefficient (CCC) — CCC","title":"Concordance correlation coefficient (CCC) — CCC","text":"estimates Concordance Correlation Coefficient (CCC) continuous predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/CCC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concordance correlation coefficient (CCC) — CCC","text":"","code":"CCC(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/CCC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concordance correlation coefficient (CCC) — CCC","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/CCC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concordance correlation coefficient (CCC) — CCC","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/CCC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Concordance correlation coefficient (CCC) — CCC","text":"CCC normalized coefficient tests general agreement. presents precision (r) accuracy (Xa) components. positively bounded 1. closer 1 better. Values towards zero indicate low correlation observations predictions. Negative values indicate negative relationship predicted observed. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/CCC.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Concordance correlation coefficient (CCC) — CCC","text":"Lin (1989). concordance correlation coefficient evaluate reproducibility. Biometrics 45 (1), 255–268. doi:10.2307/2532051","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/CCC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concordance correlation coefficient (CCC) — CCC","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- X + rnorm(n=100, mean = 0, sd = 3) CCC(obs = X, pred = Y) #> $CCC #> [1] 0.9512255 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/E1.html","id":null,"dir":"Reference","previous_headings":"","what":"Absolute Model Efficiency (E1) — E1","title":"Absolute Model Efficiency (E1) — E1","text":"estimates E1 model efficiency using absolute differences.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/E1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Absolute Model Efficiency (E1) — E1","text":"","code":"E1(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/E1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Absolute Model Efficiency (E1) — E1","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/E1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Absolute Model Efficiency (E1) — E1","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/E1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Absolute Model Efficiency (E1) — E1","text":"E1 type model efficiency modifies Nash-Sutcliffe model efficiency using absolute residuals instead squared residuals. E1 used overcome NSE -sensitivity extreme values caused used squared residuals. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/E1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Absolute Model Efficiency (E1) — E1","text":"Legates & McCabe (1999). Evaluating use “goodness--fit” measures hydrologic hydroclimatic model validation. Water Resour. Res. doi:10.1029/1998WR900018","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/E1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Absolute Model Efficiency (E1) — E1","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- rnorm(n = 100, mean = 0, sd = 9) E1(obs = X, pred = Y) #> $E1 #> [1] -0.387503 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/Erel.html","id":null,"dir":"Reference","previous_headings":"","what":"Relative Model Efficiency (Erel) — Erel","title":"Relative Model Efficiency (Erel) — Erel","text":"estimates Erel model efficiency using differences observations.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/Erel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relative Model Efficiency (Erel) — Erel","text":"","code":"Erel(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/Erel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relative Model Efficiency (Erel) — Erel","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/Erel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relative Model Efficiency (Erel) — Erel","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/Erel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Relative Model Efficiency (Erel) — Erel","text":"Erel model efficiency normalizes residuals (numerator) observed deviations (denominator) observed values squaring . Compared NSE, Erel suggested sensitive systematic - -predictions. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/Erel.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Relative Model Efficiency (Erel) — Erel","text":"Krause et al. (2005). Comparison different efficiency criteria hydrological model assessment. Adv. Geosci. 5, 89–97. doi:10.5194/adgeo-5-89-2005","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/Erel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Relative Model Efficiency (Erel) — Erel","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- rnorm(n = 100, mean = 0, sd = 9) Erel(obs = X, pred = Y) #> $Erel #> [1] -422.7567 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/KGE.html","id":null,"dir":"Reference","previous_headings":"","what":"Kling-Gupta Model Efficiency (KGE). — KGE","title":"Kling-Gupta Model Efficiency (KGE). — KGE","text":"estimates KGE predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/KGE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kling-Gupta Model Efficiency (KGE). — KGE","text":"","code":"KGE(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/KGE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kling-Gupta Model Efficiency (KGE). — KGE","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/KGE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kling-Gupta Model Efficiency (KGE). — KGE","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/KGE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Kling-Gupta Model Efficiency (KGE). — KGE","text":"KGE normalized, dimensionless, model efficiency measures general agreement. presents accuracy, precision, consistency components. symmetric (invariant predicted observed orientation). positively bounded 1. closer 1 better. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/KGE.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Kling-Gupta Model Efficiency (KGE). — KGE","text":"Kling et al. (2012). Runoff conditions upper Danube basin ensemble climate change scenarios. Journal Hydrology 424-425, 264-277. doi:10.1016/j.jhydrol.2012.01.011","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/KGE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kling-Gupta Model Efficiency (KGE). — KGE","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- rnorm(n = 100, mean = 0, sd = 9) KGE(obs = X, pred = Y) #> $KGE #> [1] -3.393248 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/LCS.html","id":null,"dir":"Reference","previous_headings":"","what":"Lack of Correlation (LCS) — LCS","title":"Lack of Correlation (LCS) — LCS","text":"estimates lack correlation (LCS) component Mean Squared Error (MSE) proposed Kobayashi & Salam (2000).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/LCS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lack of Correlation (LCS) — LCS","text":"","code":"LCS(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/LCS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lack of Correlation (LCS) — LCS","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/LCS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lack of Correlation (LCS) — LCS","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/LCS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Lack of Correlation (LCS) — LCS","text":"LCS represents random component prediction error following Kobayashi & Salam (2000). lower value less contribution MSE. However, needs compared MSE benchmark. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/LCS.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Lack of Correlation (LCS) — LCS","text":"Kobayashi & Salam (2000). Comparing simulated measured values using mean squared deviation components. Agron. J. 92, 345–352. doi:10.2134/agronj2000.922345x","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/LCS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lack of Correlation (LCS) — LCS","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- X + rnorm(n=100, mean = 0, sd = 3) LCS(obs = X, pred = Y) #> $LCS #> [1] 7.978492 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/MAE.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean Absolute Error (MAE) — MAE","title":"Mean Absolute Error (MAE) — MAE","text":"estimates MAE continuous predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MAE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean Absolute Error (MAE) — MAE","text":"","code":"MAE(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/MAE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean Absolute Error (MAE) — MAE","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MAE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean Absolute Error (MAE) — MAE","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MAE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mean Absolute Error (MAE) — MAE","text":"MAE measures lack accuracy precision absolute scale. keeps units response variable. less sensitive outliers MSE RMSE. lower better. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MAE.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Mean Absolute Error (MAE) — MAE","text":"Willmott & Matsuura (2005). Advantages mean absolute error (MAE) root mean square error (RMSE) assessing average model performance. Clim. Res. 30, 79–82. doi:10.3354/cr030079","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MAE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mean Absolute Error (MAE) — MAE","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- X + rnorm(n=100, mean = 0, sd = 3) MAE(obs = X, pred = Y) #> $MAE #> [1] 2.283581 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/MAPE.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean Absolute Percentage Error (MAPE) — MAPE","title":"Mean Absolute Percentage Error (MAPE) — MAPE","text":"estimates MAPE continuous predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MAPE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean Absolute Percentage Error (MAPE) — MAPE","text":"","code":"MAPE(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/MAPE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean Absolute Percentage Error (MAPE) — MAPE","text":"data (optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MAPE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean Absolute Percentage Error (MAPE) — MAPE","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MAPE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mean Absolute Percentage Error (MAPE) — MAPE","text":"MAPE expressed percentage units (independent scale), makes easy explain compare performance across models different response variables. MAPE asymmetric (sensitive axis orientation). lower better. main disadvantage, MAPE produces infinite undefined values zero close--zero observed values. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MAPE.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Mean Absolute Percentage Error (MAPE) — MAPE","text":"Kim & Kim (2016). new metric absolute percentage error intermittent demand forecast. _Int. J. Forecast. 32, 669-679._doi:10.1016/j.ijforecast.2015.12.003","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MAPE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mean Absolute Percentage Error (MAPE) — MAPE","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- X + rnorm(n=100, mean = 0, sd = 3) MAPE(obs = X, pred = Y) #> $MAPE #> [1] 542.9795 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/MASE.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean Absolute Scaled Error (MASE) — MASE","title":"Mean Absolute Scaled Error (MASE) — MASE","text":"estimates mean absolute error using naive-error approach continuous predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MASE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean Absolute Scaled Error (MASE) — MASE","text":"","code":"MASE(   data = NULL,   obs,   pred,   time = NULL,   naive_step = 1,   oob_mae = NULL,   tidy = FALSE,   na.rm = TRUE )"},{"path":"https://adriancorrendo.github.io/metrica/reference/MASE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean Absolute Scaled Error (MASE) — MASE","text":"data (Required) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). time (Optional) String \"name\" vector containing time variable sort observations. \"Optional\" ensure appropriate MASE estimation. Default: NULL, assumes observations already sorted time. naive_step positive number specifying many observed values recall back time computing naive expectation. Default = 1 oob_mae numeric value indicating --bag (--sample) MAE. default, -sample MAE calculated using naive forecast method. See Hyndman & Koehler (2006). Default : NULL. tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MASE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean Absolute Scaled Error (MASE) — MASE","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MASE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mean Absolute Scaled Error (MASE) — MASE","text":"MASE especially well suited time series predictions. can used compare forecast methods single series also compare forecast accuracy series. metric never gives infinite undefined values (unless observations time exactly !). default, MASE scales error based -sample MAE naive forecast method (random walk). -sample MAE used denominator always available effectively scales errors.Since based absolute error, less sensitive outliers compared classic MSE. \\(MASE = \\frac{1}{n}(\\frac{|O_i-P_i|}{ \\frac{1}{T-1} \\sum^T_{t=2}~|O_t - O_{t-1}| })\\) available, users may use --bag error independent dataset, can specified oob_mae arg. replace denominator MASE equation. MASE measures total error (.e. lack accuracy precision.). lower MASE 1, better prediction quality. MASE = indicates difference model naive forecast (oob predictions). MASE > 1 indicate poor performance. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MASE.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Mean Absolute Scaled Error (MASE) — MASE","text":"Hyndman, R.J., Koehler, .B. (2006). Another look measures forecast accuracy. _ Int. J. Forecast_ doi:10.3354/cr030079","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MASE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mean Absolute Scaled Error (MASE) — MASE","text":"","code":"# \\donttest{ set.seed(1) # Create a fake dataset X <- rnorm(n = 100, mean = 8, sd = 10) Y <- rnorm(n = 100, mean = 8.2, sd = 15) Z <- seq(1, 100, by = 1)  time_data <- as.data.frame(list(\"observed\" = X, \"predicted\" = Y, \"time\" = Z))   MASE(data = time_data, obs = observed, pred = predicted, time = time) #> $MASE #> [1] 0 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/MBE.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean Bias Error (MBE) — MBE","title":"Mean Bias Error (MBE) — MBE","text":"estimates MBE continuous predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MBE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean Bias Error (MBE) — MBE","text":"","code":"MBE(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/MBE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean Bias Error (MBE) — MBE","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MBE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean Bias Error (MBE) — MBE","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MBE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mean Bias Error (MBE) — MBE","text":"MBE one widely used error metrics. presents units response variable, unbounded. can simply estimated difference means predictions observations. closer zero better. Negative values indicate overestimation. Positive values indicate general underestimation. disadvantages sensitive additional bias, MBE may mask poor performance overestimation underestimation co-exist (type proportional bias). formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MBE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mean Bias Error (MBE) — MBE","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- X + rnorm(n=100, mean = 0, sd = 3) MBE(obs = X, pred = Y) #> $MBE #> [1] 0.1134242 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/MIC.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximal Information Coefficient — MIC","title":"Maximal Information Coefficient — MIC","text":"estimates Maximal Information Coefficient (MIC) continuous predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MIC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximal Information Coefficient — MIC","text":"","code":"MIC(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/MIC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximal Information Coefficient — MIC","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list (default). na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MIC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maximal Information Coefficient — MIC","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MIC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Maximal Information Coefficient — MIC","text":"MIC function wrapper mine_stat function minerva-package, collection Maximal Information-Based Nonparametric statistics (MINE). See Reshef et al. (2011). predicted-observed case (PO), MIC defined follows: $$\\textrm{MIC}(D)=\\max_{PO<B(n)} M(D)_{X,Y} = \\max_{PO<B(n)} \\frac{^ * (D,P,O)} {log(\\min{P,O})},$$ \\(B(n)=n^{\\alpha}\\) search-grid size, \\(^*(D,P,O)\\) maximum mutual information grids P--O, distribution induced D grid P O bins (probability mass cell grid fraction points D falling cell). Albanese et al. (2013). formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MIC.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Maximal Information Coefficient — MIC","text":"Reshef, D., Reshef, Y., Finucane, H., Grossman, S., McVean, G., Turnbaugh, P., Lander, R., Mitzenmacher, M., Sabeti, P. (2011). Detecting novel associations large datasets. Science 334, 6062. doi:10.1126/science.1205438 . Albanese, D., M. Filosi, R. Visintainer, S. Riccadonna, G. Jurman, C. Furlanello. minerva minepy: C engine MINE suite R, Python MATLAB wrappers. Bioinformatics (2013) 29(3):407-408. doi:10.1093/bioinformatics/bts707 .","code":""},{"path":[]},{"path":"https://adriancorrendo.github.io/metrica/reference/MIC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Maximal Information Coefficient — MIC","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- X + rnorm(n=100, mean = 0, sd = 3) MIC(obs = X, pred = Y) #> [1] 0.8546051 # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/MLA.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean Lack of Accuracy (MLA) — MLA","title":"Mean Lack of Accuracy (MLA) — MLA","text":"estimates MLA, systematic error component Mean Squared Error (MSE), continuous predicted-observed dataset following Correndo et al. (2021).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MLA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean Lack of Accuracy (MLA) — MLA","text":"","code":"MLA(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/MLA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean Lack of Accuracy (MLA) — MLA","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MLA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean Lack of Accuracy (MLA) — MLA","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MLA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mean Lack of Accuracy (MLA) — MLA","text":"MLA represents systematic (bias) component MSE. obtained via symmetric decomposition MSE (invariant predicted-observed orientation) using symmetric regression line. MLA equal sum systematic differences divided sample size (n). greater value greater bias predictions. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MLA.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Mean Lack of Accuracy (MLA) — MLA","text":"Correndo et al. (2021). Revisiting linear regression test agreement continuous predicted-observed datasets. Agric. Syst. 192, 103194. doi:10.1016/j.agsy.2021.103194","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MLA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mean Lack of Accuracy (MLA) — MLA","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- X + rnorm(n=100, mean = 0, sd = 3) MLA(obs = X, pred = Y) #> $MLA #> [1] 0.2095862 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/MLP.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean Lack of Precision (MLP) — MLP","title":"Mean Lack of Precision (MLP) — MLP","text":"estimates MLP, unsystematic error component Mean Squared Error (MSE), continuous predicted-observed dataset following Correndo et al. (2021).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MLP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean Lack of Precision (MLP) — MLP","text":"","code":"MLP(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/MLP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean Lack of Precision (MLP) — MLP","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MLP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean Lack of Precision (MLP) — MLP","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MLP.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mean Lack of Precision (MLP) — MLP","text":"MLP represents unsystematic (random) component MSE. obtained via symmetric decomposition MSE (invariant predicted-observed orientation) using symmetric regression line. MLP equal sum unsystematic differences divided sample size (n). greater value greater random noise predictions. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MLP.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Mean Lack of Precision (MLP) — MLP","text":"Correndo et al. (2021). Revisiting linear regression test agreement continuous predicted-observed datasets. Agric. Syst. 192, 103194. doi:10.1016/j.agsy.2021.103194","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MLP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mean Lack of Precision (MLP) — MLP","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- X + rnorm(n=100, mean = 0, sd = 3) MLP(obs = X, pred = Y) #> $MLP #> [1] 7.978492 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/MSE.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean Squared Error (MSE) — MSE","title":"Mean Squared Error (MSE) — MSE","text":"estimates MSE continuous predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MSE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean Squared Error (MSE) — MSE","text":"","code":"MSE(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/MSE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean Squared Error (MSE) — MSE","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MSE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean Squared Error (MSE) — MSE","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MSE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mean Squared Error (MSE) — MSE","text":"MSE, also known MSD, measures general agreement, includes variance (lack precision) bias (lack accuracy). MSE predictions decomposed following variety approaches (e.g. Willmott et al. 1981; Correndo et al. 2021). calculation simple, sum squared differences predictions observations divided sample size (n). greater value worse predicted performance. Unfortunately, units MSE direct interpretation. direct interpretation, square root MSE (RMSE) units variable interest. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MSE.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Mean Squared Error (MSE) — MSE","text":"Willmott (1981). validation models. Phys. Geogr. 2, 184–194. doi:10.1080/02723646.1981.10642213 Correndo et al. (2021). Revisiting linear regression test agreement continuous predicted-observed datasets. Agric. Syst. 192, 103194. doi:10.1016/j.agsy.2021.103194","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/MSE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mean Squared Error (MSE) — MSE","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- rnorm(n = 100, mean = 0, sd = 9) MSE(obs = X, pred = Y) #> $MSE #> [1] 155.6413 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/NSE.html","id":null,"dir":"Reference","previous_headings":"","what":"Nash-Sutcliffe Model Efficiency (NSE) — NSE","title":"Nash-Sutcliffe Model Efficiency (NSE) — NSE","text":"estimates model efficiency suggested Nash & Sutcliffe (1970) continuous predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/NSE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nash-Sutcliffe Model Efficiency (NSE) — NSE","text":"","code":"NSE(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/NSE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nash-Sutcliffe Model Efficiency (NSE) — NSE","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/NSE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nash-Sutcliffe Model Efficiency (NSE) — NSE","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/NSE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Nash-Sutcliffe Model Efficiency (NSE) — NSE","text":"NSE measures general agreement. normalized (variance observations) dimensionless. calculated using absolute squared differences predictions observations, suggested issue due -sensitivity outliers. goes form -infinity 1. closer 1 better prediction performance. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/NSE.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Nash-Sutcliffe Model Efficiency (NSE) — NSE","text":"Nash & Sutcliffe (1970). River flow forecasting conceptual models part - discussion principles. J. Hydrol. 10(3), 292-290. doi:10.1016/0022-1694(70)90255-6","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/NSE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nash-Sutcliffe Model Efficiency (NSE) — NSE","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- rnorm(n = 100, mean = 0, sd = 9) NSE(obs = X, pred = Y) #> $NSE #> [1] -0.948696 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/PAB.html","id":null,"dir":"Reference","previous_headings":"","what":"Percentage Additive Bias (PAB) — PAB","title":"Percentage Additive Bias (PAB) — PAB","text":"estimates contribution proportional bias Mean Squared Error (MSE) following Correndo et al. (2021).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/PAB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Percentage Additive Bias (PAB) — PAB","text":"","code":"PAB(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/PAB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Percentage Additive Bias (PAB) — PAB","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/PAB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Percentage Additive Bias (PAB) — PAB","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/PAB.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Percentage Additive Bias (PAB) — PAB","text":"PAB represents contribution additive bias () component MSE. PAB = 100*((mO-mP)^2/MSE), mO, mP represent mean observations predictions, respectively. greater value greater contribution additive bias prediction error. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/PAB.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Percentage Additive Bias (PAB) — PAB","text":"Correndo et al. (2021). Revisiting linear regression test agreement continuous predicted-observed datasets. Agric. Syst. 192, 103194. doi:10.1016/j.agsy.2021.103194","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/PAB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Percentage Additive Bias (PAB) — PAB","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- X + rnorm(n=100, mean = 0, sd = 3) PAB(obs = X, pred = Y) #> $PAB #> [1] 0.1571194 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/PBE.html","id":null,"dir":"Reference","previous_headings":"","what":"Percentage Bias Error (PBE). — PBE","title":"Percentage Bias Error (PBE). — PBE","text":"estimates PBE continuous predicted-observed dataset following Gupta et al. (1999).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/PBE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Percentage Bias Error (PBE). — PBE","text":"","code":"PBE(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/PBE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Percentage Bias Error (PBE). — PBE","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/PBE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Percentage Bias Error (PBE). — PBE","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/PBE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Percentage Bias Error (PBE). — PBE","text":"PBE (%) useful identify systematic predictions. unbounded metric. closer zero bias predictions. Negative values indicate overestimation, positive values indicate underestimation. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/PBE.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Percentage Bias Error (PBE). — PBE","text":"Gupta et al. (1999). Status automatic calibration hydrologic models: Comparison multilevel expert calibration. J. Hydrologic Eng. 4(2): 135-143. doi:10.1061/(ASCE)1084-0699(1999)4:2(135)","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/PBE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Percentage Bias Error (PBE). — PBE","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- X + rnorm(n=100, mean = 0, sd = 3) PBE(obs = X, pred = Y) #> $PBE #> [1] 10.41666 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/PLA.html","id":null,"dir":"Reference","previous_headings":"","what":"Percentage Lack of Accuracy (PLA) — PLA","title":"Percentage Lack of Accuracy (PLA) — PLA","text":"estimates PLA, contribution systematic error Mean Squared Error (MSE) continuous predicted-observed dataset following Correndo et al. (2021).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/PLA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Percentage Lack of Accuracy (PLA) — PLA","text":"","code":"PLA(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/PLA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Percentage Lack of Accuracy (PLA) — PLA","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/PLA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Percentage Lack of Accuracy (PLA) — PLA","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/PLA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Percentage Lack of Accuracy (PLA) — PLA","text":"PLA (%, 0-100) represents  contribution Mean Lack Accuracy (MLA), systematic (bias) component MSE. obtained via symmetric decomposition MSE (invariant predicted-observed orientation). PLA can segregated percentage additive bias (PAB) percentage proportional bias (PPB). greater value greater contribution systematic error MSE. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/PLA.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Percentage Lack of Accuracy (PLA) — PLA","text":"Correndo et al. (2021). Revisiting linear regression test agreement continuous predicted-observed datasets. Agric. Syst. 192, 103194. doi:10.1016/j.agsy.2021.103194","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/PLA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Percentage Lack of Accuracy (PLA) — PLA","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- X + rnorm(n=100, mean = 0, sd = 3) PLA(obs = X, pred = Y) #> $PLA #> [1] 2.559651 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/PLP.html","id":null,"dir":"Reference","previous_headings":"","what":"Percentage Lack of Precision (PLP) — PLP","title":"Percentage Lack of Precision (PLP) — PLP","text":"estimates PLP, contribution unsystematic error Mean Squared Error (MSE) continuous predicted-observed dataset following Correndo et al. (2021).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/PLP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Percentage Lack of Precision (PLP) — PLP","text":"","code":"PLP(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/PLP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Percentage Lack of Precision (PLP) — PLP","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/PLP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Percentage Lack of Precision (PLP) — PLP","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/PLP.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Percentage Lack of Precision (PLP) — PLP","text":"PLP (%, 0-100) represents  contribution Mean Lack Precision (MLP),  unsystematic (random) component MSE. obtained via symmetric decomposition MSE (invariant predicted-observed orientation). greater value greater contribution unsystematic error MSE. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/PLP.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Percentage Lack of Precision (PLP) — PLP","text":"Correndo et al. (2021). Revisiting linear regression test agreement continuous predicted-observed datasets. Agric. Syst. 192, 103194. doi:10.1016/j.agsy.2021.103194","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/PLP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Percentage Lack of Precision (PLP) — PLP","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- X + rnorm(n=100, mean = 0, sd = 3) PLP(obs = X, pred = Y) #> $PLP #> [1] 97.44035 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/PPB.html","id":null,"dir":"Reference","previous_headings":"","what":"Percentage Proportional Bias (PPB) — PPB","title":"Percentage Proportional Bias (PPB) — PPB","text":"estimates contribution proportional bias Mean Squared Error (MSE) following Correndo et al. (2021).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/PPB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Percentage Proportional Bias (PPB) — PPB","text":"","code":"PPB(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/PPB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Percentage Proportional Bias (PPB) — PPB","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/PPB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Percentage Proportional Bias (PPB) — PPB","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/PPB.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Percentage Proportional Bias (PPB) — PPB","text":"PPB (%) measures contribution proportional bias MSE. PPB = 100*(((- sP)^2)/MSE), , sP sample variances observations predictions, respectively. greater value greater contribution proportional bias prediction error. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/PPB.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Percentage Proportional Bias (PPB) — PPB","text":"Correndo et al. (2021). Revisiting linear regression test agreement continuous predicted-observed datasets. Agric. Syst. 192, 103194. doi:10.1016/j.agsy.2021.103194","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/PPB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Percentage Proportional Bias (PPB) — PPB","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- X + rnorm(n=100, mean = 0, sd = 3) PPB(obs = X, pred = Y) #> $PPB #> [1] 2.402532 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/R2.html","id":null,"dir":"Reference","previous_headings":"","what":"Coefficient of determination (R2). — R2","title":"Coefficient of determination (R2). — R2","text":"estimates R2 continuous predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/R2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coefficient of determination (R2). — R2","text":"","code":"R2(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/R2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coefficient of determination (R2). — R2","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/R2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coefficient of determination (R2). — R2","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/R2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Coefficient of determination (R2). — R2","text":"R2 one widely used metrics evaluating models performance. R2 appropriate estimate strength linear association two variables. positively bounded 1, may produce negative values. closer 1 better linear association predictions observations. However, R2 presents major flaw prediction performance evaluation: sensitive lack accuracy (additive proportional bias). Thus, R2 measures precision, account accuracy predictions. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/R2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Coefficient of determination (R2). — R2","text":"Yang et al. (2014). evaluation statistical methods testing performance crop models observed data. Agric. Syst. 127, 81-89. doi:10.1016/j.agsy.2014.01.008","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/R2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coefficient of determination (R2). — R2","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- X + rnorm(n=100, mean = 0, sd = 3) R2(obs = X, pred = Y) #> $R2 #> [1] 0.9070934 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/RAC.html","id":null,"dir":"Reference","previous_headings":"","what":"Robinson's Agreement Coefficient (RAC). — RAC","title":"Robinson's Agreement Coefficient (RAC). — RAC","text":"estimates agreement coefficient suggested Robinson (1957; 1959) continuous predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RAC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Robinson's Agreement Coefficient (RAC). — RAC","text":"","code":"RAC(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/RAC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Robinson's Agreement Coefficient (RAC). — RAC","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RAC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Robinson's Agreement Coefficient (RAC). — RAC","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RAC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Robinson's Agreement Coefficient (RAC). — RAC","text":"RAC measures accuracy precision (general agreement). normalized, dimensionless, bounded (0 1), symmetric (invariant predicted-observed orientation). formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RAC.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Robinson's Agreement Coefficient (RAC). — RAC","text":"Robinson (1957). statistical measurement agreement. . Sociol. Rev. 22(1), 17-25 doi:10.2307/2088760 Robinson (1959). geometric interpretation agreement. . Sociol. Rev. 24(3), 338-345 doi:10.2307/2089382","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RAC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Robinson's Agreement Coefficient (RAC). — RAC","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- X + rnorm(n=100, mean = 0, sd = 3) RAC(obs = X, pred = Y) #> $RAC #> [1] 0.9756118 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/RAE.html","id":null,"dir":"Reference","previous_headings":"","what":"Relative Absolute Error (RAE) — RAE","title":"Relative Absolute Error (RAE) — RAE","text":"estimates RAC continuous predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RAE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relative Absolute Error (RAE) — RAE","text":"","code":"RAE(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/RAE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relative Absolute Error (RAE) — RAE","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RAE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relative Absolute Error (RAE) — RAE","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RAE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Relative Absolute Error (RAE) — RAE","text":"RAE normalizes Mean Absolute Error (MAE) respect total absolute error. calculated ratio sum absolute residuals (error predictions respect observations) sum absolute errors observations respect mean. presents lower bound 0 (perfect fit), upper bound. can used compare models using different units. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RAE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Relative Absolute Error (RAE) — RAE","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- X + rnorm(n=100, mean = 0, sd = 3) RAE(obs = X, pred = Y) #> $RAE #> [1] 0.3202058 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/RMAE.html","id":null,"dir":"Reference","previous_headings":"","what":"Relative Mean Absolute Error (RMAE) — RMAE","title":"Relative Mean Absolute Error (RMAE) — RMAE","text":"estimates RMAE continuous predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RMAE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relative Mean Absolute Error (RMAE) — RMAE","text":"","code":"RMAE(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/RMAE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relative Mean Absolute Error (RMAE) — RMAE","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RMAE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relative Mean Absolute Error (RMAE) — RMAE","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RMAE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Relative Mean Absolute Error (RMAE) — RMAE","text":"RMAE normalizes Mean Absolute Error (MAE) mean observations. closer zero lower prediction error. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RMAE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Relative Mean Absolute Error (RMAE) — RMAE","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- X + rnorm(n=100, mean = 0, sd = 3) RMAE(obs = X, pred = Y) #> $RMAE #> [1] 2.097195 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/RMLA.html","id":null,"dir":"Reference","previous_headings":"","what":"Root Mean Lack of Accuracy (RMLA) — RMLA","title":"Root Mean Lack of Accuracy (RMLA) — RMLA","text":"estimates RMLA, square root systematic error component Mean Squared Error (MSE), continuous predicted-observed dataset following Correndo et al. (2021).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RMLA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Root Mean Lack of Accuracy (RMLA) — RMLA","text":"","code":"RMLA(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/RMLA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Root Mean Lack of Accuracy (RMLA) — RMLA","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RMLA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Root Mean Lack of Accuracy (RMLA) — RMLA","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RMLA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Root Mean Lack of Accuracy (RMLA) — RMLA","text":"RMLA represents systematic (bias) component MSE expressed original variable units. obtained via symmetric decomposition MSE (invariant predicted-observed orientation) using symmetric regression line (SMA). RMLA equal square-root sum systematic differences divided sample size (n). greater value greater bias predictions. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RMLA.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Root Mean Lack of Accuracy (RMLA) — RMLA","text":"Correndo et al. (2021). Revisiting linear regression test agreement continuous predicted-observed datasets. Agric. Syst. 192, 103194. doi:10.1016/j.agsy.2021.103194","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RMLA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Root Mean Lack of Accuracy (RMLA) — RMLA","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- X + rnorm(n=100, mean = 0, sd = 3) RMLA(obs = X, pred = Y) #> $RMLA #> [1] 0.2095862 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/RMLP.html","id":null,"dir":"Reference","previous_headings":"","what":"Root Mean Lack of Precision (RMLP) — RMLP","title":"Root Mean Lack of Precision (RMLP) — RMLP","text":"estimates RMLP, square root unsystematic error component Mean Squared Error (MSE), continuous predicted-observed dataset following Correndo et al. (2021).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RMLP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Root Mean Lack of Precision (RMLP) — RMLP","text":"","code":"RMLP(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/RMLP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Root Mean Lack of Precision (RMLP) — RMLP","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RMLP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Root Mean Lack of Precision (RMLP) — RMLP","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RMLP.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Root Mean Lack of Precision (RMLP) — RMLP","text":"RMLP represents unsystematic (random) component MSE expressed original variables units \\( \\sqrt{MLP} \\). obtained via symmetric decomposition MSE (invariant predicted-observed orientation) using symmetric regression line (SMA). RMLP equal square-root sum unsystematic differences divided sample size (n). greater value greater random noise predictions. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RMLP.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Root Mean Lack of Precision (RMLP) — RMLP","text":"Correndo et al. (2021). Revisiting linear regression test agreement continuous predicted-observed datasets. Agric. Syst. 192, 103194. doi:10.1016/j.agsy.2021.103194","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RMLP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Root Mean Lack of Precision (RMLP) — RMLP","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- X + rnorm(n=100, mean = 0, sd = 3) RMLP(obs = X, pred = Y) #> $RMLP #> [1] 7.978492 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/RMSE.html","id":null,"dir":"Reference","previous_headings":"","what":"Root Mean Squared Error (RMSE) — RMSE","title":"Root Mean Squared Error (RMSE) — RMSE","text":"estimates RMSE continuous predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RMSE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Root Mean Squared Error (RMSE) — RMSE","text":"","code":"RMSE(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/RMSE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Root Mean Squared Error (RMSE) — RMSE","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RMSE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Root Mean Squared Error (RMSE) — RMSE","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RMSE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Root Mean Squared Error (RMSE) — RMSE","text":"RMSE one widely used error metrics literature evaluate prediction performance. measures general agreement, sensitive lack precision lack accuracy. simply square root Mean Squared Error (MSE). Thus, presents units variable interest, facilitating interpretation. goes 0 infinity. lower value better prediction performance. counterpart sensitive outliers. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RMSE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Root Mean Squared Error (RMSE) — RMSE","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- X + rnorm(n=100, mean = 0, sd = 3) RMSE(obs = X, pred = Y) #> $RMSE #> [1] 2.861482 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/RRMSE.html","id":null,"dir":"Reference","previous_headings":"","what":"Relative Root Mean Squared Error (RMSE) — RRMSE","title":"Relative Root Mean Squared Error (RMSE) — RRMSE","text":"estimates RRMSE continuous predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RRMSE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relative Root Mean Squared Error (RMSE) — RRMSE","text":"","code":"RRMSE(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/RRMSE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relative Root Mean Squared Error (RMSE) — RRMSE","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RRMSE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relative Root Mean Squared Error (RMSE) — RRMSE","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RRMSE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Relative Root Mean Squared Error (RMSE) — RRMSE","text":"RRMSE normalizes Root Mean Squared Error (RMSE) mean observations. goes 0 infinity. lower better prediction performance. literature, can also found NRMSE (normalized root mean squared error). However, use RRMSE since several alternatives \"normalize\" RMSE exist (e.g., RSR, iqRMSE). formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RRMSE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Relative Root Mean Squared Error (RMSE) — RRMSE","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- X + rnorm(n=100, mean = 0, sd = 3) RRMSE(obs = X, pred = Y) #> $RRMSE #> [1] 2.627928 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/RSE.html","id":null,"dir":"Reference","previous_headings":"","what":"Relative Squared Error (RSE) — RSE","title":"Relative Squared Error (RSE) — RSE","text":"estimates RSE continuous predicted-observer dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RSE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relative Squared Error (RSE) — RSE","text":"","code":"RSE(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/RSE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relative Squared Error (RSE) — RSE","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RSE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relative Squared Error (RSE) — RSE","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RSE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Relative Squared Error (RSE) — RSE","text":"RSE ratio residual sum squares (RSS, error predictions respect observations) total sum squares (TSS, error observations respect mean). RSE dimensionless, can used compared models different units. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RSE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Relative Squared Error (RSE) — RSE","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- X + rnorm(n=100, mean = 0, sd = 3) RSE(obs = X, pred = Y) #> $RSE #> [1] 0.1025183 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/RSR.html","id":null,"dir":"Reference","previous_headings":"","what":"Root Mean Standard Deviation Ratio (RSR) — RSR","title":"Root Mean Standard Deviation Ratio (RSR) — RSR","text":"estimates MSE normalized standard deviation observed values following Moriasi et al. (2007).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RSR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Root Mean Standard Deviation Ratio (RSR) — RSR","text":"","code":"RSR(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/RSR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Root Mean Standard Deviation Ratio (RSR) — RSR","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RSR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Root Mean Standard Deviation Ratio (RSR) — RSR","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RSR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Root Mean Standard Deviation Ratio (RSR) — RSR","text":"RSR normalizes Root Mean Squared Error (RMSE) using standard deviation observed values. goes optimal value 0 infinity. Based RSR, Moriasi et al. (2007) indicates performance ratings : ) -good (0-0.50), ii) good (0.50-0.60), iii) satisfactory (0.60-0.70), iv) unsatisfactory (>0.70). formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RSR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Root Mean Standard Deviation Ratio (RSR) — RSR","text":"Moriasi et al. (2007). Model Evaluation Guidelines Systematic Quantification Accuracy Watershed Simulations. Trans. ASABE 50, 885–900. doi:10.13031/2013.23153","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RSR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Root Mean Standard Deviation Ratio (RSR) — RSR","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- X + rnorm(n=100, mean = 0, sd = 3) RSR(obs = X, pred = Y) #> $RSR #> [1] 0.03582699 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/RSS.html","id":null,"dir":"Reference","previous_headings":"","what":"Residual Sum of Squares (RSS) — RSS","title":"Residual Sum of Squares (RSS) — RSS","text":"estimates RSS continuous predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RSS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Residual Sum of Squares (RSS) — RSS","text":"","code":"RSS(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/RSS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Residual Sum of Squares (RSS) — RSS","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RSS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Residual Sum of Squares (RSS) — RSS","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RSS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Residual Sum of Squares (RSS) — RSS","text":"RSS sum squared differences predictions observations. represents base many error metrics using squared scale Mean Squared Error (MSE). formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/RSS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Residual Sum of Squares (RSS) — RSS","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- X + rnorm(n=100, mean = 0, sd = 3) RSS(obs = X, pred = Y) #> $RSS #> [1] 818.8078 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/SB.html","id":null,"dir":"Reference","previous_headings":"","what":"Squared bias (SB) — SB","title":"Squared bias (SB) — SB","text":"estimates SB component Mean Squared Error (MSE) proposed Kobayashi & Salam (2000).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/SB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Squared bias (SB) — SB","text":"","code":"SB(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/SB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Squared bias (SB) — SB","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/SB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Squared bias (SB) — SB","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/SB.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Squared bias (SB) — SB","text":"SB represents additive bias component prediction error following Kobayashi & Salam (2000). square units variable interest, direct interpretation. lower value less contribution MSE. However, needs compared MSE benchmark. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/SB.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Squared bias (SB) — SB","text":"Kobayashi & Salam (2000). Comparing simulated measured values using mean squared deviation components. Agron. J. 92, 345–352. doi:10.2134/agronj2000.922345x","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/SB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Squared bias (SB) — SB","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- rnorm(n = 100, mean = 0, sd = 9) SB(obs = X, pred = Y) #> $SB #> [1] 2.042459 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/SDSD.html","id":null,"dir":"Reference","previous_headings":"","what":"Squared difference between standard deviations (SDSD) — SDSD","title":"Squared difference between standard deviations (SDSD) — SDSD","text":"estimates SDSD component Mean Squared Error (MSE) proposed Kobayashi & Salam (2000).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/SDSD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Squared difference between standard deviations (SDSD) — SDSD","text":"","code":"SDSD(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/SDSD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Squared difference between standard deviations (SDSD) — SDSD","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/SDSD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Squared difference between standard deviations (SDSD) — SDSD","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/SDSD.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Squared difference between standard deviations (SDSD) — SDSD","text":"SDSD represents proportional bias component prediction error following Kobayashi & Salam (2000). square units variable interest, direct interpretation. lower value less contribution MSE. However, needs compared MSE benchmark. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/SDSD.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Squared difference between standard deviations (SDSD) — SDSD","text":"Kobayashi & Salam (2000). Comparing simulated measured values using mean squared deviation components. Agron. J. 92, 345–352. doi:10.2134/agronj2000.922345x","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/SDSD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Squared difference between standard deviations (SDSD) — SDSD","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- X + rnorm(n=100, mean = 0, sd = 3) SDSD(obs = X, pred = Y) #> $SDSD #> [1] 0.1967212 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/SMAPE.html","id":null,"dir":"Reference","previous_headings":"","what":"Symmetric Mean Absolute Percentage Error (SMAPE). — SMAPE","title":"Symmetric Mean Absolute Percentage Error (SMAPE). — SMAPE","text":"estimates SMAPE continuous predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/SMAPE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Symmetric Mean Absolute Percentage Error (SMAPE). — SMAPE","text":"","code":"SMAPE(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/SMAPE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Symmetric Mean Absolute Percentage Error (SMAPE). — SMAPE","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/SMAPE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Symmetric Mean Absolute Percentage Error (SMAPE). — SMAPE","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/SMAPE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Symmetric Mean Absolute Percentage Error (SMAPE). — SMAPE","text":"SMAPE (%) normalized, dimensionless, bounded (0% 200%). modification MAPE denominator half sum absolute differences observations predictions. modification solves problem MAPE producing negative undefined values. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/SMAPE.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Symmetric Mean Absolute Percentage Error (SMAPE). — SMAPE","text":"Makridakis (1993). Accuracy measures: theoretical practical concerns. Int. J. Forecast. 9, 527-529. doi:10.1016/0169-2070(93)90079-3","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/SMAPE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Symmetric Mean Absolute Percentage Error (SMAPE). — SMAPE","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- X + rnorm(n=100, mean = 0, sd = 3) SMAPE(obs = X, pred = Y) #> $SMAPE #> [1] 55.4614 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/TSS.html","id":null,"dir":"Reference","previous_headings":"","what":"Total Sum of Squares (TSS) — TSS","title":"Total Sum of Squares (TSS) — TSS","text":"estimates TSS observed vector.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/TSS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Total Sum of Squares (TSS) — TSS","text":"","code":"TSS(data = NULL, obs, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/TSS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Total Sum of Squares (TSS) — TSS","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/TSS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Total Sum of Squares (TSS) — TSS","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/TSS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Total Sum of Squares (TSS) — TSS","text":"TSS sum squared differences observations mean. used reference error, example, estimate explained variance. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/TSS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Total Sum of Squares (TSS) — TSS","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- X + rnorm(n=100, mean = 0, sd = 3) TSS(obs = X) #> $TSS #> [1] 7986.945 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/Ub.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean Bias Error Proportion (Ub) — Ub","title":"Mean Bias Error Proportion (Ub) — Ub","text":"estimates Ub component sum squares decomposition described Smith & Rose (1995).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/Ub.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean Bias Error Proportion (Ub) — Ub","text":"","code":"Ub(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/Ub.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean Bias Error Proportion (Ub) — Ub","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/Ub.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean Bias Error Proportion (Ub) — Ub","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/Ub.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mean Bias Error Proportion (Ub) — Ub","text":"Ub estimates proportion total sum squares related mean bias following sum squares decomposition suggested Smith Rose (1995) also known Theil's partial inequalities. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/Ub.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Mean Bias Error Proportion (Ub) — Ub","text":"Smith & Rose (1995). Model goodness--fit analysis using regression related techniques. Ecol. Model. 77, 49–64. doi:10.1016/0304-3800(93)E0074-D","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/Ub.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mean Bias Error Proportion (Ub) — Ub","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- X + rnorm(n=100, mean = 0, sd = 3) Ub(obs = X, pred = Y) #> $Ub #> [1] 0.1571194 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/Uc.html","id":null,"dir":"Reference","previous_headings":"","what":"Lack of Consistency (Uc) — Uc","title":"Lack of Consistency (Uc) — Uc","text":"estimates Uc component sum squares decomposition described Smith & Rose (1995).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/Uc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lack of Consistency (Uc) — Uc","text":"","code":"Uc(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/Uc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lack of Consistency (Uc) — Uc","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/Uc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lack of Consistency (Uc) — Uc","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/Uc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Lack of Consistency (Uc) — Uc","text":"Uc estimates proportion total sum squares related lack consistency (proportional bias) following sum squares decomposition suggested Smith Rose (1995) also known Theil's partial inequalities. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/Uc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Lack of Consistency (Uc) — Uc","text":"Smith & Rose (1995). Model goodness--fit analysis using regression related techniques. Ecol. Model. 77, 49–64. doi:10.1016/0304-3800(93)E0074-D","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/Uc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lack of Consistency (Uc) — Uc","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- X + rnorm(n=100, mean = 0, sd = 3) Uc(obs = X, pred = Y) #> $Uc #> [1] 2.402532 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/Ue.html","id":null,"dir":"Reference","previous_headings":"","what":"Lack of Consistency (Ue) — Ue","title":"Lack of Consistency (Ue) — Ue","text":"estimates Ue component sum squares decomposition described Smith & Rose (1995).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/Ue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lack of Consistency (Ue) — Ue","text":"","code":"Ue(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/Ue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lack of Consistency (Ue) — Ue","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/Ue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lack of Consistency (Ue) — Ue","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE). Ue estimates proportion total sum squares related random error (unsystematic error variance) following sum squares decomposition suggested Smith Rose (1995) also known Theil's partial inequalities. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/Ue.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Lack of Consistency (Ue) — Ue","text":"Smith & Rose (1995). Model goodness--fit analysis using regression related techniques. Ecol. Model. 77, 49–64. doi:10.1016/0304-3800(93)E0074-D","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/Ue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lack of Consistency (Ue) — Ue","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- X + rnorm(n=100, mean = 0, sd = 3) Ue(obs = X, pred = Y) #> $Ue #> [1] 97.44035 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/Xa.html","id":null,"dir":"Reference","previous_headings":"","what":"Accuracy Component (Xa) of CCC — Xa","title":"Accuracy Component (Xa) of CCC — Xa","text":"estimates Xa component calculation Concordance Correlation Coefficient (CCC) following Lin (1989).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/Xa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accuracy Component (Xa) of CCC — Xa","text":"","code":"Xa(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/Xa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accuracy Component (Xa) of CCC — Xa","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/Xa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accuracy Component (Xa) of CCC — Xa","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/Xa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accuracy Component (Xa) of CCC — Xa","text":"Xa measures accuracy prediction. goes 0 (completely inaccurate) 1 (perfectly accurate). used adjust precision measured correlation coefficient (r) order evaluate agreement CCC. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/Xa.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Accuracy Component (Xa) of CCC — Xa","text":"Lin (1989). concordance correlation coefficient evaluate reproducibility. Biometrics 45 (1), 255–268. doi:10.2307/2532051","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/Xa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Accuracy Component (Xa) of CCC — Xa","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- X + rnorm(n=100, mean = 0, sd = 3) Xa(obs = X, pred = Y) #> $Xa #> [1] 0.9987515 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/accuracy.html","id":null,"dir":"Reference","previous_headings":"","what":"Accuracy — accuracy","title":"Accuracy — accuracy","text":"estimates accuracy nominal/categorical predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/accuracy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accuracy — accuracy","text":"","code":"accuracy(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/accuracy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accuracy — accuracy","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (character | factor). pred Vector predicted values (character | factor). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list (default). na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/accuracy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accuracy — accuracy","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/accuracy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accuracy — accuracy","text":"Accuracy simplest popular classification metric literature. refers measure degree predictions model matches reality modeled. classification accuracy calculated ratio number correctly classified objects respect total number cases. bounded 0 1. closer 1 better. Values towards zero indicate low accuracy predictions. can also expressed percentage multiplied 100. estimated global level (class level). Accuracy presents limitations address classification quality unbalanced classes, able distinguish among misclassification distributions. cases, advised apply metrics balanced accuracy (baccu), F-score (fscore), Matthews Correlation Coefficient (mcc), Cohen's Kappa Coefficient (cohen_kappa). Accuracy directly related error_rate, since accuracy = 1 – error_rate. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/accuracy.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Accuracy — accuracy","text":"Sammut & Webb (2017). Accuracy. : Sammut C., Webb G.. (eds) Encyclopedia Machine Learning Data Mining. Springer, Boston, MA. doi:10.1007/978-1-4899-7687-1_3","code":""},{"path":[]},{"path":"https://adriancorrendo.github.io/metrica/reference/accuracy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Accuracy — accuracy","text":"","code":"# \\donttest{ set.seed(123) # Two-class binomial_case <- data.frame(labels = sample(c(\"True\",\"False\"), 100,  replace = TRUE), predictions = sample(c(\"True\",\"False\"), 100, replace = TRUE)) # Multi-class multinomial_case <- data.frame(labels = sample(c(\"Red\",\"Blue\", \"Green\"), 100,  replace = TRUE), predictions = sample(c(\"Red\",\"Blue\", \"Green\"), 100, replace = TRUE) )  # Get accuracy estimate for two-class case accuracy(data = binomial_case, obs = labels, pred = predictions, tidy = TRUE) #>   accuracy #> 1     0.49  # Get accuracy estimate for multi-class case accuracy(data = multinomial_case, obs = labels, pred = predictions, tidy = TRUE) #>   accuracy #> 1     0.29 # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/agf.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjusted F-score — agf","title":"Adjusted F-score — agf","text":"estimates Adjusted F-score nominal/categorical predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/agf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjusted F-score — agf","text":"","code":"agf(   data = NULL,   obs,   pred,   pos_level = 2,   atom = FALSE,   tidy = FALSE,   na.rm = TRUE )"},{"path":"https://adriancorrendo.github.io/metrica/reference/agf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjusted F-score — agf","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (character | factor). pred Vector predicted values (character | factor). pos_level Integer, binary cases, indicating order (1|2) level corresponding positive. Generally, positive level second (2) since following alpha-numeric order, common pairs (Negative | Positive), (0 | 1), (FALSE | TRUE). Default : 2. atom Logical operator (TRUE/FALSE) decide estimate made class (atom = TRUE) global level (atom = FALSE); Default : FALSE. dataset \"binomial\" atom apply. tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/agf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjusted F-score — agf","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/agf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adjusted F-score — agf","text":"Adjusted F-score (Adjusted F-measure) improvement F1-score especially data classes imbalanced. metric properly accounts different misclassification costs across classes. weights sensitivity (recall) metric precision gives strength false negative values. index accounts elements original confusion matrix provides weight patterns correctly classified minority class (positive). bounded 0 1. closer 1 better. Values towards zero indicate low performance. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/agf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Adjusted F-score — agf","text":"Maratea, ., Petrosino, ., Manzo, M. (2014). Adjusted-F measure kernel scaling imbalanced data learning. Inf. Sci. 257: 331-341. doi:10.1016/j.ins.2013.04.016","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/agf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjusted F-score — agf","text":"","code":"# \\donttest{ set.seed(123) # Two-class binomial_case <- data.frame(labels = sample(c(\"True\",\"False\"), 100, replace = TRUE),  predictions = sample(c(\"True\",\"False\"), 100, replace = TRUE)) # Multi-class multinomial_case <- data.frame(labels = sample(c(\"Red\",\"Blue\", \"Green\"), 100, replace = TRUE), predictions = sample(c(\"Red\",\"Blue\", \"Green\"), 100, replace = TRUE)    )  # Get F-score estimate for two-class case agf(data = binomial_case, obs = labels, pred = predictions, tidy = TRUE) #>        agf #> 1 0.505894  # Get F-score estimate for each class for the multi-class case agf(data = multinomial_case, obs = labels, pred = predictions, tidy = TRUE) #> Warning: For multiclass cases, the agf should be estimated at a class level. Please, consider using `atom = TRUE` #>         agf #> 1 0.2787629  # Get F-score estimate for the multi-class case at a global level agf(data = multinomial_case, obs = labels, pred = predictions, tidy = TRUE) #> Warning: For multiclass cases, the agf should be estimated at a class level. Please, consider using `atom = TRUE` #>         agf #> 1 0.2787629 # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/balacc.html","id":null,"dir":"Reference","previous_headings":"","what":"Balanced Accuracy — balacc","title":"Balanced Accuracy — balacc","text":"estimates balanced accuracy nominal/categorical predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/balacc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Balanced Accuracy — balacc","text":"","code":"balacc(data = NULL, obs, pred, pos_level = 2, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/balacc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Balanced Accuracy — balacc","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (character | factor). pred Vector predicted values (character | factor). pos_level Integer, binary cases, indicating order (1|2) level corresponding positive. Generally, positive level second (2) since following alpha-numeric order, common pairs (Negative | Positive), (0 | 1), (FALSE | TRUE). Default : 2. tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/balacc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Balanced Accuracy — balacc","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/balacc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Balanced Accuracy — balacc","text":"balanced accuracy average recall specificity. particularly useful number observation belonging class despair imbalanced, especial attention given negative cases. bounded 0 1. Values towards zero indicate low performance. closer 1 better. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/balacc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Balanced Accuracy — balacc","text":"García, V., Mollineda, R.., Sánchez, J.S. (2009). Index Balanced Accuracy: Performance Measure Skewed Class Distributions. : Araujo, H., Mendonça, .M., Pinho, .J., Torres, M.. (eds) Pattern Recognition Image Analysis. IbPRIA 2009. Lecture Notes Computer Science, vol 5524. Springer-Verlag Berlin Heidelberg. doi:10.1007/978-3-642-02172-5_57","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/balacc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Balanced Accuracy — balacc","text":"","code":"# \\donttest{ set.seed(123) # Two-class binomial_case <- data.frame(labels = sample(c(\"True\",\"False\"), 100, replace = TRUE),  predictions = sample(c(\"True\",\"False\"), 100, replace = TRUE)) # Multi-class multinomial_case <- data.frame(labels = sample(c(\"Red\",\"Blue\", \"Green\"), 100, replace = TRUE), predictions = sample(c(\"Red\",\"Blue\", \"Green\"), 100, replace = TRUE)    )  # Get balanced accuracy estimate for two-class case balacc(data = binomial_case, obs = labels, pred = predictions, tidy = TRUE) #>     balacc #> 1 0.495512  # Get balanced accuracy estimate for the multi-class case balacc(data = multinomial_case, obs = labels, pred = predictions, tidy = TRUE) #>      balacc #> 1 0.4582371 # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/barley.html","id":null,"dir":"Reference","previous_headings":"","what":"Barley grain number — barley","title":"Barley grain number — barley","text":"example dataset set APSIM simulations barley grain number (x1000 grains per squared meter), presents high accuracy medium precision. experimental trials come 11 site-years 2 countries (Australia, New Zealand). data correspond latest, --date, documentation validation version number 2020.03.27.4956. Data available : doi:10.7910/DVN/EJS4M0 . details can found official APSIM Next Generation website: https://APSIMnextgeneration.netlify.app/modeldocumentation/","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/barley.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Barley grain number — barley","text":"","code":"barley"},{"path":"https://adriancorrendo.github.io/metrica/reference/barley.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Barley grain number — barley","text":"data frame 69 rows following 2 columns: pred predicted values obs observed values","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/barley.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Barley grain number — barley","text":"https://github.com/adriancorrendo/metrica","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/bland_altman_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Bland-Altman plot — bland_altman_plot","title":"Bland-Altman plot — bland_altman_plot","text":"creates scatter plot difference observed predicted values (obs-pred) vs. observed values.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/bland_altman_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bland-Altman plot — bland_altman_plot","text":"","code":"bland_altman_plot(   data = NULL,   obs,   pred,   shape_type = NULL,   shape_size = NULL,   shape_color = NULL,   zeroline_type = NULL,   zeroline_size = NULL,   zeroline_color = NULL,   limitsline_type = NULL,   limitsline_size = NULL,   limitsline_color = NULL,   na.rm = TRUE )"},{"path":"https://adriancorrendo.github.io/metrica/reference/bland_altman_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bland-Altman plot — bland_altman_plot","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). shape_type number indicating shape type data points. shape_size number indicating shape size data points. shape_color string indicating shape color data points. zeroline_type string integer indicating zero line-type. zeroline_size number indicating zero line size. zeroline_color string indicating zero line color. limitsline_type string integer indicating limits (+/- 1.96*SD) line-type. limitsline_size number indicating limits (+/- 1.96*SD) line size. limitsline_color string indicating limits (+/- 1.96*SD) line color. na.rm Logic argument remove rows missing values","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/bland_altman_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bland-Altman plot — bland_altman_plot","text":"object class ggplot.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/bland_altman_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bland-Altman plot — bland_altman_plot","text":"details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/bland_altman_plot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bland-Altman plot — bland_altman_plot","text":"Bland & Altman (1986). Statistical methods assessing agreement two methods clinical measurement Lancet 327(8476), 307-310 doi:10.1016/S0140-6736(86)90837-8","code":""},{"path":[]},{"path":"https://adriancorrendo.github.io/metrica/reference/bland_altman_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bland-Altman plot — bland_altman_plot","text":"","code":"# \\donttest{ X <- rnorm(n = 100, mean = 0, sd = 10) Y <- rnorm(n = 100, mean = 0, sd = 10) bland_altman_plot(obs = X, pred = Y)  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/bmi.html","id":null,"dir":"Reference","previous_headings":"","what":"Bookmaker Informedness — bmi","title":"Bookmaker Informedness — bmi","text":"estimates Bookmaker Informedness (.k.. Youden's J-index) nominal/categorical predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/bmi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bookmaker Informedness — bmi","text":"","code":"bmi(   data = NULL,   obs,   pred,   pos_level = 2,   atom = FALSE,   tidy = FALSE,   na.rm = TRUE )"},{"path":"https://adriancorrendo.github.io/metrica/reference/bmi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bookmaker Informedness — bmi","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (character | factor). pred Vector predicted values (character | factor). pos_level Integer, binary cases, indicating order (1|2) level corresponding positive. Generally, positive level second (2) since following alpha-numeric order, common pairs (Negative | Positive), (0 | 1), (FALSE | TRUE). Default : 2. atom Logical operator (TRUE/FALSE) decide estimate made class (atom = TRUE) global level (atom = FALSE); Default : FALSE. dataset \"binomial\" atom apply. tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/bmi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bookmaker Informedness — bmi","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/bmi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bookmaker Informedness — bmi","text":"Bookmaker Informedness (Youden's J index) suitable metric number cases class uneven. general formula applied binary multiclass cases : \\(bmi = recall + specificity - 1 \\) bounded 0 1. closer 1 better. Values towards zero indicate low performance. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/bmi.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bookmaker Informedness — bmi","text":"Youden, W.J. (1950). Index rating diagnostic tests. . Cancer 3: 32-35. doi:10.1002/1097-0142(1950)3:1<32::AID-CNCR2820030106>3.0.CO;2-3","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/bmi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bookmaker Informedness — bmi","text":"","code":"# \\donttest{ set.seed(123) # Two-class binomial_case <- data.frame(labels = sample(c(\"True\",\"False\"), 100, replace = TRUE),  predictions = sample(c(\"True\",\"False\"), 100, replace = TRUE)) # Multi-class multinomial_case <- data.frame(labels = sample(c(\"Red\",\"Blue\", \"Green\"), 100, replace = TRUE), predictions = sample(c(\"Red\",\"Blue\", \"Green\"), 100, replace = TRUE)    )  # Get Informedness estimate for two-class case bmi(data = binomial_case, obs = labels, pred = predictions, tidy = TRUE) #>            bmi #> 1 -0.008975928  # Get Informedness estimate for each class for the multi-class case bmi(data = multinomial_case, obs = labels, pred = predictions, tidy = TRUE) #>           bmi #> 1 -0.08352576  # Get Informedness estimate for the multi-class case at a global level bmi(data = multinomial_case, obs = labels, pred = predictions, tidy = TRUE) #>           bmi #> 1 -0.08352576 # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/chickpea.html","id":null,"dir":"Reference","previous_headings":"","what":"Chickpea dry mass — chickpea","title":"Chickpea dry mass — chickpea","text":"example dataset set APSIM simulations chickpea aboveground dry mass (kg per hectare), exhibits low accuracy medium-low precision represents model still development. experimental trials come 7 site-years 3 countries (Australia, India, New Zealand). data correspond latest, --date, documentation validation version number 2020.03.27.4956. Data available : doi:10.7910/DVN/EJS4M0 . details can found official APSIM Next Generation website: https://APSIMnextgeneration.netlify.app/modeldocumentation/","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/chickpea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chickpea dry mass — chickpea","text":"","code":"chickpea"},{"path":"https://adriancorrendo.github.io/metrica/reference/chickpea.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Chickpea dry mass — chickpea","text":"data frame 39 rows following 2 columns: pred predicted values obs observed values","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/chickpea.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Chickpea dry mass — chickpea","text":"https://github.com/adriancorrendo/metrica","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/confusion_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Confusion Matrix — confusion_matrix","title":"Confusion Matrix — confusion_matrix","text":"creates confusion matrix table plot displaying agreement observed predicted classes model.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/confusion_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confusion Matrix — confusion_matrix","text":"","code":"confusion_matrix(   data = NULL,   obs,   pred,   plot = FALSE,   unit = \"count\",   colors = c(low = NULL, high = NULL),   print_metrics = FALSE,   metrics_list = c(\"accuracy\", \"precision\", \"recall\"),   position_metrics = \"top\",   na.rm = TRUE )"},{"path":"https://adriancorrendo.github.io/metrica/reference/confusion_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confusion Matrix — confusion_matrix","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (character factor). pred Vector predicted values (character factor). plot Logical operator (TRUE/FALSE) controls output data.frame (plot = FALSE) plot type ggplot (plot = TRUE), Default: FALSE unit String (text) indicating type unit (\"count\" \"proportion\") show confusion matrix, Default: 'count' colors Vector list two colors indicating paint gradient \"low\" \"high\", Default: c(low = NULL, high = NULL) uses standard blue gradient ggplot2. print_metrics boolean TRUE/FALSE embed metrics plot. Default FALSE. metrics_list vector list selected metrics print plot. Default: c(\"accuracy\", \"precision\", \"recall\"). position_metrics string specifying position print performance metrics_list. Options \"top\" (subtitle) \"bottom\" (caption). Default: \"bottom\". na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/confusion_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confusion Matrix — confusion_matrix","text":"object class data.frame plot = FALSE, type ggplot plot = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/confusion_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confusion Matrix — confusion_matrix","text":"confusion matrix method summarizing predictive performance classification algorithm. particularly useful unbalanced number observations belonging class multinomial dataset (two classes dataset. confusion matrix can give good hint types errors model making. See online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/confusion_matrix.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Confusion Matrix — confusion_matrix","text":"Ting K.M. (2017). Confusion Matrix. : Sammut C., Webb G.. (eds) Encyclopedia Machine Learning Data Mining. Springer, Boston, MA. doi:10.1007/978-1-4899-7687-1_50","code":""},{"path":[]},{"path":"https://adriancorrendo.github.io/metrica/reference/confusion_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confusion Matrix — confusion_matrix","text":"","code":"# \\donttest{ set.seed(183) # Two-class binomial_case <- data.frame(labels = sample(c(\"True\",\"False\"), 100, replace = TRUE), predictions = sample(c(\"True\",\"False\"), 100, replace = TRUE)) # Multi-class multinomial_case <- data.frame(labels = sample(c(\"Red\",\"Blue\", \"Green\"), 100, replace = TRUE), predictions = sample(c(\"Red\",\"Blue\", \"Green\"), 100, replace = TRUE))  # Plot two-class confusion matrix confusion_matrix(data = binomial_case, obs = labels, pred = predictions,  plot = TRUE, colors = c(low=\"pink\" , high=\"steelblue\"), unit = \"count\")   # Plot multi-class confusion matrix confusion_matrix(data = multinomial_case, obs = labels, pred = predictions,  plot = TRUE, colors = c(low=\"#f9dbbd\" , high=\"#735d78\"), unit = \"count\")  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/csi.html","id":null,"dir":"Reference","previous_headings":"","what":"Critical Success Index — csi","title":"Critical Success Index — csi","text":"estimates Critical Success Index (.k.. threat score, Jaccard Index) nominal/categorical predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/csi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Critical Success Index — csi","text":"","code":"csi(   data = NULL,   obs,   pred,   pos_level = 2,   atom = FALSE,   tidy = FALSE,   na.rm = TRUE )"},{"path":"https://adriancorrendo.github.io/metrica/reference/csi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Critical Success Index — csi","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (character | factor). pred Vector predicted values (character | factor). pos_level Integer, binary cases, indicating order (1|2) level corresponding positive. Generally, positive level second (2) since following alpha-numeric order, common pairs (Negative | Positive), (0 | 1), (FALSE | TRUE). Default : 2. atom Logical operator (TRUE/FALSE) decide estimate made class (atom = TRUE) global level (atom = FALSE); Default : FALSE. dataset \"binomial\" atom apply. tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/csi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Critical Success Index — csi","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/csi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Critical Success Index — csi","text":"csi also known threat score Jaccard Index. metric especially useful binary classification tasks, representing proportion true positive (TP) cases respect sum predicted positive (PP = TP + FP) true negative (TN) cases. \\(csi = \\frac{TP}{TP + TN + FP} \\) bounded 0 1. closer 1 better classification performance, zero represents worst result. extensively used meteorology (NOOA) verification measure categorical forecast performance equal total number correct event forecast (hits = TP) divided total number event forecasts plus number misses (hits + false alarms + misses = TP + FP + TN). However, csi criticized representing unbiased measure forecast skill (Schaefer, 1990). formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/csi.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Critical Success Index — csi","text":"NOOA. Forecast Verification Glossary. Space Weather Prediction Center, NOOA. https://www.swpc.noaa.gov/sites/default/files/images/u30/Forecast%20Verification%20Glossary.pdf Schaefer, J.T. (1990). critical success index indicator warning skill. Weather Forecasting 5(4): 570-575. doi:10.1175/1520-0434(1990)005<0570:TCSIAA>2.0.CO;2","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/csi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Critical Success Index — csi","text":"","code":"# \\donttest{ set.seed(123) # Two-class binomial_case <- data.frame(labels = sample(c(\"True\",\"False\"), 100, replace = TRUE),  predictions = sample(c(\"True\",\"False\"), 100, replace = TRUE)) # Get csi estimate for two-class case csi(data = binomial_case, obs = labels, pred = predictions) #> $csi #> [1] 0.3768116 #>   # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/d.html","id":null,"dir":"Reference","previous_headings":"","what":"Willmott's Index of Agreement (d) — d","title":"Willmott's Index of Agreement (d) — d","text":"estimates Willmott's index agreement (d) continuous predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Willmott's Index of Agreement (d) — d","text":"","code":"d(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Willmott's Index of Agreement (d) — d","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Willmott's Index of Agreement (d) — d","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/d.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Willmott's Index of Agreement (d) — d","text":"d index normalized, dimensionless metric tests general agreement. measures accuracy precision using squared residuals. bounded 0 1. disadvantage d asymmetric index, , dependent orientation predicted observed values. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/d.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Willmott's Index of Agreement (d) — d","text":"Willmott (1981). validation models. Phys. Geogr. 2, 184–194. doi:10.1080/02723646.1981.10642213","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Willmott's Index of Agreement (d) — d","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- rnorm(n = 100, mean = 0, sd = 9) d(obs = X, pred = Y) #> $d #> [1] 0.3811637 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/d1.html","id":null,"dir":"Reference","previous_headings":"","what":"Modified Index of Agreement (d1). — d1","title":"Modified Index of Agreement (d1). — d1","text":"estimates modified index agreement (d1) using absolute differences following Willmott et al. (1985).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/d1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modified Index of Agreement (d1). — d1","text":"","code":"d1(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/d1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modified Index of Agreement (d1). — d1","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/d1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modified Index of Agreement (d1). — d1","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/d1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Modified Index of Agreement (d1). — d1","text":"Similar d, d1 index normalized, dimensionless metric tests general agreement. difference d, d1 uses absolute residuals instead squared residuals. bounded 0 1. disadvantage d asymmetric index, , dependent orientation predicted observed values. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/d1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Modified Index of Agreement (d1). — d1","text":"Willmott et al. (1985). Statistics evaluation comparison models. J. Geophys. Res. 90, 8995. doi:10.1029/jc090ic05p08995","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/d1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modified Index of Agreement (d1). — d1","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- rnorm(n = 100, mean = 0, sd = 9) d1(obs = X, pred = Y) #> $d1 #> [1] 0.305442 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/d1r.html","id":null,"dir":"Reference","previous_headings":"","what":"Refined Index of Agreement (d1). — d1r","title":"Refined Index of Agreement (d1). — d1r","text":"estimates refined index agreement (d1r) following Willmott et al. (2012).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/d1r.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Refined Index of Agreement (d1). — d1r","text":"","code":"d1r(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/d1r.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Refined Index of Agreement (d1). — d1r","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/d1r.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Refined Index of Agreement (d1). — d1r","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/d1r.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Refined Index of Agreement (d1). — d1r","text":"Similar d, d1, d1r index normalized, dimensionless metric tests general agreement. difference d1r modifies denominator formula (potential error), normalizing mean absolute error (numerator) two-times mean absolute deviation observed values. bounded 0 1. disadvantage d1r asymmetric index, , dependent orientation predicted observed values. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/d1r.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Refined Index of Agreement (d1). — d1r","text":"Willmott et al. (2012). refined index model performance. Int. J. Climatol. 32, 2088–2094. doi:10.1002/joc.2419","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/d1r.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Refined Index of Agreement (d1). — d1r","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- rnorm(n = 100, mean = 0, sd = 9) d1r(obs = X, pred = Y) #> $d1r #> [1] 0.3062485 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/dcorr.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance Correlation — dcorr","title":"Distance Correlation — dcorr","text":"estimates Distance Correlation coefficient (dcorr) continuous predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/dcorr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance Correlation — dcorr","text":"","code":"dcorr(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/dcorr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance Correlation — dcorr","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list (default). na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/dcorr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distance Correlation — dcorr","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/dcorr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Distance Correlation — dcorr","text":"dcorr function wrapper dcor function energy-package. See Rizzo & Szekely (2022). distance correlation (dcorr) coefficient novel measure dependence random vectors introduced Szekely et al. (2007). dcorr characterized symmetric, relevant predicted-observed case (PO). distributions finite first moments, distance correlation \\(\\mathcal R\\) generalizes idea correlation two fundamental ways: (1) \\(\\mathcal R(P,O)\\) defined \\(P\\) \\(O\\) arbitrary dimension. (2) \\(\\mathcal R(P,O)=0\\) characterizes independence \\(P\\) \\(O\\). Distance correlation satisfies \\(0 \\le \\mathcal R \\le 1\\), \\(\\mathcal R = 0\\) \\(P\\) \\(O\\) independent. Distance covariance \\(\\mathcal V\\) provides new approach problem testing joint independence random vectors. formal definitions population coefficients \\(\\mathcal V\\) \\(\\mathcal R\\) given Szekely et al. (2007). empirical distance correlation \\(\\mathcal{R}_n(\\mathbf{P,O})\\) square root $$ \\mathcal{R}^2_n(\\mathbf{P,O})= \\frac {\\mathcal{V}^2_n(\\mathbf{P,O})}  {\\sqrt{ \\mathcal{V}^2_n (\\mathbf{P}) \\mathcal{V}^2_n(\\mathbf{O})}}. $$ formula details, see online-documentation energy-package","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/dcorr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Distance Correlation — dcorr","text":"Szekely, G.J., Rizzo, M.L., Bakirov, N.K. (2007). Measuring testing dependence correaltion distances. Annals Statistics, Vol. 35(6): 2769-2794. doi:10.1214/009053607000000505 . Rizzo, M., Szekely, G. (2022). energy: E-Statistics: Multivariate Inference via Energy Data. R package version 1.7-10. https://CRAN.R-project.org/package=energy.","code":""},{"path":[]},{"path":"https://adriancorrendo.github.io/metrica/reference/dcorr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distance Correlation — dcorr","text":"","code":"# \\donttest{ set.seed(1) P <- rnorm(n = 100, mean = 0, sd = 10) O <- P + rnorm(n=100, mean = 0, sd = 3) dcorr(obs = P, pred = O) #> [1] 0.9290235 # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/deltap.html","id":null,"dir":"Reference","previous_headings":"","what":"deltaP or Markedness — deltap","title":"deltaP or Markedness — deltap","text":"deltap estimates Markedness deltaP nominal/categorical predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/deltap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"deltaP or Markedness — deltap","text":"","code":"deltap(   data = NULL,   obs,   pred,   pos_level = 2,   atom = FALSE,   tidy = FALSE,   na.rm = TRUE )"},{"path":"https://adriancorrendo.github.io/metrica/reference/deltap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"deltaP or Markedness — deltap","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (character | factor). pred Vector predicted values (character | factor). pos_level Integer, binary cases, indicating order (1|2) level corresponding positive. Generally, positive level second (2) since following alpha-numeric order, common pairs (Negative | Positive), (0 | 1), (FALSE | TRUE). Default : 2. atom Logical operator (TRUE/FALSE) decide estimate made class (atom = TRUE) global level (atom = FALSE); Default : FALSE. dataset \"binomial\" atom apply. tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/deltap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"deltaP or Markedness — deltap","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/deltap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"deltaP or Markedness — deltap","text":"deltap also known markedness. metric quantifies probability condition marked predictor respect random chance (Powers, 2011). deltap related precision (positive predictive values -ppv-) inverse (negative predictive value -npv-) follows: \\(deltap = PPV + NPV - 1  = precision + npv - 1\\) higher deltap better classification performance. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/deltap.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"deltaP or Markedness — deltap","text":"Powers, D.M.W. (2011). Evaluation: Precision, Recall F-Measure ROC, Informedness, Markedness & Correlation. Journal Machine Learning Technologies 2(1): 37–63. doi:10.48550/arXiv.2010.16061","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/deltap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"deltaP or Markedness — deltap","text":"","code":"# \\donttest{ set.seed(123) # Two-class binomial_case <- data.frame(labels = sample(c(\"True\",\"False\"), 100, replace = TRUE),  predictions = sample(c(\"True\",\"False\"), 100, replace = TRUE)) # Get deltap estimate for two-class case deltap(data = binomial_case, obs = labels, pred = predictions) #> $deltap #> [1] -0.008856683 #>   # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/density_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Density plot of predicted and observed values — density_plot","title":"Density plot of predicted and observed values — density_plot","text":"draws density area plot predictions observations alternative axis orientation (P vs. O; O vs. P).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/density_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density plot of predicted and observed values — density_plot","text":"","code":"density_plot(   data = NULL,   obs,   pred,   n = 10,   colors = c(low = NULL, high = NULL),   orientation = \"PO\",   print_metrics = FALSE,   metrics_list = NULL,   position_metrics = c(x = NULL, y = NULL),   print_eq = TRUE,   position_eq = c(x = NULL, y = NULL),   eq_color = NULL,   regline_type = NULL,   regline_size = NULL,   regline_color = NULL,   na.rm = TRUE )"},{"path":"https://adriancorrendo.github.io/metrica/reference/density_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density plot of predicted and observed values — density_plot","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). n Argument class numeric specifying number data points group. colors Vector list two colors '(low, high)' paint density gradient. orientation Argument class string specifying axis orientation, PO predicted vs observed, OP observed vs predicted. Default orientation = \"PO\". print_metrics boolean TRUE/FALSE embed metrics plot. Default FALSE. metrics_list vector list selected metrics print plot. position_metrics vector list '(x,y)' coordinates locate metrics_table plot. Default : c(x = min(obs), y = 1.05*max(pred)). print_eq boolean TRUE/FALSE embed metrics plot. Default FALSE. position_eq vector list '(x,y)' coordinates locate SMA equation plot. Default : c(x = 0.70 max(x), y = 1.25*min(y)). eq_color string indicating color SMA-regression text. regline_type string integer indicating SMA-regression line-type. regline_size number indicating SMA-regression line size. regline_color string indicating SMA-regression line color. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/density_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Density plot of predicted and observed values — density_plot","text":"Object class ggplot.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/density_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Density plot of predicted and observed values — density_plot","text":"creates density plot predicted vs. observed values. plot also includes 1:1 line (solid line) linear regression line (dashed line). default, places observed x-axis predicted y-axis (orientation = \"PO\"). can inverted changing argument orientation = “OP\". details, see online-documentation","code":""},{"path":[]},{"path":"https://adriancorrendo.github.io/metrica/reference/density_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Density plot of predicted and observed values — density_plot","text":"","code":"# \\donttest{ X <- rnorm(n = 100, mean = 0, sd = 10) Y <- rnorm(n = 100, mean = 0, sd = 10) density_plot(obs = X, pred = Y) #> Warning: The dot-dot notation (`..level..`) was deprecated in ggplot2 3.4.0. #> ℹ Please use `after_stat(level)` instead. #> ℹ The deprecated feature was likely used in the metrica package. #>   Please report the issue at #>   <https://github.com/adriancorrendo/metrica/issues>.  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/error_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Error rate — error_rate","title":"Error rate — error_rate","text":"estimates error rate nominal/categorical predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/error_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Error rate — error_rate","text":"","code":"error_rate(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/error_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Error rate — error_rate","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (character | factor). pred Vector predicted values (character | factor). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list (default). na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/error_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Error rate — error_rate","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/error_rate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Error rate — error_rate","text":"error rate represents opposite accuracy, referring measure degree predictions miss-classify reality. classification error_rate calculated ratio number incorrectly classified objects respect total number objects. bounded 0 1. closer 1 worse. Values towards zero indicate low error_rate predictions. can also expressed percentage multiplied 100. estimated global level (class level). error rate directly related accuracy, since error_rate = 1 – accuracy' . formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/error_rate.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Error rate — error_rate","text":"(2017) Accuracy. : Sammut C., Webb G.. (eds) Encyclopedia Machine Learning Data Mining Springer, Boston, MA. doi:10.1007/978-1-4899-7687-1_3","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/error_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Error rate — error_rate","text":"","code":"# \\donttest{ set.seed(123) # Two-class binomial_case <- data.frame(labels = sample(c(\"True\",\"False\"), 100,  replace = TRUE), predictions = sample(c(\"True\",\"False\"), 100, replace = TRUE)) # Multi-class multinomial_case <- data.frame(labels = sample(c(\"Red\",\"Blue\", \"Green\"), 100,  replace = TRUE), predictions = sample(c(\"Red\",\"Blue\", \"Green\"), 100, replace = TRUE)    )  # Get error_rate estimate for two-class case error_rate(data = binomial_case, obs = labels, pred = predictions, tidy = TRUE) #>   error_rate #> 1       0.51  # Get error_rate estimate for multi-class case error_rate(data = multinomial_case, obs = labels, pred = predictions, tidy = TRUE) #>   error_rate #> 1       0.71 # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/fmi.html","id":null,"dir":"Reference","previous_headings":"","what":"Fowlkes-Mallows Index — fmi","title":"Fowlkes-Mallows Index — fmi","text":"estimates Fowlkes-Mallows Index nominal/categorical predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/fmi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fowlkes-Mallows Index — fmi","text":"","code":"fmi(data = NULL, obs, pred, pos_level = 2, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/fmi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fowlkes-Mallows Index — fmi","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (character | factor). pred Vector predicted values (character | factor). pos_level Integer, binary cases, indicating order (1|2) level corresponding positive. Generally, positive level second (2) since following alpha-numeric order, common pairs (Negative | Positive), (0 | 1), (FALSE | TRUE). Default : 2. tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/fmi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fowlkes-Mallows Index — fmi","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/fmi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fowlkes-Mallows Index — fmi","text":"fmi gained popularity within machine learning community summarize single value confusion matrix binary classification. particularly useful number observations belonging class uneven imbalanced. characterized symmetric (.e. class relevance ). bounded -1 1. closer 1 better classification performance. fmi available evaluation binary cases (two classes). multiclass cases, fmi produce NA display warning. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/fmi.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fowlkes-Mallows Index — fmi","text":"Fowlkes, Edward B; Mallows, Colin L (1983). method comparing two hierarchical clusterings. Journal American Statistical Association. 78 (383): 553–569. doi:10.1080/01621459.1983.10478008","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/fmi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fowlkes-Mallows Index — fmi","text":"","code":"# \\donttest{ set.seed(123) # Two-class binomial_case <- data.frame(labels = sample(c(\"True\",\"False\"), 100, replace = TRUE),  predictions = sample(c(\"True\",\"False\"), 100, replace = TRUE)) # Get fmi estimate for two-class case fmi(data = binomial_case, obs = labels, pred = predictions) #> $fmi #> [1] 0.5077583 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/fscore.html","id":null,"dir":"Reference","previous_headings":"","what":"F-score — fscore","title":"F-score — fscore","text":"estimates F-score nominal/categorical predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/fscore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"F-score — fscore","text":"","code":"fscore(   data = NULL,   obs,   pred,   B = 1,   pos_level = 2,   atom = FALSE,   tidy = FALSE,   na.rm = TRUE )"},{"path":"https://adriancorrendo.github.io/metrica/reference/fscore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"F-score — fscore","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (character | factor). pred Vector predicted values (character | factor). B Numeric value indicating weight (.k.. B beta) applied relationship recall precision. B < 1 weights precision recall. B > 1 gives B times importance recall precision. Default: 1. pos_level Integer, binary cases, indicating order (1|2) level corresponding positive. Generally, positive level second (2) since following alpha-numeric order, common pairs (Negative | Positive), (0 | 1), (FALSE | TRUE). Default : 2. atom Logical operator (TRUE/FALSE) decide estimate made class (atom = TRUE) global level (atom = FALSE); Default : FALSE. dataset \"binomial\" atom apply. tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/fscore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"F-score — fscore","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/fscore.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"F-score — fscore","text":"F-score (F-measure) robust metric classic accuracy, especially number cases class uneven. represents harmonic mean precision recall. Thus, achieve high values F-score necessary high precision high recall. universal version F-score employs coefficient B, can tune precision-recall ratio. Values B > 1 give weight recall, B < 1 give weight precision. binomial/binary cases, fscore  =  TP / (TP + 0.5*(FP + FN)) generalized formula applied multiclass cases : \\(fscore = \\frac{(1 + B ^ 2) * (precision * recall)} {((B ^ 2 * precision) + recall)} \\) bounded 0 1. closer 1 better. Values towards zero indicate low performance. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/fscore.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"F-score — fscore","text":"Goutte, C., Gaussier, E. (2005). Probabilistic Interpretation Precision, Recall F-Score, Implication Evaluation. : D.E. Losada J.M. Fernandez-Luna (Eds.): ECIR 2005 . Advances Information Retrieval LNCS 3408, pp. 345–359, 2. Springer-Verlag Berlin Heidelberg. doi:10.1007/978-3-540-31865-1_25","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/fscore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"F-score — fscore","text":"","code":"# \\donttest{ set.seed(123) # Two-class binomial_case <- data.frame(labels = sample(c(\"True\",\"False\"), 100, replace = TRUE),  predictions = sample(c(\"True\",\"False\"), 100, replace = TRUE)) # Multi-class multinomial_case <- data.frame(labels = sample(c(\"Red\",\"Blue\", \"Green\"), 100, replace = TRUE), predictions = sample(c(\"Red\",\"Blue\", \"Green\"), 100, replace = TRUE)    )  # Get F-score estimate for two-class case fscore(data = binomial_case, obs = labels, pred = predictions, tidy = TRUE) #>      fscore #> 1 0.5048544  # Get F-score estimate for each class for the multi-class case fscore(data = multinomial_case, obs = labels, pred = predictions, tidy = TRUE) #> Warning: For multiclass cases, the fscore should be estimated at a class level. Please, consider using `atom = TRUE` #>      fscore #> 1 0.2787609  # Get F-score estimate for the multi-class case at a global level fscore(data = multinomial_case, obs = labels, pred = predictions, tidy = TRUE) #> Warning: For multiclass cases, the fscore should be estimated at a class level. Please, consider using `atom = TRUE` #>      fscore #> 1 0.2787609 # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/gmean.html","id":null,"dir":"Reference","previous_headings":"","what":"Geometric Mean — gmean","title":"Geometric Mean — gmean","text":"estimates Geometric Mean score nominal/categorical predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/gmean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geometric Mean — gmean","text":"","code":"gmean(   data = NULL,   obs,   pred,   pos_level = 2,   atom = FALSE,   tidy = FALSE,   na.rm = TRUE )"},{"path":"https://adriancorrendo.github.io/metrica/reference/gmean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geometric Mean — gmean","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (character | factor). pred Vector predicted values (character | factor). pos_level Integer, binary cases, indicating order (1|2) level corresponding positive. Generally, positive level second (2) since following alpha-numeric order, common pairs (Negative | Positive), (0 | 1), (FALSE | TRUE). Default : 2. atom Logical operator (TRUE/FALSE) decide estimate made class (atom = TRUE) global level (atom = FALSE); Default : FALSE. dataset \"binomial\" atom apply. tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/gmean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geometric Mean — gmean","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/gmean.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Geometric Mean — gmean","text":"gmean metric especially useful imbalanced classes measures balance classification performance major (-represented) well minor (-represented) classes. stated , particularly useful number observations belonging class uneven. gmean score equivalent square-root product specificity recall (.k.. sensitivity). \\(gmean = \\sqrt{recall * specificity} \\) bounded 0 1. closer 1 better classification performance, zero represents worst. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/gmean.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Geometric Mean — gmean","text":"De Diego, .M., Redondo, .R., Fernández, R.R., Navarro, J., Moguerza, J.M. (2022). General Performance Score classification problems. _ Appl. Intell. (2022)._ doi:10.1007/s10489-021-03041-7","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/gmean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geometric Mean — gmean","text":"","code":"# \\donttest{ set.seed(123) # Two-class binomial_case <- data.frame(labels = sample(c(\"True\",\"False\"), 100, replace = TRUE),  predictions = sample(c(\"True\",\"False\"), 100, replace = TRUE)) # Get gmean estimate for two-class case gmean(data = binomial_case, obs = labels, pred = predictions) #> $gmean #> [1] 0.4939454 #>   # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/import_apsim_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Import SQLite databases generated by APSIM NextGen — import_apsim_db","title":"Import SQLite databases generated by APSIM NextGen — import_apsim_db","text":"Imports data SQLite databases (*.db) applied APSIM Next Generation. reads one file time.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/import_apsim_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import SQLite databases generated by APSIM NextGen — import_apsim_db","text":"","code":"import_apsim_db(filename = \"\", folder = \".\", value = \"report\", simplify = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/import_apsim_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import SQLite databases generated by APSIM NextGen — import_apsim_db","text":"filename file name including file extension (\"*.db\"), string (\"\"). folder source folder/directory containing file, string (\"\"). value either ‘report’, ‘’ (list) user-defined specific report. simplify TRUE attempt simplify multiple reports single data.frame. FALSE return list. Default: TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/import_apsim_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import SQLite databases generated by APSIM NextGen — import_apsim_db","text":"object class data.frame, depends argument ‘value’ ","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/import_apsim_db.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Import SQLite databases generated by APSIM NextGen — import_apsim_db","text":"function adapted apsimx package (Miguez, 2022). reference, recommend check use function apsimx::read_apsimx() alternative. Source: https://github.com/femiguez/apsimx F. Miguez.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/import_apsim_db.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Import SQLite databases generated by APSIM NextGen — import_apsim_db","text":"Miguez, F. (2022) apsimx: Inspect, Read, Edit Run 'APSIM' \"Next Generation\" 'APSIM' Classic. R package version 2.3.1, https://CRAN.R-project.org/package=apsimx","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/import_apsim_db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import SQLite databases generated by APSIM NextGen — import_apsim_db","text":"","code":"# \\donttest{ ## See [documentation](https://adriancorrendo.github.io/metrica/index.html) # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/import_apsim_out.html","id":null,"dir":"Reference","previous_headings":"","what":"import_apsim_out — import_apsim_out","title":"import_apsim_out — import_apsim_out","text":"Function import *.files generated APSIM Classic.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/import_apsim_out.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"import_apsim_out — import_apsim_out","text":"","code":"import_apsim_out(filepath)"},{"path":"https://adriancorrendo.github.io/metrica/reference/import_apsim_out.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"import_apsim_out — import_apsim_out","text":"filepath Argument specify location path *.file.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/import_apsim_out.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"import_apsim_out — import_apsim_out","text":"Element class data.frame.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/import_apsim_out.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"import_apsim_out — import_apsim_out","text":"function generate data frame object APSIM Classic *.file.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/import_apsim_out.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"import_apsim_out — import_apsim_out","text":"Note: imports one file time.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/import_apsim_out.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"import_apsim_out — import_apsim_out","text":"","code":"# \\donttest{ ## See [documentation](https://adriancorrendo.github.io/metrica/index.html) # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/iqRMSE.html","id":null,"dir":"Reference","previous_headings":"","what":"Inter-Quartile Root Mean Squared Error — iqRMSE","title":"Inter-Quartile Root Mean Squared Error — iqRMSE","text":"estimates IqRMSE continuous predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/iqRMSE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inter-Quartile Root Mean Squared Error — iqRMSE","text":"","code":"iqRMSE(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/iqRMSE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inter-Quartile Root Mean Squared Error — iqRMSE","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/iqRMSE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inter-Quartile Root Mean Squared Error — iqRMSE","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/iqRMSE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Inter-Quartile Root Mean Squared Error — iqRMSE","text":"iqRMSE normalizes RMSE length inter-quartile range observations (percentiles 25th 75th). error metric, lower values better. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/iqRMSE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inter-Quartile Root Mean Squared Error — iqRMSE","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- X + rnorm(n=100, mean = 0, sd = 3) iqRMSE(obs = X, pred = Y) #> $iqRMSE #> [1] 0.2413148 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/khat.html","id":null,"dir":"Reference","previous_headings":"","what":"K-hat (Cohen's Kappa Coefficient) — khat","title":"K-hat (Cohen's Kappa Coefficient) — khat","text":"estimates Cohen's Kappa Coefficient nominal/categorical predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/khat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"K-hat (Cohen's Kappa Coefficient) — khat","text":"","code":"khat(data = NULL, obs, pred, pos_level = 2, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/khat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"K-hat (Cohen's Kappa Coefficient) — khat","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (character | factor). pred Vector predicted values (character | factor). pos_level Integer, binary cases, indicating order (1|2) level corresponding positive. Generally, positive level second (2) since following alpha-numeric order, common pairs (Negative | Positive), (0 | 1), (FALSE | TRUE). Default : 2. tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/khat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"K-hat (Cohen's Kappa Coefficient) — khat","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/khat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"K-hat (Cohen's Kappa Coefficient) — khat","text":"Cohen's Kappa Coefficient accuracy normalized possibility agreement chance. Thus, considered robust agreement measure simply accuracy. kappa coefficient originally described evaluating agreement classification different \"raters\" (inter-rater reliability). positively bounded 1, negatively bounded. closer 1 better Kappa assumes theoretical maximum value 1 (perfect agreement) observed predicted values equally distributed across classes (.e. identical row column sums). Thus, lower kappa lower prediction quality. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/khat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"K-hat (Cohen's Kappa Coefficient) — khat","text":"Cohen, J. (1960). coefficient agreement nominal scales. _ Educational Psychological Measurement 20 (1): 37–46._ doi:10.1177/001316446002000104","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/khat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"K-hat (Cohen's Kappa Coefficient) — khat","text":"","code":"# \\donttest{ set.seed(123) # Two-class binomial_case <- data.frame(labels = sample(c(\"True\",\"False\"), 100, replace = TRUE),  predictions = sample(c(\"True\",\"False\"), 100, replace = TRUE)) # Multi-class multinomial_case <- data.frame(labels = sample(c(\"Red\",\"Blue\", \"Green\"), 100,  replace = TRUE), predictions = sample(c(\"Red\",\"Blue\", \"Green\"), 100, replace = TRUE))  # Get Cohen's Kappa Coefficient estimate for two-class case khat(data = binomial_case, obs = labels, pred = predictions, tidy = TRUE) #>           khat #> 1 -0.008702532  # Get Cohen's Kappa Coefficient estimate for each class for the multi-class case khat(data = multinomial_case, obs = labels, pred = predictions, tidy = TRUE) #>          khat #> 1 -0.08050525  # Get Cohen's Kappa Coefficient estimate for the multi-class case at a global level khat(data = multinomial_case, obs = labels, pred = predictions, tidy = TRUE) #>          khat #> 1 -0.08050525 # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/lambda.html","id":null,"dir":"Reference","previous_headings":"","what":"Duveiller's Agreement Coefficient — lambda","title":"Duveiller's Agreement Coefficient — lambda","text":"estimates agreement coefficient (lambda) suggested Duveiller et al. (2016) continuous predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/lambda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Duveiller's Agreement Coefficient — lambda","text":"","code":"lambda(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/lambda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Duveiller's Agreement Coefficient — lambda","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/lambda.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Duveiller's Agreement Coefficient — lambda","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/lambda.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Duveiller's Agreement Coefficient — lambda","text":"lambda measures accuracy precision. normalized, dimensionless, bounded (-1;1), symmetric (invariant predicted-observed orientation). lambda equivalent CCC r greater equal 0. closer 1 better. Values towards zero indicate low correlation observations predictions. Negative values indicate negative relationship predicted observed. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/lambda.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Duveiller's Agreement Coefficient — lambda","text":"Duveiller et al. (2016). Revisiting concept symmetric index agreement continuous datasets. Sci. Rep. 6, 1-14. doi:10.1038/srep19401","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/lambda.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Duveiller's Agreement Coefficient — lambda","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- rnorm(n = 100, mean = 0, sd = 9) lambda(obs = X, pred = Y) #> $lambda #> [1] -0.0009804333 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/land_cover.html","id":null,"dir":"Reference","previous_headings":"","what":"Binary Land Cover Data — land_cover","title":"Binary Land Cover Data — land_cover","text":"example dataset obtained 2022 small region Kansas, using visual interpretation. predicted values result Random Forest classification, 70/30 % split. Values equal 1 associated vegetation, values equal 0 type land cover.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/land_cover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binary Land Cover Data — land_cover","text":"","code":"land_cover"},{"path":"https://adriancorrendo.github.io/metrica/reference/land_cover.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Binary Land Cover Data — land_cover","text":"data frame 284 rows following 2 columns: predicted predicted values actual observed values","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/land_cover.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Binary Land Cover Data — land_cover","text":"https://github.com/adriancorrendo/metrica","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/likelihood_ratios.html","id":null,"dir":"Reference","previous_headings":"","what":"Likelihood Ratios (Classification) — likelihood_ratios","title":"Likelihood Ratios (Classification) — likelihood_ratios","text":"estimates positive likelihood ratio posLr, negative likelihood ratio negLr, diagnostic odds ratio dor nominal/categorical predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/likelihood_ratios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Likelihood Ratios (Classification) — likelihood_ratios","text":"","code":"posLr(   data = NULL,   obs,   pred,   pos_level = 2,   atom = FALSE,   tidy = FALSE,   na.rm = TRUE )  negLr(   data = NULL,   obs,   pred,   pos_level = 2,   atom = FALSE,   tidy = FALSE,   na.rm = TRUE )  dor(   data = NULL,   obs,   pred,   pos_level = 2,   atom = FALSE,   tidy = FALSE,   na.rm = TRUE )"},{"path":"https://adriancorrendo.github.io/metrica/reference/likelihood_ratios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Likelihood Ratios (Classification) — likelihood_ratios","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (character | factor). pred Vector predicted values (character | factor). pos_level Integer, binary cases, indicating order (1|2) level corresponding positive. Generally, positive level second (2) since following alpha-numeric order, common pairs (Negative | Positive), (0 | 1), (FALSE | TRUE). Default : 2. atom Logical operator (TRUE/FALSE) decide estimate made class (atom = TRUE) global level (atom = FALSE); Default : FALSE. dataset \"binomial\" atom apply. tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/likelihood_ratios.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Likelihood Ratios (Classification) — likelihood_ratios","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/likelihood_ratios.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Likelihood Ratios (Classification) — likelihood_ratios","text":"likelihood ratios metrics designed assess expectations classification tasks. highly related recall (sensitivity true positive rate) specificity (selectivity true negative rate). multiclass case, positive negative results class-wise. can either hit actual class, actual non-class. example, classification may 3 potential results: cat, dog, fish. Thus, actual value dog, true positive dog, can obtain true negative either classifying cat fish. posLr, negLr, dor estimates mean across classes. positive likelihood ratio (posLr) measures odds obtaining positive prediction cases actual positives. negative likelihood ratio (negLr) relates odds obtaining negative prediction actual non-negatives relative probability actual negative cases obtaining negative prediction result. Finally, diagnostic odds ratio (dor) measures effectiveness classification. represents odds positive prediction result actual (observed) positive cases respect odds positive prediction actual negative cases. ratios define follows: \\(posLr = \\frac{recall}{1+specificity} = \\frac{TPR}{FPR}\\) \\(negLr = \\frac{1-recall}{specificity} = \\frac{FNR}{TNR}\\) \\(dor = \\frac{posLr}{negLr}\\) details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/likelihood_ratios.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Likelihood Ratios (Classification) — likelihood_ratios","text":"GlasaJeroen, .S., Lijmer, G., Prins, M.H., Bonsel, G.J., Bossuyta, P.M.M. (2009). diagnostic odds ratio: single indicator test performance. Journal Clinical Epidemiology 56(11): 1129-1135. doi:10.1016/S0895-4356(03)00177-X","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/likelihood_ratios.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Likelihood Ratios (Classification) — likelihood_ratios","text":"","code":"# \\donttest{ set.seed(123) # Two-class binomial_case <- data.frame(labels = sample(c(\"True\",\"False\"), 100, replace = TRUE),  predictions = sample(c(\"True\",\"False\"), 100, replace = TRUE)) # Multi-class multinomial_case <- data.frame(labels = sample(c(\"Red\",\"Blue\", \"Green\"), 100, replace = TRUE), predictions = sample(c(\"Red\",\"Blue\", \"Green\"), 100, replace = TRUE)    )  # Get posLr, negLr, and dor for a two-class case posLr(data = binomial_case, obs = labels, pred = predictions, tidy = TRUE) #>       posLr #> 1 0.9807018 negLr(data = binomial_case, obs = labels, pred = predictions, tidy = TRUE) #>      negLr #> 1 1.016781 dor(data = binomial_case, obs = labels, pred = predictions, tidy = TRUE) #>         dor #> 1 0.9645161  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/maize_phenology.html","id":null,"dir":"Reference","previous_headings":"","what":"Multi Class Phenology — maize_phenology","title":"Multi Class Phenology — maize_phenology","text":"example data set includes maize phenology classes collected Kansas 2018 growing season. predicted values obtained using Random Forest classifier 70/30 split. dataset includes 16 phenology stages VT R6. information please visit doi:10.3390/rs14030469 .","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/maize_phenology.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multi Class Phenology — maize_phenology","text":"","code":"maize_phenology"},{"path":"https://adriancorrendo.github.io/metrica/reference/maize_phenology.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Multi Class Phenology — maize_phenology","text":"data frame 103 rows following 2 columns: predicted predicted values actual observed values","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/maize_phenology.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Multi Class Phenology — maize_phenology","text":"https://github.com/adriancorrendo/metrica","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/mcc.html","id":null,"dir":"Reference","previous_headings":"","what":"Matthews Correlation Coefficient — mcc","title":"Matthews Correlation Coefficient — mcc","text":"estimates mcc nominal/categorical predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/mcc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matthews Correlation Coefficient — mcc","text":"","code":"mcc(data = NULL, obs, pred, pos_level = 2, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/mcc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matthews Correlation Coefficient — mcc","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (character | factor). pred Vector predicted values (character | factor). pos_level Integer, binary cases, indicating order (1|2) level corresponding positive. Generally, positive level second (2) since following alpha-numeric order, common pairs (Negative | Positive), (0 | 1), (FALSE | TRUE). Default : 2. tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/mcc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Matthews Correlation Coefficient — mcc","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/mcc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Matthews Correlation Coefficient — mcc","text":"mcc also known phi-coefficient. gained popularity within machine learning community summarize single value confusion matrix binary classification. particularly useful number observations belonging class uneven imbalanced. characterized symmetric (.e. class relevance ). bounded -1 1. closer 1 better classification performance. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/mcc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Matthews Correlation Coefficient — mcc","text":"Chicco, D., Jurman, G. (2020) advantages Matthews correlation coefficient (MCC) F1 score accuracy binary classification evaluation. BMC Genomics 21, 6 (2020). doi:10.1186/s12864-019-6413-7","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/mcc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Matthews Correlation Coefficient — mcc","text":"","code":"# \\donttest{ set.seed(123) # Two-class binomial_case <- data.frame(labels = sample(c(\"True\",\"False\"), 100, replace = TRUE),  predictions = sample(c(\"True\",\"False\"), 100, replace = TRUE))  # Get mcc estimate for two-class case mcc(data = binomial_case, obs = labels, pred = predictions, tidy = TRUE) #>            mcc #> 1 -0.008916106 # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/metrica-package.html","id":null,"dir":"Reference","previous_headings":"","what":"metrica: Prediction Performance Metrics — metrica-package","title":"metrica: Prediction Performance Metrics — metrica-package","text":"compilation 80 functions designed quantitatively visually evaluate prediction performance regression (continuous variables) classification (categorical variables) point-forecast models (e.g. APSIM, DSSAT, DNDC, supervised Machine Learning). regression, includes functions generate plots (scatter, tiles, density, & Bland-Altman plot), estimate error metrics (e.g. MBE, MAE, RMSE), error decomposition (e.g. lack accuracy-precision), model efficiency (e.g. NSE, E1, KGE), indices agreement (e.g. d, RAC), goodness fit (e.g. r, R2), adjusted correlation coefficients (e.g. CCC, dcorr), symmetric regression coefficients (intercept, slope), mean absolute scaled error (MASE) time series predictions. classification (binomial multinomial), offers functions generate plot confusion matrices, estimate performance metrics accuracy, precision, recall, specificity, F-score, Cohen's Kappa, G-mean, many . details visit vignettes https://adriancorrendo.github.io/metrica/.","code":""},{"path":[]},{"path":"https://adriancorrendo.github.io/metrica/reference/metrica-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"metrica: Prediction Performance Metrics — metrica-package","text":"Maintainer: Adrian . Correndo correndo@ksu.edu (ORCID) [copyright holder] Authors: Adrian . Correndo correndo@ksu.edu (ORCID) Luiz H. Moro Rosso lhmrosso@ksu.edu (ORCID) Rai Schwalbert rai.schwalbert@hotmail.com (ORCID) Carlos Hernandez carlosh92@ksu.edu (ORCID) Leonardo M. Bastos leonardombastos@gmail.com (ORCID) Luciana Nieto lnieto@ksu.edu (ORCID) Dean Holzworth dean.holzworth@csiro.au Ignacio . Ciampitti ciampitti@ksu.edu (ORCID)","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/metrics_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Prediction Performance Summary — metrics_summary","title":"Prediction Performance Summary — metrics_summary","text":"estimates group metrics characterizing prediction performance continuous (regression) categorical (classification) predicted-observed dataset. default, calculates available metrics either regression classification.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/metrics_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction Performance Summary — metrics_summary","text":"","code":"metrics_summary(   data = NULL,   obs,   pred,   type = NULL,   metrics_list = NULL,   orientation = \"PO\",   pos_level = 2,   na.rm = TRUE )"},{"path":"https://adriancorrendo.github.io/metrica/reference/metrics_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction Performance Summary — metrics_summary","text":"data argument call existing data frame containing data (optional). obs vector observed values (numeric). pred vector predicted values (numeric). type argument class string specifying type model. continuous variables use type = 'regression'. categorical variables use type = 'classification'. metrics_list vector list specific selected metrics. Default = NULL, estimate metrics available either regression classification. orientation argument class string specifying axis orientation estimate slope(B1) intercept(B0). applies type = \"regression\". \"PO\" predicted vs observed, \"OP\" observed vs predicted. Default orientation = \"PO\". pos_level (classification ). Integer, binary cases, indicating order (1|2) level corresponding positive. Generally, positive level second (2) since following alpha-numeric order, common pairs (Negative | Positive), (0 | 1), (FALSE | TRUE). Default : 2. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/metrics_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prediction Performance Summary — metrics_summary","text":"object class data.frame containing (selected) metrics.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/metrics_summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prediction Performance Summary — metrics_summary","text":"user can choose calculate single metric, calculate metrics . function creates data.frame (selected) metrics metrica-package. looking specific metrics, user can pass list desired metrics using argument “metrics_list” (e.g. metrics_list = c(\"R2\",\"MAE\", \"RMSE\", \"RSR\", \"NSE\", \"KGE\")). entire list available metrics formula, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/metrics_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prediction Performance Summary — metrics_summary","text":"","code":"# \\donttest{ # Continuous variable (regression) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- rnorm(n = 100, mean = 0, sd = 10) regression_case <- data.frame(obs = X, pred = Y)  # Get a metrics summary for a regression problem metrics_summary(regression_case, obs = X, pred = Y, type = \"regression\") #>    Metric         Score #> 1      B0  2.261092e+00 #> 2      B1  9.823083e-01 #> 3       r  3.057903e-02 #> 4      R2  9.350771e-04 #> 5      Xa  9.720574e-01 #> 6     CCC  2.972457e-02 #> 7     MAE  1.094530e+01 #> 8    RMAE -1.017724e+01 #> 9    MAPE -2.233993e+01 #> 10  SMAPE  1.497724e+02 #> 11    RAE  1.452330e+00 #> 12    RSE  1.961015e+00 #> 13    MBE -2.280119e+00 #> 14    PBE  2.120118e+02 #> 15    PAB  2.863901e+00 #> 16    PPB  1.596094e-02 #> 17    MSE  1.815336e+02 #> 18   RMSE  1.347344e+01 #> 19  RRMSE -1.252798e+01 #> 20    RSR  1.455467e-01 #> 21 iqRMSE  1.061780e+00 #> 22    MLA  5.227917e+00 #> 23    MLP  1.763057e+02 #> 24   RMLA  5.227917e+00 #> 25   RMLP  1.763057e+02 #> 26     SB  5.198943e+00 #> 27   SDSD  2.897447e-02 #> 28    LCS  1.763057e+02 #> 29    PLA  2.879862e+00 #> 30    PLP  9.712014e+01 #> 31     Ue  9.712014e+01 #> 32     Uc  1.596094e-02 #> 33     Ub  2.863901e+00 #> 34    NSE -9.610150e-01 #> 35     E1 -4.523297e-01 #> 36   Erel  7.188393e-01 #> 37    KGE -1.992940e+00 #> 38      d  4.208294e-01 #> 39     d1  2.782443e-01 #> 40    d1r  2.738352e-01 #> 41    RAC  5.080269e-01 #> 42     AC -8.388534e-01 #> 43 lambda  2.972457e-02 #> 44  dcorr  1.374032e-01 #> 45    MIC  1.911684e-01  # Categorical variable (classification) binomial_case <- data.frame(labels = sample(c(\"True\",\"False\"), 100,  replace = TRUE), predictions = sample(c(\"True\",\"False\"), 100, replace = TRUE))  #' # Get a metrics summary for a regression problem metrics_summary(binomial_case, obs = labels, pred = predictions, type = \"classification\") #>         Metric       Score #> 1     accuracy  0.48000000 #> 2   error_rate  0.52000000 #> 3    precision  0.45098039 #> 4       recall  0.48936170 #> 5  specificity  0.47169811 #> 6       balacc  0.48052991 #> 7       fscore  0.46938776 #> 8          agf  0.46952858 #> 9        gmean  0.48044874 #> 10        khat -0.03875350 #> 11         mcc -0.03887781 #> 12         fmi  0.46977924 #> 13         bmi -0.03894018 #> 14         csi  0.30263158 #> 15      deltap -0.03881553 #> 16       posLr  0.92629179 #> 17       negLr  1.08255319 #> 18         dor  0.85565476 #> 19         npv  0.51020408 #> 20         FPR  0.52830189 #> 21         FNR  0.51063830 #> 22         FDR  0.54901961 #> 23         FOR  0.48979592 #> 24      preval  0.47000000 #> 25    preval_t  0.49540479 #> 26     AUC_roc  0.47035256 # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/npv.html","id":null,"dir":"Reference","previous_headings":"","what":"Negative Predictive Value — npv","title":"Negative Predictive Value — npv","text":"npv estimates npv (.k.. positive predictive value -PPV-) nominal/categorical predicted-observed dataset. estimates false omission rate, complement negative predictive value nominal/categorical predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/npv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Negative Predictive Value — npv","text":"","code":"npv(   data = NULL,   obs,   pred,   atom = FALSE,   pos_level = 2,   tidy = FALSE,   na.rm = TRUE )  FOR(   data = NULL,   obs,   pred,   atom = FALSE,   pos_level = 2,   tidy = FALSE,   na.rm = TRUE )"},{"path":"https://adriancorrendo.github.io/metrica/reference/npv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Negative Predictive Value — npv","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (character | factor). pred Vector predicted values (character | factor). atom Logical operator (TRUE/FALSE) decide estimate made class (atom = TRUE) global level (atom = FALSE); Default : FALSE. pos_level Integer, binary cases, indicating order (1|2) level corresponding positive. Generally, positive level second (2) since following alpha-numeric order, common pairs (Negative | Positive), (0 | 1), (FALSE | TRUE). Default : 2. tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/npv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Negative Predictive Value — npv","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/npv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Negative Predictive Value — npv","text":"npv non-normalized coefficient represents ratio correctly predicted cases (true positive -TP- binary cases) total predicted observations given class (total predicted positive -PP- binary cases) overall level. binomial cases, \\(npv = \\frac{TP}{PP} = \\frac{TP}{TP + FP} \\) npv metric bounded 0 1. closer 1 better. Values towards zero indicate low npv predictions. can estimated particular class global level. false omission rate () represents proportion false negatives respect number negative predictions (PN). binomial cases, \\(= 1 - npv = \\frac{FN}{PN} = \\frac{FN}{TN + FN} \\) npv metric bounded 0 1. closer 1 better. Values towards zero indicate low npv predictions. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/npv.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Negative Predictive Value — npv","text":"Wang H., Zheng H. (2013). Negative Predictive Value. : Dubitzky W., Wolkenhauer O., Cho KH., Yokota H. (eds) Encyclopedia Systems Biology. _ Springer, New York, NY._ doi:10.1007/978-1-4419-9863-7_234 Trevethan, R. (2017). Sensitivity, Specificity, Predictive Values: Foundations, Pliabilities, Pitfalls _ Research Practice. Front. Public Health 5:307_ doi:10.3389/fpubh.2017.00307","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/npv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Negative Predictive Value — npv","text":"","code":"# \\donttest{ set.seed(123) # Two-class binomial_case <- data.frame(labels = sample(c(\"True\",\"False\"), 100,  replace = TRUE), predictions = sample(c(\"True\",\"False\"), 100, replace = TRUE)) # Multi-class multinomial_case <- data.frame(labels = sample(c(\"Red\",\"Blue\", \"Green\"), 100,  replace = TRUE), predictions = sample(c(\"Red\",\"Blue\", \"Green\"), 100, replace = TRUE))  # Get npv estimate for two-class case npv(data = binomial_case, obs = labels, pred = predictions, tidy = TRUE) #>         npv #> 1 0.4259259  # Get fdr estimate for two-class case FDR(data = binomial_case, obs = labels, pred = predictions, tidy = TRUE) #>         FDR #> 1 0.4347826  # Get npv estimate for each class for the multi-class case npv(data = multinomial_case, obs = labels, pred = predictions, tidy = TRUE, atom = TRUE) #>             npv #> Blue  0.6521739 #> Green 0.7428571 #> Red   0.5245902  # Get npv estimate for the multi-class case at a global level npv(data = multinomial_case, obs = labels, pred = predictions, tidy = TRUE, atom = TRUE) #>             npv #> Blue  0.6521739 #> Green 0.7428571 #> Red   0.5245902 # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/precision.html","id":null,"dir":"Reference","previous_headings":"","what":"Precision — precision","title":"Precision — precision","text":"precision estimates precision (.k.. positive predictive value -PPV-) nominal/categorical predicted-observed dataset. FDR estimates complement precision (.k.. positive predictive value -PPV-) nominal/categorical predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/precision.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Precision — precision","text":"","code":"precision(   data = NULL,   obs,   pred,   tidy = FALSE,   atom = FALSE,   na.rm = TRUE,   pos_level = 2 )  FDR(   data = NULL,   obs,   pred,   atom = FALSE,   pos_level = 2,   tidy = FALSE,   na.rm = TRUE )"},{"path":"https://adriancorrendo.github.io/metrica/reference/precision.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Precision — precision","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (character | factor). pred Vector predicted values (character | factor). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. atom Logical operator (TRUE/FALSE) decide estimate made class (atom = TRUE) global level (atom = FALSE); Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE. pos_level Integer, binary cases, indicating order (1|2) level corresponding positive. Generally, positive level second (2) since following alpha-numeric order, common pairs (Negative | Positive), (0 | 1), (FALSE | TRUE). Default : 2.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/precision.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Precision — precision","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/precision.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Precision — precision","text":"precision non-normalized coefficient represents ratio correctly predicted cases (true positive -TP- binary cases) total predicted observations given class (total predicted positive -PP- binary cases) overall level. binomial cases, \\(precision = \\frac{TP}{PP} = \\frac{TP}{TP + FP} \\) precision metric bounded 0 1. closer 1 better. Values towards zero indicate low precision predictions. can estimated particular class global level. false detection rate false discovery rate (FDR) represents proportion false positives respect total number cases predicted positive. binomial cases, \\(FDR = 1 - precision = \\frac{FP}{PP} = \\frac{FP}{TP + FP} \\) precision metric bounded 0 1. closer 1 better. Values towards zero indicate low precision predictions. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/precision.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Precision — precision","text":"Ting K.M. (2017) Precision Recall. : Sammut C., Webb G.. (eds) Encyclopedia Machine Learning Data Mining. Springer, Boston, MA. doi:10.1007/978-1-4899-7687-1_659","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/precision.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Precision — precision","text":"","code":"# \\donttest{ set.seed(123) # Two-class binomial_case <- data.frame(labels = sample(c(\"True\",\"False\"), 100,  replace = TRUE), predictions = sample(c(\"True\",\"False\"), 100, replace = TRUE)) # Multi-class multinomial_case <- data.frame(labels = sample(c(\"Red\",\"Blue\", \"Green\"), 100,  replace = TRUE), predictions = sample(c(\"Red\",\"Blue\", \"Green\"), 100, replace = TRUE))  # Get precision estimate for two-class case precision(data = binomial_case, obs = labels, pred = predictions, tidy = TRUE) #>   precision #> 1 0.5652174  # Get FDR estimate for two-class case FDR(data = binomial_case, obs = labels, pred = predictions, tidy = TRUE) #>         FDR #> 1 0.4347826  # Get precision estimate for each class for the multi-class case precision(data = multinomial_case, obs = labels, pred = predictions, tidy = TRUE, atom = TRUE) #>       precision #> Blue  0.2903226 #> Green 0.1666667 #> Red   0.3846154  # Get precision estimate for the multi-class case at a global level precision(data = multinomial_case, obs = labels, pred = predictions, tidy = TRUE, atom = TRUE) #>       precision #> Blue  0.2903226 #> Green 0.1666667 #> Red   0.3846154 # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/prevalence.html","id":null,"dir":"Reference","previous_headings":"","what":"Prevalence — prevalence","title":"Prevalence — prevalence","text":"preval estimates prevalence positive cases nominal/categorical predicted-observed dataset. preval_t estimates prevalence threshold binary predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/prevalence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prevalence — prevalence","text":"","code":"preval(   data = NULL,   obs,   pred,   atom = FALSE,   pos_level = 2,   tidy = FALSE,   na.rm = TRUE )  preval_t(   data = NULL,   obs,   pred,   atom = FALSE,   pos_level = 2,   tidy = FALSE,   na.rm = TRUE )"},{"path":"https://adriancorrendo.github.io/metrica/reference/prevalence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prevalence — prevalence","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (character | factor). pred Vector predicted values (character | factor). atom Logical operator (TRUE/FALSE) decide estimate made class (atom = TRUE) global level (atom = FALSE); Default : FALSE. pos_level Integer, binary cases, indicating order (1|2) level corresponding positive. Generally, positive level second (2) since following alpha-numeric order, common pairs (Negative | Positive), (0 | 1), (FALSE | TRUE). Default : 2. tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/prevalence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prevalence — prevalence","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/prevalence.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prevalence — prevalence","text":"prevalence measures overall proportion actual positives respect total number observations. Currently, defined binary cases . general formula : \\(preval = \\frac{positive}{positive + negative} \\) prevalence threshold represents point ROC curve (function sensitivity (recall) specificity) precision (PPV) dramatically drops. \\(preval_t = \\frac{\\sqrt{TPR * FPR} - FPR}{TPR - FPR} \\) bounded 0 1. closer 1 better. Values towards zero indicate low performance. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/prevalence.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Prevalence — prevalence","text":"Freeman, E.., Moisen, G.G. (2008). comparison performance threshold criteria binary classification terms predicted prevalence kappa. . Ecol. Modell. 217(1-2): 45-58. doi:10.1016/j.ecolmodel.2008.05.015 Balayla, J. (2020). Prevalence threshold geometry screening curves. _Plos one, 15(10):e0240215, _ doi:10.1371/journal.pone.0240215","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/prevalence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prevalence — prevalence","text":"","code":"# \\donttest{ set.seed(123) # Two-class binomial_case <- data.frame(labels = sample(c(\"True\",\"False\"), 100, replace = TRUE),  predictions = sample(c(\"True\",\"False\"), 100, replace = TRUE)) # Multi-class multinomial_case <- data.frame(labels = sample(c(\"Red\",\"Blue\", \"Green\"), 100, replace = TRUE), predictions = sample(c(\"Red\",\"Blue\", \"Green\"), 100, replace = TRUE)    )  # Get prevalence estimate for two-class case preval(data = binomial_case, obs = labels, pred = predictions, tidy = TRUE) #>   prev #> 1 0.57  # Get prevalence estimate for each class for the multi-class case preval(data = multinomial_case, obs = labels, pred = predictions, atom = TRUE) #> $prev #>  Blue Green   Red  #>  0.33  0.23  0.44  #>   # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/r.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Correlation Coefficient (r) — r","title":"Sample Correlation Coefficient (r) — r","text":"estimates Pearson's coefficient correlation (r) continuous predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/r.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Correlation Coefficient (r) — r","text":"","code":"r(data = NULL, obs, pred, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/r.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample Correlation Coefficient (r) — r","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/r.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample Correlation Coefficient (r) — r","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/r.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample Correlation Coefficient (r) — r","text":"r coefficient measures strength linear relationship two variables. accounts precision, sensitive lack prediction accuracy. normalized, dimensionless coefficient, ranges -1 1. expected predicted observed values show 0 < r < 1. also known Pearson Product Moment Correlation, among names. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/r.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sample Correlation Coefficient (r) — r","text":"Kirch (2008) Pearson’s Correlation Coefficient. : Kirch W. (eds) Encyclopedia Public Health. Springer, Dordrecht. doi:10.1007/978-1-4020-5614-7_2569","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/r.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample Correlation Coefficient (r) — r","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) Y <- X + rnorm(n=100, mean = 0, sd = 3) r(obs = X, pred = Y) #> $r #> [1] 0.9524145 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/recall.html","id":null,"dir":"Reference","previous_headings":"","what":"Recall | Sensitivity | True Positive Rate — recall","title":"Recall | Sensitivity | True Positive Rate — recall","text":"recall estimates recall (.k.. sensitivity true positive rate -TPR-) nominal/categorical predicted-observed dataset. TNR alternative renamed version recall(). FNR estimates false negative rate (false alarm, fall-) nominal/categorical predicted-observed dataset.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/recall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recall | Sensitivity | True Positive Rate — recall","text":"","code":"recall(   data = NULL,   obs,   pred,   atom = FALSE,   pos_level = 2,   tidy = FALSE,   na.rm = TRUE )  TPR(   data = NULL,   obs,   pred,   atom = FALSE,   pos_level = 2,   tidy = FALSE,   na.rm = TRUE )  FNR(   data = NULL,   obs,   pred,   atom = FALSE,   pos_level = 2,   tidy = FALSE,   na.rm = TRUE )"},{"path":"https://adriancorrendo.github.io/metrica/reference/recall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recall | Sensitivity | True Positive Rate — recall","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (character | factor). pred Vector predicted values (character | factor). atom Logical operator (TRUE/FALSE) decide estimate made class (atom = TRUE) global level (atom = FALSE); Default : FALSE. dataset \"binomial\" atom apply. pos_level Integer, binary cases, indicating order (1|2) level corresponding positive. Generally, positive level second (2) since following alpha-numeric order, common pairs (Negative | Positive), (0 | 1), (FALSE | TRUE). Default : 2. tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/recall.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recall | Sensitivity | True Positive Rate — recall","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/recall.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recall | Sensitivity | True Positive Rate — recall","text":"recall (.k.. sensitivity true positive rate -TPR-) non-normalized coefficient represents ratio correctly predicted cases (true positives -TP-) total number actual observations belong given class (actual positives -P-). binomial cases, \\(recall  =  \\frac{TP}{P} = \\frac{TP}{TP + FN} \\) recall metric bounded 0 1. closer 1 better. Values towards zero indicate low performance. can either estimated particular class global level. false negative rate (false alarm, fall-) complement recall, representing ratio number false negatives (FN) actual number positives (P). FNR formula : \\(FNR = 1 - recall = 1 - TPR = \\frac{FN}{P}\\) fpr bounded 0 1. closer 0 better. Low performance indicated fpr > 0.5. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/recall.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Recall | Sensitivity | True Positive Rate — recall","text":"Ting K.M. (2017) Precision Recall. : Sammut C., Webb G.. (eds) Encyclopedia Machine Learning Data Mining. Springer, Boston, MA. doi:10.1007/978-1-4899-7687-1_659 Ting K.M. (2017). Sensitivity. : Sammut C., Webb G.. (eds) Encyclopedia Machine Learning Data Mining. Springer, Boston, MA. doi:10.1007/978-1-4899-7687-1_751 Trevethan, R. (2017). Sensitivity, Specificity, Predictive Values: Foundations, Pliabilities, Pitfalls _ Research Practice. Front. Public Health 5:307_ doi:10.3389/fpubh.2017.00307","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/recall.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recall | Sensitivity | True Positive Rate — recall","text":"","code":"# \\donttest{ set.seed(123) # Two-class binomial_case <- data.frame(labels = sample(c(\"True\",\"False\"), 100,  replace = TRUE), predictions = sample(c(\"True\",\"False\"), 100, replace = TRUE))  # Multi-class multinomial_case <- data.frame(labels = sample(c(\"Red\",\"Blue\", \"Green\"), 100,  replace = TRUE), predictions = sample(c(\"Red\",\"Blue\", \"Green\"), 100, replace = TRUE))  # Get recall estimate for two-class case at global level recall(data = binomial_case, obs = labels, pred = predictions, tidy = TRUE) #>      recall #> 1 0.4561404  # Get FNR estimate for two-class case at global level FNR(data = binomial_case, obs = labels, pred = predictions, tidy = TRUE) #>         FNR #> 1 0.5438596  # Get recall estimate for each class for the multi-class case at global level recall(data = multinomial_case, obs = labels, pred = predictions, tidy = TRUE,  atom = FALSE) #>      recall #> 1 0.2770092  # Get recall estimate for the multi-class case at a class-level recall(data = multinomial_case, obs = labels, pred = predictions, tidy = TRUE, atom = TRUE) #>          recall #> Blue  0.2727273 #> Green 0.2173913 #> Red   0.3409091 # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/scatter_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Scatter plot of predicted and observed values — scatter_plot","title":"Scatter plot of predicted and observed values — scatter_plot","text":"draws scatter plot predictions observations alternative axis orientation (P vs. O; O vs. P).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/scatter_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scatter plot of predicted and observed values — scatter_plot","text":"","code":"scatter_plot(   data = NULL,   obs,   pred,   orientation = \"PO\",   print_metrics = FALSE,   metrics_list = NULL,   position_metrics = c(x = NULL, y = NULL),   print_eq = TRUE,   position_eq = c(x = NULL, y = NULL),   eq_color = NULL,   shape_type = NULL,   shape_size = NULL,   shape_color = NULL,   regline_type = NULL,   regline_size = NULL,   regline_color = NULL,   na.rm = TRUE )"},{"path":"https://adriancorrendo.github.io/metrica/reference/scatter_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scatter plot of predicted and observed values — scatter_plot","text":"data (Optional) argument call existing data frame data. obs Vector observed values (numeric). pred Vector predicted values (numeric). orientation Argument class string specifying axis orientation, PO predicted vs observed, OP observed vs predicted. Default orientation = \"PO\". print_metrics boolean TRUE/FALSE embed metrics plot. Default FALSE. metrics_list vector list selected metrics print plot. position_metrics vector list '(x,y)' coordinates locate metrics_table plot. Default : c(x = min(obs), y = 1.05*max(pred)). print_eq boolean TRUE/FALSE embed metrics plot. Default FALSE. position_eq vector list '(x,y)' coordinates locate SMA equation plot. Default : c(x = 0.70 max(x), y = 1.25*min(y)). eq_color string indicating color SMA-regression text. shape_type integer indicating shape type data points. shape_size number indicating shape size data points. shape_color string indicating shape color data points. regline_type string integer indicating SMA-regression line-type. regline_size number indicating SMA-regression line size. regline_color string indicating SMA-regression line color. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/scatter_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scatter plot of predicted and observed values — scatter_plot","text":"object class ggplot.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/scatter_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scatter plot of predicted and observed values — scatter_plot","text":"creates scatter plot predicted vs. observed values. plot also includes 1:1 line (solid line) linear regression line (dashed line). default, places observed x-axis predicted y-axis (orientation = \"PO\"). can inverted changing argument orientation = “OP\". details, see online-documentation","code":""},{"path":[]},{"path":"https://adriancorrendo.github.io/metrica/reference/scatter_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scatter plot of predicted and observed values — scatter_plot","text":"","code":"# \\donttest{ X <- rnorm(n = 100, mean = 0, sd = 10) Y <- rnorm(n = 100, mean = 0, sd = 10) scatter_plot(obs = X, pre = Y)  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/sorghum.html","id":null,"dir":"Reference","previous_headings":"","what":"Sorghum grain number — sorghum","title":"Sorghum grain number — sorghum","text":"example dataset set APSIM simulations sorghum grain number (x1000 grains per squared meter), exhibits low accuracy low precision represents model still development. experimental trials come 6 site-years 1 country (Australia). data correspond latest, --date, documentation validation version number 2020.03.27.4956. Data available : doi:10.7910/DVN/EJS4M0 . details can found official APSIM Next Generation website: https://APSIMnextgeneration.netlify.app/modeldocumentation/","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/sorghum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sorghum grain number — sorghum","text":"","code":"sorghum"},{"path":"https://adriancorrendo.github.io/metrica/reference/sorghum.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sorghum grain number — sorghum","text":"data frame 36 rows following 2 columns: pred predicted values obs observed values","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/sorghum.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sorghum grain number — sorghum","text":"https://github.com/adriancorrendo/metrica","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/specificity.html","id":null,"dir":"Reference","previous_headings":"","what":"Specificity  | True Negative Rate — specificity","title":"Specificity  | True Negative Rate — specificity","text":"specificity estimates specificity (.k.. selectivity, true negative rate -TNR-) nominal/categorical predicted-observed dataset. FPR estimates false positive rate (.k.fall-false alarm) nominal/categorical predicted-observed dataset. TNR alternative renamed version specificity().","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/specificity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specificity  | True Negative Rate — specificity","text":"","code":"specificity(   data = NULL,   obs,   pred,   atom = FALSE,   pos_level = 2,   tidy = FALSE,   na.rm = TRUE )  FPR(   data = NULL,   obs,   pred,   atom = FALSE,   pos_level = 2,   tidy = FALSE,   na.rm = TRUE )  TNR(   data = NULL,   obs = NULL,   pred = NULL,   atom = FALSE,   pos_level = 2,   tidy = FALSE,   na.rm = TRUE )"},{"path":"https://adriancorrendo.github.io/metrica/reference/specificity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specificity  | True Negative Rate — specificity","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (character | factor). pred Vector predicted values (character | factor). atom Logical operator (TRUE/FALSE) decide estimate made class (atom = TRUE) global level (atom = FALSE); Default : FALSE. dataset \"binomial\" atom apply. pos_level Integer, binary cases, indicating order (1|2) level corresponding positive. Generally, positive level second (2) since following alpha-numeric order, common pairs (Negative | Positive), (0 | 1), (FALSE | TRUE). Default : 2. tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/specificity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specificity  | True Negative Rate — specificity","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/specificity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specificity  | True Negative Rate — specificity","text":"specificity (selectivity, true negative rate-TNR-) non-normalized coefficient represents ratio correctly negative predicted cases (true negative -TN- binary cases) total number actual observations belonging given class (actual negatives -N- binary cases). binomial cases, \\(specificity  =  \\frac{TN}{N} = \\frac{TN}{TN+FP}\\) specificity metric bounded 0 1. closer 1 better. Values towards zero indicate low performance. multinomial cases, can either estimated particular class global level. false positive rate (false alarm, fall-) complement specificity, representing ratio number false positives (FP) actual number negatives (N). FPR formula : \\(FPR = 1 - specificity = 1 - TNR = \\frac{FP}{N}\\) FPR bounded 0 1. closer 0 better. Low performance indicated FPR > 0.5. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/specificity.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Specificity  | True Negative Rate — specificity","text":"Ting K.M. (2017) Sensitivity Specificity. : Sammut C., Webb G.. (eds) Encyclopedia Machine Learning Data Mining. Springer, Boston, MA. doi:10.1007/978-0-387-30164-8_752 Trevethan, R. (2017). Sensitivity, Specificity, Predictive Values: Foundations, Pliabilities, Pitfalls _ Research Practice. Front. Public Health 5:307_ doi:10.3389/fpubh.2017.00307","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/specificity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specificity  | True Negative Rate — specificity","text":"","code":"# \\donttest{ set.seed(123) # Two-class binomial_case <- data.frame(labels = sample(c(\"True\",\"False\"), 100,  replace = TRUE), predictions = sample(c(\"True\",\"False\"), 100, replace = TRUE)) # Multi-class multinomial_case <- data.frame(labels = sample(c(\"Red\",\"Blue\", \"Green\"), 100,  replace = TRUE), predictions = sample(c(\"Red\",\"Blue\", \"Green\"), 100, replace = TRUE)    )  # Get specificity and FPR estimates for two-class case specificity(data = binomial_case, obs = labels, pred = predictions, tidy = TRUE) #>        spec #> 1 0.5348837 FPR(data = binomial_case, obs = labels, pred = predictions, tidy = TRUE) #>         FPR #> 1 0.4651163  # Get specificity estimate for each class for the multi-class case specificity(data = multinomial_case, obs = labels, pred = predictions, tidy = TRUE) #>       spec #> 1 0.639465  # Get specificity estimate for the multi-class case at a global level specificity(data = multinomial_case, obs = labels, pred = predictions, tidy = TRUE) #>       spec #> 1 0.639465 # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/tiles_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Tiles plot of predicted and observed values — tiles_plot","title":"Tiles plot of predicted and observed values — tiles_plot","text":"draws tiles plot predictions observations alternative axis orientation (P vs. O; O vs. P).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/tiles_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tiles plot of predicted and observed values — tiles_plot","text":"","code":"tiles_plot(   data = NULL,   obs,   pred,   bins = 10,   colors = c(low = NULL, high = NULL),   orientation = \"PO\",   print_metrics = FALSE,   metrics_list = NULL,   position_metrics = c(x = NULL, y = NULL),   print_eq = TRUE,   position_eq = c(x = NULL, y = NULL),   eq_color = NULL,   regline_type = NULL,   regline_size = NULL,   regline_color = NULL,   na.rm = TRUE )"},{"path":"https://adriancorrendo.github.io/metrica/reference/tiles_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tiles plot of predicted and observed values — tiles_plot","text":"data (Optional) argument call existing data frame containing data. obs Vector observed values (numeric). pred Vector predicted values (numeric). bins Argument class numeric specifying number bins create tiles. colors Vector list two colors '(low, high)' paint density gradient. orientation Argument class string specifying axis orientation, PO predicted vs observed, OP observed vs predicted. Default orientation = \"PO\". print_metrics boolean TRUE/FALSE embed metrics plot. Default FALSE. metrics_list vector list selected metrics print plot. position_metrics vector list '(x,y)' coordinates locate metrics_table plot. Default : c(x = min(obs), y = 1.05*max(pred)). print_eq boolean TRUE/FALSE embed metrics plot. Default FALSE. position_eq vector list '(x,y)' coordinates locate SMA equation plot. Default : c(x = 0.70 max(x), y = 1.25*min(y)). eq_color string indicating color SMA-regression text. regline_type string integer indicating SMA-regression line-type. regline_size number indicating SMA-regression line size. regline_color string indicating SMA-regression line color. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/tiles_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tiles plot of predicted and observed values — tiles_plot","text":"Object class ggplot.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/tiles_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tiles plot of predicted and observed values — tiles_plot","text":"creates tiles plot predicted vs. observed values. plot also includes 1:1 line (solid line) linear regression line (dashed line). default, places observed x-axis predicted y-axis (orientation = \"PO\"). can inverted changing argument orientation = “OP\". details, see online-documentation","code":""},{"path":[]},{"path":"https://adriancorrendo.github.io/metrica/reference/tiles_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tiles plot of predicted and observed values — tiles_plot","text":"","code":"# \\donttest{ X <- rnorm(n = 100, mean = 0, sd = 10) Y <- rnorm(n = 100, mean = 0, sd = 10) tiles_plot(obs = X, pred = Y)  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/uSD.html","id":null,"dir":"Reference","previous_headings":"","what":"Uncorrected Standard Deviation — uSD","title":"Uncorrected Standard Deviation — uSD","text":"estimates (uSD) observed predicted values.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/uSD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uncorrected Standard Deviation — uSD","text":"","code":"uSD(data = NULL, x, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/uSD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uncorrected Standard Deviation — uSD","text":"data (Optional) argument call existing data frame containing data. x Vector numeric observed predicted values. tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/uSD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uncorrected Standard Deviation — uSD","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/uSD.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Uncorrected Standard Deviation — uSD","text":"uSD sample, uncorrected standard deviation. square root mean sum squared differences vector values respect mean. uncorrected divided sample size (n), n-1. formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/uSD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Uncorrected Standard Deviation — uSD","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) uSD(x = X) #> $uSD #> [1] 8.936971 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/var_u.html","id":null,"dir":"Reference","previous_headings":"","what":"Uncorrected Variance (var_u) — var_u","title":"Uncorrected Variance (var_u) — var_u","text":"estimates var_u observed predicted values.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/var_u.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uncorrected Variance (var_u) — var_u","text":"","code":"var_u(data = NULL, x, tidy = FALSE, na.rm = TRUE)"},{"path":"https://adriancorrendo.github.io/metrica/reference/var_u.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uncorrected Variance (var_u) — var_u","text":"data (Optional) argument call existing data frame containing data. x Vector numeric elements. tidy Logical operator (TRUE/FALSE) decide type return. TRUE returns data.frame, FALSE returns list; Default : FALSE. na.rm Logic argument remove rows missing values (NA). Default na.rm = TRUE.","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/var_u.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uncorrected Variance (var_u) — var_u","text":"object class numeric within list (tidy = FALSE) within data frame (tidy = TRUE).","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/var_u.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Uncorrected Variance (var_u) — var_u","text":"var_u sample, uncorrected variance. calculated mean sum squared differences values x mean, divided sample size (n). uncorrected divided n, n-1 (traditional variance). formula details, see online-documentation","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/var_u.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Uncorrected Variance (var_u) — var_u","text":"","code":"# \\donttest{ set.seed(1) X <- rnorm(n = 100, mean = 0, sd = 10) var_u(x = X) #> $var_u #> [1] 79.86945 #>  # }"},{"path":"https://adriancorrendo.github.io/metrica/reference/wheat.html","id":null,"dir":"Reference","previous_headings":"","what":"Wheat grain nitrogen — wheat","title":"Wheat grain nitrogen — wheat","text":"example dataset set APSIM simulations wheat grain N (grams per squared meter), presents high accuracy high precision. experimental trials come 11 site-years 4 countries (Australia, Ethiopia, New Zealand, Turkey). data correspond latest, --date, documentation validation version number 2020.03.27.4956. Data available : doi:10.7910/DVN/EJS4M0 . details can found official APSIM Next Generation website: https://APSIMnextgeneration.netlify.app/modeldocumentation/","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/wheat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wheat grain nitrogen — wheat","text":"","code":"wheat"},{"path":"https://adriancorrendo.github.io/metrica/reference/wheat.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Wheat grain nitrogen — wheat","text":"data frame 137 rows following 2 columns: pred predicted values obs observed values","code":""},{"path":"https://adriancorrendo.github.io/metrica/reference/wheat.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Wheat grain nitrogen — wheat","text":"https://github.com/adriancorrendo/metrica","code":""},{"path":"https://adriancorrendo.github.io/metrica/news/index.html","id":"metrica-201999","dir":"Changelog","previous_headings":"","what":"metrica 2.0.1.999","title":"metrica 2.0.1.999","text":"December 22nd, 2022. Fix typos documentation RRMSE, RSR, iqRMSE, formulas corrected (removing 100 beginning formulas. November 3rd, 2022. new development version fixes minor bugs found v2.0.1: Adding “Contributing”” “Code conduct”” sections README file. Adding “CODE_OF_CONDUCT.md” file. Adding list abbreviations used vignette “Available Classification Metrics”. Fixing bug PLA PLP formulas, working data argument specified. Corrects, DESCRIPTION file, minimum R version required (2.1.0 3.6.2) Including “extdata” directory containing APSIM example files (soybean.& soybean.example.db)","code":""},{"path":"https://adriancorrendo.github.io/metrica/news/index.html","id":null,"dir":"Changelog","previous_headings":"","what":"metrica 2.0.1.999","title":"metrica 2.0.1.999","text":"PREVIOUS VERSIONS","code":""},{"path":"https://adriancorrendo.github.io/metrica/news/index.html","id":"metrica-201","dir":"Changelog","previous_headings":"","what":"metrica 2.0.1","title":"metrica 2.0.1","text":"CRAN release: 2022-07-24 July 23th, 2022. new version fixes minor bugs found v2.0.0: regression lines “OP” orientation scatter_plot(), density_plot(), tiles_plot(), producing “PO” oriented regression lines instead. estimation “d1r” index regression, produced misleading values due typo denominator. printing metrics confusion matrix, produced NaN printing 9 metrics.","code":""},{"path":"https://adriancorrendo.github.io/metrica/news/index.html","id":"metrica-200","dir":"Changelog","previous_headings":"","what":"metrica 2.0.0","title":"metrica 2.0.0","text":"CRAN release: 2022-07-05 July 4th, 2022. new version metrica includes: Twenty-seven (27) additional functions evaluate quality predictions classification problems: confusion_matrix(): Confusion matrix (data.frame plot). accuracy(): Accuracy. error_rate(): Error Rate, misclassification rate. precision(): Precision. recall(): Recall, sensitivity, true positive rate. specificity(): Specificity, selectivity, true negative rate. fscore(): F-score. agf(): Adjusted F-score. gmean(): G-mean. khat(): Cohen’s Kappa Coefficient. baccu(): Balanced Accuracy. mcc(): Matthews Correlation Coefficient. fmi(): Fowlkes-Mallows Index. bmi(): Informedness, Bookmaker Index. csi(): Critical Success Index, Threat Score, Jaccard Index. deltap(): Markedness deltaP. posLr(): Positive Likelihood Ratio. negLr(): Negative Likelihood Ratio. dor(): Diagnostic Odds Ratio. npv(): Negative Predictive Value. FPR(): False Positive Rate, false alarm, fall-. FNR(): False Negative Rate, miss rate. FDR(): False Detection Rate, False Discovery Rate. (): False Omission Rate. preval(): Prevalence. preval_t(): Prevalence threshold. AUC_roc(): Area ROC Curve (trapezoid approach). Three (3) additional functions family regression performance metrics: MASE() (Mean Absolute Scaled Error) Time Series Analysis. dcorr() (Distance correlation) wrapper dcor() energy package (https://CRAN.R-project.org/package=energy), MIC() (Maximal Information Coefficient) wrapper mine_stat() minerva package (https://CRAN.R-project.org/package=minerva). RMLA() (Root Mean Lack Accuracy) RMLP() (Root Mean Lack Precision) Update metrics_summary() function including: run performance metrics summary either “regression” “classification” using new type argument, ‘required’ specify type prediction task. pos_level argument, binomial classification, allow user specify alphanumeric order “positive” level.  One (1) additional plotting function regression: density_plot(), create plot paints density areas predicted observed coordinates. Fixing issue tiles_plot() plotting hexagons. Changed ggplot2::geom_hex() ggplot2::stat_bin2d Seventeen (17) additional arguments customize scatter_plot, tiles_plot, density_plot: print_eq (print equation ) position_metrics (customize position metrics_table print_metrics = TRUE) position_eq (customize position equation print_eq = TRUE) eq_color (customize color equation print_eq = TRUE) colors (tile_plot density_plot, paint gradient “low” “high” density points) shape_type (customize shape scatter_plot() bland_altman_plot()) shape_size (customize shape scatter_plot() bland_altman_plot()) shape_color (customize shape scatter_plot() bland_altman_plot()) regline_type (customize regression line scatter_plot(), tiles_plot, density_plot()) regline_size (customize regression line scatter_plot(), tiles_plot, density_plot()) regline_color (customize regression line scatter_plot(), tiles_plot, density_plot()) zeroline_type (customize lines bland_altman_plot()) zeroline_size (customize lines bland_altman_plot()) zeroline_color (customize lines bland_altman_plot()) limitsline_type (customize lines bland_altman_plot()) limitsline_size (customize lines bland_altman_plot()) limitsline_color (customize lines bland_altman_plot()) Adding argument tidy metrics functions, allows control user type return (tidy=TRUE returns data.frame, tidy = FALSE returns list) Fixing minor bug NSE() function estimate Nash-Sutcliffe model efficiency produced values NSE=1.00 v1.2.3. Improved coverage code testing. README update new features descriptions links vignettes. Updated vignettes creating independent versions classification regression models, importing APSIM files.","code":""},{"path":"https://adriancorrendo.github.io/metrica/news/index.html","id":"metrica-123","dir":"Changelog","previous_headings":"","what":"metrica 1.2.3","title":"metrica 1.2.3","text":"CRAN release: 2022-05-12 May, 10, 2022. Maintenance update fixing minor errors feedback CRAN submission v1.2.2 (e.g. use ‘donttest’ instead ‘dontrun’ functions’ examples, adding references functions). Also, available metrics vignette updated adding corresponding citations formulae used functions.","code":""},{"path":"https://adriancorrendo.github.io/metrica/news/index.html","id":"metrica-122","dir":"Changelog","previous_headings":"","what":"metrica 1.2.2","title":"metrica 1.2.2","text":"May, 05, 2022. Maintenance update fixing minor bugs related checks CRAN submission (e.g. spelling check, URLs, DOIs, etc.)","code":""},{"path":"https://adriancorrendo.github.io/metrica/news/index.html","id":"metrica-121","dir":"Changelog","previous_headings":"","what":"metrica 1.2.1","title":"metrica 1.2.1","text":"Minor updates (1.2.1): Update function arguments’ names replacing “.” “_“: Old | New import.apsim.| import_apsim_out import.apsim.db | import_apsim_db metrics.summary | metrics_summary scatter.plot | scatter_plot tiles.plot | tiles_plot bland.altman.plot | bland_altman_plot B0.sma | B0_sma B1.sma | B1_sma metrics.list | metrics_list print.metrics | print_metrics New features (1.2.0) Data: new (Optional) arg. called “data” included functions, serves call existing data frame containing predicted-observed data. facilitates passing functions multiple nested data frames using mapping functions. APSIM: includes two new functions read APSIM output files APSIM Classic [“*.”, import.apsim.()] APSIM NextGen [“*.db”, import.apsim.db()].","code":""}]
